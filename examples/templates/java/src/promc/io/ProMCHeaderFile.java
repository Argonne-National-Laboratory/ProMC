// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProMCHeader.proto

package promc.io;

public final class ProMCHeaderFile {
  private ProMCHeaderFile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ProMCHeaderOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 id1 = 1;
    /**
     * <code>optional int32 id1 = 1;</code>
     *
     * <pre>
     * used to store the global information for all events
     * </pre>
     */
    boolean hasId1();
    /**
     * <code>optional int32 id1 = 1;</code>
     *
     * <pre>
     * used to store the global information for all events
     * </pre>
     */
    int getId1();

    // optional int32 id2 = 2;
    /**
     * <code>optional int32 id2 = 2;</code>
     *
     * <pre>
     * flavour code of second parton
     * </pre>
     */
    boolean hasId2();
    /**
     * <code>optional int32 id2 = 2;</code>
     *
     * <pre>
     * flavour code of second parton
     * </pre>
     */
    int getId2();

    // optional int32 pdf_id1 = 3;
    /**
     * <code>optional int32 pdf_id1 = 3;</code>
     *
     * <pre>
     * LHAPDF set id of first parton 
     * </pre>
     */
    boolean hasPdfId1();
    /**
     * <code>optional int32 pdf_id1 = 3;</code>
     *
     * <pre>
     * LHAPDF set id of first parton 
     * </pre>
     */
    int getPdfId1();

    // optional int32 pdf_id2 = 4;
    /**
     * <code>optional int32 pdf_id2 = 4;</code>
     *
     * <pre>
     * LHAPDF set id of second parton
     * </pre>
     */
    boolean hasPdfId2();
    /**
     * <code>optional int32 pdf_id2 = 4;</code>
     *
     * <pre>
     * LHAPDF set id of second parton
     * </pre>
     */
    int getPdfId2();

    // optional double x1 = 5;
    /**
     * <code>optional double x1 = 5;</code>
     *
     * <pre>
     * fraction of beam momentum carried by first parton (”beam side”)
     * </pre>
     */
    boolean hasX1();
    /**
     * <code>optional double x1 = 5;</code>
     *
     * <pre>
     * fraction of beam momentum carried by first parton (”beam side”)
     * </pre>
     */
    double getX1();

    // optional double x2 = 6;
    /**
     * <code>optional double x2 = 6;</code>
     *
     * <pre>
     * fraction of beam momentum carried by second parton (”target side”)
     * </pre>
     */
    boolean hasX2();
    /**
     * <code>optional double x2 = 6;</code>
     *
     * <pre>
     * fraction of beam momentum carried by second parton (”target side”)
     * </pre>
     */
    double getX2();

    // optional double scalepdf = 7;
    /**
     * <code>optional double scalepdf = 7;</code>
     *
     * <pre>
     * Q-scale used in evaluation of PDF’s (in GeV)
     * </pre>
     */
    boolean hasScalepdf();
    /**
     * <code>optional double scalepdf = 7;</code>
     *
     * <pre>
     * Q-scale used in evaluation of PDF’s (in GeV)
     * </pre>
     */
    double getScalepdf();

    // optional int32 pdf1 = 8;
    /**
     * <code>optional int32 pdf1 = 8;</code>
     *
     * <pre>
     *  PDF (id1, x1, Q) This should be of the form x*f(x)
     * </pre>
     */
    boolean hasPdf1();
    /**
     * <code>optional int32 pdf1 = 8;</code>
     *
     * <pre>
     *  PDF (id1, x1, Q) This should be of the form x*f(x)
     * </pre>
     */
    int getPdf1();

    // optional int32 pdf2 = 9;
    /**
     * <code>optional int32 pdf2 = 9;</code>
     *
     * <pre>
     *  PDF (id2, x2, Q) This should be of the form x*f(x)
     * </pre>
     */
    boolean hasPdf2();
    /**
     * <code>optional int32 pdf2 = 9;</code>
     *
     * <pre>
     *  PDF (id2, x2, Q) This should be of the form x*f(x)
     * </pre>
     */
    int getPdf2();

    // optional double eCM = 10;
    /**
     * <code>optional double eCM = 10;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    boolean hasECM();
    /**
     * <code>optional double eCM = 10;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    double getECM();

    // optional double s = 11;
    /**
     * <code>optional double s = 11;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    boolean hasS();
    /**
     * <code>optional double s = 11;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    double getS();

    // optional string name = 12;
    /**
     * <code>optional string name = 12;</code>
     *
     * <pre>
     * process name 
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 12;</code>
     *
     * <pre>
     * process name 
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 12;</code>
     *
     * <pre>
     * process name 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 code = 13;
    /**
     * <code>optional int32 code = 13;</code>
     *
     * <pre>
     * process code 
     * </pre>
     */
    boolean hasCode();
    /**
     * <code>optional int32 code = 13;</code>
     *
     * <pre>
     * process code 
     * </pre>
     */
    int getCode();

    // optional double cross_section = 14;
    /**
     * <code>optional double cross_section = 14;</code>
     *
     * <pre>
     *  cross section in pb
     * </pre>
     */
    boolean hasCrossSection();
    /**
     * <code>optional double cross_section = 14;</code>
     *
     * <pre>
     *  cross section in pb
     * </pre>
     */
    double getCrossSection();

    // optional double cross_section_error = 15;
    /**
     * <code>optional double cross_section_error = 15;</code>
     *
     * <pre>
     *  error associated with this cross section in pb 
     * </pre>
     */
    boolean hasCrossSectionError();
    /**
     * <code>optional double cross_section_error = 15;</code>
     *
     * <pre>
     *  error associated with this cross section in pb 
     * </pre>
     */
    double getCrossSectionError();

    // optional int32 MomentumUnit = 16;
    /**
     * <code>optional int32 MomentumUnit = 16;</code>
     *
     * <pre>
     * values are MEV or GEV
     * </pre>
     */
    boolean hasMomentumUnit();
    /**
     * <code>optional int32 MomentumUnit = 16;</code>
     *
     * <pre>
     * values are MEV or GEV
     * </pre>
     */
    int getMomentumUnit();

    // optional int32 LengthUnit = 17;
    /**
     * <code>optional int32 LengthUnit = 17;</code>
     *
     * <pre>
     * values are MM or CM
     * </pre>
     */
    boolean hasLengthUnit();
    /**
     * <code>optional int32 LengthUnit = 17;</code>
     *
     * <pre>
     * values are MM or CM
     * </pre>
     */
    int getLengthUnit();

    // optional string NameMomentumUnit = 18;
    /**
     * <code>optional string NameMomentumUnit = 18;</code>
     *
     * <pre>
     * return the unit designation as a string
     * </pre>
     */
    boolean hasNameMomentumUnit();
    /**
     * <code>optional string NameMomentumUnit = 18;</code>
     *
     * <pre>
     * return the unit designation as a string
     * </pre>
     */
    java.lang.String getNameMomentumUnit();
    /**
     * <code>optional string NameMomentumUnit = 18;</code>
     *
     * <pre>
     * return the unit designation as a string
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameMomentumUnitBytes();

    // optional string NameLengthUnit = 19;
    /**
     * <code>optional string NameLengthUnit = 19;</code>
     *
     * <pre>
     * return the unit designation as a string 
     * </pre>
     */
    boolean hasNameLengthUnit();
    /**
     * <code>optional string NameLengthUnit = 19;</code>
     *
     * <pre>
     * return the unit designation as a string 
     * </pre>
     */
    java.lang.String getNameLengthUnit();
    /**
     * <code>optional string NameLengthUnit = 19;</code>
     *
     * <pre>
     * return the unit designation as a string 
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameLengthUnitBytes();

    // optional double weight = 20;
    /**
     * <code>optional double weight = 20;</code>
     *
     * <pre>
     * event weight
     * </pre>
     */
    boolean hasWeight();
    /**
     * <code>optional double weight = 20;</code>
     *
     * <pre>
     * event weight
     * </pre>
     */
    double getWeight();

    // optional double requested_events = 21;
    /**
     * <code>optional double requested_events = 21;</code>
     *
     * <pre>
     * total number of requested events 
     * </pre>
     */
    boolean hasRequestedEvents();
    /**
     * <code>optional double requested_events = 21;</code>
     *
     * <pre>
     * total number of requested events 
     * </pre>
     */
    double getRequestedEvents();

    // repeated .promc.ProMCHeader.ParticleData particleData = 30;
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData> 
        getParticleDataList();
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    promc.io.ProMCHeaderFile.ProMCHeader.ParticleData getParticleData(int index);
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    int getParticleDataCount();
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder> 
        getParticleDataOrBuilderList();
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder getParticleDataOrBuilder(
        int index);

    // repeated .promc.ProMCHeader.MetaInt metaInt = 31;
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt> 
        getMetaIntList();
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    promc.io.ProMCHeaderFile.ProMCHeader.MetaInt getMetaInt(int index);
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    int getMetaIntCount();
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder> 
        getMetaIntOrBuilderList();
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder getMetaIntOrBuilder(
        int index);

    // repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat> 
        getMetaFloatList();
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat getMetaFloat(int index);
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    int getMetaFloatCount();
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder> 
        getMetaFloatOrBuilderList();
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder getMetaFloatOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code promc.ProMCHeader}
   */
  public static final class ProMCHeader extends
      com.google.protobuf.GeneratedMessage
      implements ProMCHeaderOrBuilder {
    // Use ProMCHeader.newBuilder() to construct.
    private ProMCHeader(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProMCHeader(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProMCHeader defaultInstance;
    public static ProMCHeader getDefaultInstance() {
      return defaultInstance;
    }

    public ProMCHeader getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProMCHeader(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id1_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id2_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pdfId1_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              pdfId2_ = input.readInt32();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              x1_ = input.readDouble();
              break;
            }
            case 49: {
              bitField0_ |= 0x00000020;
              x2_ = input.readDouble();
              break;
            }
            case 57: {
              bitField0_ |= 0x00000040;
              scalepdf_ = input.readDouble();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              pdf1_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              pdf2_ = input.readInt32();
              break;
            }
            case 81: {
              bitField0_ |= 0x00000200;
              eCM_ = input.readDouble();
              break;
            }
            case 89: {
              bitField0_ |= 0x00000400;
              s_ = input.readDouble();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000800;
              name_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              code_ = input.readInt32();
              break;
            }
            case 113: {
              bitField0_ |= 0x00002000;
              crossSection_ = input.readDouble();
              break;
            }
            case 121: {
              bitField0_ |= 0x00004000;
              crossSectionError_ = input.readDouble();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              momentumUnit_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              lengthUnit_ = input.readInt32();
              break;
            }
            case 146: {
              bitField0_ |= 0x00020000;
              nameMomentumUnit_ = input.readBytes();
              break;
            }
            case 154: {
              bitField0_ |= 0x00040000;
              nameLengthUnit_ = input.readBytes();
              break;
            }
            case 161: {
              bitField0_ |= 0x00080000;
              weight_ = input.readDouble();
              break;
            }
            case 169: {
              bitField0_ |= 0x00100000;
              requestedEvents_ = input.readDouble();
              break;
            }
            case 242: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                particleData_ = new java.util.ArrayList<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData>();
                mutable_bitField0_ |= 0x00200000;
              }
              particleData_.add(input.readMessage(promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.PARSER, extensionRegistry));
              break;
            }
            case 250: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                metaInt_ = new java.util.ArrayList<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt>();
                mutable_bitField0_ |= 0x00400000;
              }
              metaInt_.add(input.readMessage(promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.PARSER, extensionRegistry));
              break;
            }
            case 258: {
              if (!((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
                metaFloat_ = new java.util.ArrayList<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat>();
                mutable_bitField0_ |= 0x00800000;
              }
              metaFloat_.add(input.readMessage(promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          particleData_ = java.util.Collections.unmodifiableList(particleData_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          metaInt_ = java.util.Collections.unmodifiableList(metaInt_);
        }
        if (((mutable_bitField0_ & 0x00800000) == 0x00800000)) {
          metaFloat_ = java.util.Collections.unmodifiableList(metaFloat_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              promc.io.ProMCHeaderFile.ProMCHeader.class, promc.io.ProMCHeaderFile.ProMCHeader.Builder.class);
    }

    public static com.google.protobuf.Parser<ProMCHeader> PARSER =
        new com.google.protobuf.AbstractParser<ProMCHeader>() {
      public ProMCHeader parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProMCHeader(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProMCHeader> getParserForType() {
      return PARSER;
    }

    public interface ParticleDataOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required sint32 id = 1;
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * PID of particle
       * </pre>
       */
      boolean hasId();
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * PID of particle
       * </pre>
       */
      int getId();

      // required double mass = 2;
      /**
       * <code>required double mass = 2;</code>
       *
       * <pre>
       * its mass
       * </pre>
       */
      boolean hasMass();
      /**
       * <code>required double mass = 2;</code>
       *
       * <pre>
       * its mass
       * </pre>
       */
      double getMass();

      // required string name = 3;
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       * name of the particle
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       * name of the particle
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       * name of the particle
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // optional float width = 4;
      /**
       * <code>optional float width = 4;</code>
       *
       * <pre>
       * width
       * </pre>
       */
      boolean hasWidth();
      /**
       * <code>optional float width = 4;</code>
       *
       * <pre>
       * width
       * </pre>
       */
      float getWidth();

      // optional float lifetime = 5;
      /**
       * <code>optional float lifetime = 5;</code>
       *
       * <pre>
       * lifetime
       * </pre>
       */
      boolean hasLifetime();
      /**
       * <code>optional float lifetime = 5;</code>
       *
       * <pre>
       * lifetime
       * </pre>
       */
      float getLifetime();

      // optional sint32 charge = 6;
      /**
       * <code>optional sint32 charge = 6;</code>
       *
       * <pre>
       * charge
       * </pre>
       */
      boolean hasCharge();
      /**
       * <code>optional sint32 charge = 6;</code>
       *
       * <pre>
       * charge
       * </pre>
       */
      int getCharge();
    }
    /**
     * Protobuf type {@code promc.ProMCHeader.ParticleData}
     *
     * <pre>
     * map to store particle data (names, masse)
     * </pre>
     */
    public static final class ParticleData extends
        com.google.protobuf.GeneratedMessage
        implements ParticleDataOrBuilder {
      // Use ParticleData.newBuilder() to construct.
      private ParticleData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ParticleData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ParticleData defaultInstance;
      public static ParticleData getDefaultInstance() {
        return defaultInstance;
      }

      public ParticleData getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ParticleData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readSInt32();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                mass_ = input.readDouble();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                name_ = input.readBytes();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                width_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                lifetime_ = input.readFloat();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                charge_ = input.readSInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_ParticleData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_ParticleData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.class, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder.class);
      }

      public static com.google.protobuf.Parser<ParticleData> PARSER =
          new com.google.protobuf.AbstractParser<ParticleData>() {
        public ParticleData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ParticleData(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ParticleData> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required sint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * PID of particle
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * PID of particle
       * </pre>
       */
      public int getId() {
        return id_;
      }

      // required double mass = 2;
      public static final int MASS_FIELD_NUMBER = 2;
      private double mass_;
      /**
       * <code>required double mass = 2;</code>
       *
       * <pre>
       * its mass
       * </pre>
       */
      public boolean hasMass() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double mass = 2;</code>
       *
       * <pre>
       * its mass
       * </pre>
       */
      public double getMass() {
        return mass_;
      }

      // required string name = 3;
      public static final int NAME_FIELD_NUMBER = 3;
      private java.lang.Object name_;
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       * name of the particle
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       * name of the particle
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 3;</code>
       *
       * <pre>
       * name of the particle
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional float width = 4;
      public static final int WIDTH_FIELD_NUMBER = 4;
      private float width_;
      /**
       * <code>optional float width = 4;</code>
       *
       * <pre>
       * width
       * </pre>
       */
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float width = 4;</code>
       *
       * <pre>
       * width
       * </pre>
       */
      public float getWidth() {
        return width_;
      }

      // optional float lifetime = 5;
      public static final int LIFETIME_FIELD_NUMBER = 5;
      private float lifetime_;
      /**
       * <code>optional float lifetime = 5;</code>
       *
       * <pre>
       * lifetime
       * </pre>
       */
      public boolean hasLifetime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float lifetime = 5;</code>
       *
       * <pre>
       * lifetime
       * </pre>
       */
      public float getLifetime() {
        return lifetime_;
      }

      // optional sint32 charge = 6;
      public static final int CHARGE_FIELD_NUMBER = 6;
      private int charge_;
      /**
       * <code>optional sint32 charge = 6;</code>
       *
       * <pre>
       * charge
       * </pre>
       */
      public boolean hasCharge() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional sint32 charge = 6;</code>
       *
       * <pre>
       * charge
       * </pre>
       */
      public int getCharge() {
        return charge_;
      }

      private void initFields() {
        id_ = 0;
        mass_ = 0D;
        name_ = "";
        width_ = 0F;
        lifetime_ = 0F;
        charge_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMass()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeSInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, mass_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getNameBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, width_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, lifetime_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeSInt32(6, charge_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, mass_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getNameBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, width_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, lifetime_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(6, charge_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.ProMCHeaderFile.ProMCHeader.ParticleData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.ProMCHeader.ParticleData}
       *
       * <pre>
       * map to store particle data (names, masse)
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_ParticleData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_ParticleData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.class, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder.class);
        }

        // Construct using promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          mass_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          width_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          lifetime_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          charge_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_ParticleData_descriptor;
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData getDefaultInstanceForType() {
          return promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.getDefaultInstance();
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData build() {
          promc.io.ProMCHeaderFile.ProMCHeader.ParticleData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData buildPartial() {
          promc.io.ProMCHeaderFile.ProMCHeader.ParticleData result = new promc.io.ProMCHeaderFile.ProMCHeader.ParticleData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.mass_ = mass_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.width_ = width_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.lifetime_ = lifetime_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.charge_ = charge_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.ProMCHeaderFile.ProMCHeader.ParticleData) {
            return mergeFrom((promc.io.ProMCHeaderFile.ProMCHeader.ParticleData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.ProMCHeaderFile.ProMCHeader.ParticleData other) {
          if (other == promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasMass()) {
            setMass(other.getMass());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000004;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasWidth()) {
            setWidth(other.getWidth());
          }
          if (other.hasLifetime()) {
            setLifetime(other.getLifetime());
          }
          if (other.hasCharge()) {
            setCharge(other.getCharge());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasMass()) {
            
            return false;
          }
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.ProMCHeaderFile.ProMCHeader.ParticleData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.ProMCHeaderFile.ProMCHeader.ParticleData) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required sint32 id = 1;
        private int id_ ;
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * PID of particle
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * PID of particle
         * </pre>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * PID of particle
         * </pre>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * PID of particle
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // required double mass = 2;
        private double mass_ ;
        /**
         * <code>required double mass = 2;</code>
         *
         * <pre>
         * its mass
         * </pre>
         */
        public boolean hasMass() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double mass = 2;</code>
         *
         * <pre>
         * its mass
         * </pre>
         */
        public double getMass() {
          return mass_;
        }
        /**
         * <code>required double mass = 2;</code>
         *
         * <pre>
         * its mass
         * </pre>
         */
        public Builder setMass(double value) {
          bitField0_ |= 0x00000002;
          mass_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double mass = 2;</code>
         *
         * <pre>
         * its mass
         * </pre>
         */
        public Builder clearMass() {
          bitField0_ = (bitField0_ & ~0x00000002);
          mass_ = 0D;
          onChanged();
          return this;
        }

        // required string name = 3;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 3;</code>
         *
         * <pre>
         * name of the particle
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string name = 3;</code>
         *
         * <pre>
         * name of the particle
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 3;</code>
         *
         * <pre>
         * name of the particle
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 3;</code>
         *
         * <pre>
         * name of the particle
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 3;</code>
         *
         * <pre>
         * name of the particle
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000004);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 3;</code>
         *
         * <pre>
         * name of the particle
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          name_ = value;
          onChanged();
          return this;
        }

        // optional float width = 4;
        private float width_ ;
        /**
         * <code>optional float width = 4;</code>
         *
         * <pre>
         * width
         * </pre>
         */
        public boolean hasWidth() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float width = 4;</code>
         *
         * <pre>
         * width
         * </pre>
         */
        public float getWidth() {
          return width_;
        }
        /**
         * <code>optional float width = 4;</code>
         *
         * <pre>
         * width
         * </pre>
         */
        public Builder setWidth(float value) {
          bitField0_ |= 0x00000008;
          width_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float width = 4;</code>
         *
         * <pre>
         * width
         * </pre>
         */
        public Builder clearWidth() {
          bitField0_ = (bitField0_ & ~0x00000008);
          width_ = 0F;
          onChanged();
          return this;
        }

        // optional float lifetime = 5;
        private float lifetime_ ;
        /**
         * <code>optional float lifetime = 5;</code>
         *
         * <pre>
         * lifetime
         * </pre>
         */
        public boolean hasLifetime() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float lifetime = 5;</code>
         *
         * <pre>
         * lifetime
         * </pre>
         */
        public float getLifetime() {
          return lifetime_;
        }
        /**
         * <code>optional float lifetime = 5;</code>
         *
         * <pre>
         * lifetime
         * </pre>
         */
        public Builder setLifetime(float value) {
          bitField0_ |= 0x00000010;
          lifetime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float lifetime = 5;</code>
         *
         * <pre>
         * lifetime
         * </pre>
         */
        public Builder clearLifetime() {
          bitField0_ = (bitField0_ & ~0x00000010);
          lifetime_ = 0F;
          onChanged();
          return this;
        }

        // optional sint32 charge = 6;
        private int charge_ ;
        /**
         * <code>optional sint32 charge = 6;</code>
         *
         * <pre>
         * charge
         * </pre>
         */
        public boolean hasCharge() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional sint32 charge = 6;</code>
         *
         * <pre>
         * charge
         * </pre>
         */
        public int getCharge() {
          return charge_;
        }
        /**
         * <code>optional sint32 charge = 6;</code>
         *
         * <pre>
         * charge
         * </pre>
         */
        public Builder setCharge(int value) {
          bitField0_ |= 0x00000020;
          charge_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint32 charge = 6;</code>
         *
         * <pre>
         * charge
         * </pre>
         */
        public Builder clearCharge() {
          bitField0_ = (bitField0_ & ~0x00000020);
          charge_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.ProMCHeader.ParticleData)
      }

      static {
        defaultInstance = new ParticleData(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.ProMCHeader.ParticleData)
    }

    public interface MetaIntOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string key = 1;
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value 
       * </pre>
       */
      boolean hasKey();
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value 
       * </pre>
       */
      java.lang.String getKey();
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value 
       * </pre>
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      // required sint64 value = 2;
      /**
       * <code>required sint64 value = 2;</code>
       *
       * <pre>
       * value 
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>required sint64 value = 2;</code>
       *
       * <pre>
       * value 
       * </pre>
       */
      long getValue();
    }
    /**
     * Protobuf type {@code promc.ProMCHeader.MetaInt}
     *
     * <pre>
     * map to store orbitrary data as key-int value 
     * </pre>
     */
    public static final class MetaInt extends
        com.google.protobuf.GeneratedMessage
        implements MetaIntOrBuilder {
      // Use MetaInt.newBuilder() to construct.
      private MetaInt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MetaInt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MetaInt defaultInstance;
      public static MetaInt getDefaultInstance() {
        return defaultInstance;
      }

      public MetaInt getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MetaInt(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                key_ = input.readBytes();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                value_ = input.readSInt64();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaInt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaInt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.class, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder.class);
      }

      public static com.google.protobuf.Parser<MetaInt> PARSER =
          new com.google.protobuf.AbstractParser<MetaInt>() {
        public MetaInt parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MetaInt(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MetaInt> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value 
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value 
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required sint64 value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private long value_;
      /**
       * <code>required sint64 value = 2;</code>
       *
       * <pre>
       * value 
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint64 value = 2;</code>
       *
       * <pre>
       * value 
       * </pre>
       */
      public long getValue() {
        return value_;
      }

      private void initFields() {
        key_ = "";
        value_ = 0L;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeSInt64(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.ProMCHeaderFile.ProMCHeader.MetaInt prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.ProMCHeader.MetaInt}
       *
       * <pre>
       * map to store orbitrary data as key-int value 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaInt_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaInt_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.class, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder.class);
        }

        // Construct using promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaInt_descriptor;
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt getDefaultInstanceForType() {
          return promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.getDefaultInstance();
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt build() {
          promc.io.ProMCHeaderFile.ProMCHeader.MetaInt result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt buildPartial() {
          promc.io.ProMCHeaderFile.ProMCHeader.MetaInt result = new promc.io.ProMCHeaderFile.ProMCHeader.MetaInt(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.ProMCHeaderFile.ProMCHeader.MetaInt) {
            return mergeFrom((promc.io.ProMCHeaderFile.ProMCHeader.MetaInt)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.ProMCHeaderFile.ProMCHeader.MetaInt other) {
          if (other == promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.getDefaultInstance()) return this;
          if (other.hasKey()) {
            bitField0_ |= 0x00000001;
            key_ = other.key_;
            onChanged();
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.ProMCHeaderFile.ProMCHeader.MetaInt parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.ProMCHeaderFile.ProMCHeader.MetaInt) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string key = 1;
        private java.lang.Object key_ = "";
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value 
         * </pre>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value 
         * </pre>
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value 
         * </pre>
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value 
         * </pre>
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value 
         * </pre>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value 
         * </pre>
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }

        // required sint64 value = 2;
        private long value_ ;
        /**
         * <code>required sint64 value = 2;</code>
         *
         * <pre>
         * value 
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required sint64 value = 2;</code>
         *
         * <pre>
         * value 
         * </pre>
         */
        public long getValue() {
          return value_;
        }
        /**
         * <code>required sint64 value = 2;</code>
         *
         * <pre>
         * value 
         * </pre>
         */
        public Builder setValue(long value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required sint64 value = 2;</code>
         *
         * <pre>
         * value 
         * </pre>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0L;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.ProMCHeader.MetaInt)
      }

      static {
        defaultInstance = new MetaInt(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.ProMCHeader.MetaInt)
    }

    public interface MetaFloatOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string key = 1;
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value
       * </pre>
       */
      boolean hasKey();
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value
       * </pre>
       */
      java.lang.String getKey();
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value
       * </pre>
       */
      com.google.protobuf.ByteString
          getKeyBytes();

      // required double value = 2;
      /**
       * <code>required double value = 2;</code>
       *
       * <pre>
       * value
       * </pre>
       */
      boolean hasValue();
      /**
       * <code>required double value = 2;</code>
       *
       * <pre>
       * value
       * </pre>
       */
      double getValue();
    }
    /**
     * Protobuf type {@code promc.ProMCHeader.MetaFloat}
     *
     * <pre>
     * map to store orbitrary data as key-int value 
     * </pre>
     */
    public static final class MetaFloat extends
        com.google.protobuf.GeneratedMessage
        implements MetaFloatOrBuilder {
      // Use MetaFloat.newBuilder() to construct.
      private MetaFloat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private MetaFloat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final MetaFloat defaultInstance;
      public static MetaFloat getDefaultInstance() {
        return defaultInstance;
      }

      public MetaFloat getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private MetaFloat(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                key_ = input.readBytes();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                value_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaFloat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaFloat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.class, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder.class);
      }

      public static com.google.protobuf.Parser<MetaFloat> PARSER =
          new com.google.protobuf.AbstractParser<MetaFloat>() {
        public MetaFloat parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new MetaFloat(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<MetaFloat> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string key = 1;
      public static final int KEY_FIELD_NUMBER = 1;
      private java.lang.Object key_;
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value
       * </pre>
       */
      public java.lang.String getKey() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            key_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string key = 1;</code>
       *
       * <pre>
       * key for interger value
       * </pre>
       */
      public com.google.protobuf.ByteString
          getKeyBytes() {
        java.lang.Object ref = key_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          key_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required double value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private double value_;
      /**
       * <code>required double value = 2;</code>
       *
       * <pre>
       * value
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double value = 2;</code>
       *
       * <pre>
       * value
       * </pre>
       */
      public double getValue() {
        return value_;
      }

      private void initFields() {
        key_ = "";
        value_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasKey()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getKeyBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.ProMCHeader.MetaFloat}
       *
       * <pre>
       * map to store orbitrary data as key-int value 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaFloat_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaFloat_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.class, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder.class);
        }

        // Construct using promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          key_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_MetaFloat_descriptor;
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat getDefaultInstanceForType() {
          return promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.getDefaultInstance();
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat build() {
          promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat buildPartial() {
          promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat result = new promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat) {
            return mergeFrom((promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat other) {
          if (other == promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.getDefaultInstance()) return this;
          if (other.hasKey()) {
            bitField0_ |= 0x00000001;
            key_ = other.key_;
            onChanged();
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasKey()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string key = 1;
        private java.lang.Object key_ = "";
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value
         * </pre>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value
         * </pre>
         */
        public java.lang.String getKey() {
          java.lang.Object ref = key_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            key_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value
         * </pre>
         */
        public com.google.protobuf.ByteString
            getKeyBytes() {
          java.lang.Object ref = key_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            key_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value
         * </pre>
         */
        public Builder setKey(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value
         * </pre>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }
        /**
         * <code>required string key = 1;</code>
         *
         * <pre>
         * key for interger value
         * </pre>
         */
        public Builder setKeyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          key_ = value;
          onChanged();
          return this;
        }

        // required double value = 2;
        private double value_ ;
        /**
         * <code>required double value = 2;</code>
         *
         * <pre>
         * value
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double value = 2;</code>
         *
         * <pre>
         * value
         * </pre>
         */
        public double getValue() {
          return value_;
        }
        /**
         * <code>required double value = 2;</code>
         *
         * <pre>
         * value
         * </pre>
         */
        public Builder setValue(double value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double value = 2;</code>
         *
         * <pre>
         * value
         * </pre>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.ProMCHeader.MetaFloat)
      }

      static {
        defaultInstance = new MetaFloat(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.ProMCHeader.MetaFloat)
    }

    private int bitField0_;
    // optional int32 id1 = 1;
    public static final int ID1_FIELD_NUMBER = 1;
    private int id1_;
    /**
     * <code>optional int32 id1 = 1;</code>
     *
     * <pre>
     * used to store the global information for all events
     * </pre>
     */
    public boolean hasId1() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 id1 = 1;</code>
     *
     * <pre>
     * used to store the global information for all events
     * </pre>
     */
    public int getId1() {
      return id1_;
    }

    // optional int32 id2 = 2;
    public static final int ID2_FIELD_NUMBER = 2;
    private int id2_;
    /**
     * <code>optional int32 id2 = 2;</code>
     *
     * <pre>
     * flavour code of second parton
     * </pre>
     */
    public boolean hasId2() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 id2 = 2;</code>
     *
     * <pre>
     * flavour code of second parton
     * </pre>
     */
    public int getId2() {
      return id2_;
    }

    // optional int32 pdf_id1 = 3;
    public static final int PDF_ID1_FIELD_NUMBER = 3;
    private int pdfId1_;
    /**
     * <code>optional int32 pdf_id1 = 3;</code>
     *
     * <pre>
     * LHAPDF set id of first parton 
     * </pre>
     */
    public boolean hasPdfId1() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 pdf_id1 = 3;</code>
     *
     * <pre>
     * LHAPDF set id of first parton 
     * </pre>
     */
    public int getPdfId1() {
      return pdfId1_;
    }

    // optional int32 pdf_id2 = 4;
    public static final int PDF_ID2_FIELD_NUMBER = 4;
    private int pdfId2_;
    /**
     * <code>optional int32 pdf_id2 = 4;</code>
     *
     * <pre>
     * LHAPDF set id of second parton
     * </pre>
     */
    public boolean hasPdfId2() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 pdf_id2 = 4;</code>
     *
     * <pre>
     * LHAPDF set id of second parton
     * </pre>
     */
    public int getPdfId2() {
      return pdfId2_;
    }

    // optional double x1 = 5;
    public static final int X1_FIELD_NUMBER = 5;
    private double x1_;
    /**
     * <code>optional double x1 = 5;</code>
     *
     * <pre>
     * fraction of beam momentum carried by first parton (”beam side”)
     * </pre>
     */
    public boolean hasX1() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double x1 = 5;</code>
     *
     * <pre>
     * fraction of beam momentum carried by first parton (”beam side”)
     * </pre>
     */
    public double getX1() {
      return x1_;
    }

    // optional double x2 = 6;
    public static final int X2_FIELD_NUMBER = 6;
    private double x2_;
    /**
     * <code>optional double x2 = 6;</code>
     *
     * <pre>
     * fraction of beam momentum carried by second parton (”target side”)
     * </pre>
     */
    public boolean hasX2() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional double x2 = 6;</code>
     *
     * <pre>
     * fraction of beam momentum carried by second parton (”target side”)
     * </pre>
     */
    public double getX2() {
      return x2_;
    }

    // optional double scalepdf = 7;
    public static final int SCALEPDF_FIELD_NUMBER = 7;
    private double scalepdf_;
    /**
     * <code>optional double scalepdf = 7;</code>
     *
     * <pre>
     * Q-scale used in evaluation of PDF’s (in GeV)
     * </pre>
     */
    public boolean hasScalepdf() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional double scalepdf = 7;</code>
     *
     * <pre>
     * Q-scale used in evaluation of PDF’s (in GeV)
     * </pre>
     */
    public double getScalepdf() {
      return scalepdf_;
    }

    // optional int32 pdf1 = 8;
    public static final int PDF1_FIELD_NUMBER = 8;
    private int pdf1_;
    /**
     * <code>optional int32 pdf1 = 8;</code>
     *
     * <pre>
     *  PDF (id1, x1, Q) This should be of the form x*f(x)
     * </pre>
     */
    public boolean hasPdf1() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 pdf1 = 8;</code>
     *
     * <pre>
     *  PDF (id1, x1, Q) This should be of the form x*f(x)
     * </pre>
     */
    public int getPdf1() {
      return pdf1_;
    }

    // optional int32 pdf2 = 9;
    public static final int PDF2_FIELD_NUMBER = 9;
    private int pdf2_;
    /**
     * <code>optional int32 pdf2 = 9;</code>
     *
     * <pre>
     *  PDF (id2, x2, Q) This should be of the form x*f(x)
     * </pre>
     */
    public boolean hasPdf2() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 pdf2 = 9;</code>
     *
     * <pre>
     *  PDF (id2, x2, Q) This should be of the form x*f(x)
     * </pre>
     */
    public int getPdf2() {
      return pdf2_;
    }

    // optional double eCM = 10;
    public static final int ECM_FIELD_NUMBER = 10;
    private double eCM_;
    /**
     * <code>optional double eCM = 10;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    public boolean hasECM() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional double eCM = 10;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    public double getECM() {
      return eCM_;
    }

    // optional double s = 11;
    public static final int S_FIELD_NUMBER = 11;
    private double s_;
    /**
     * <code>optional double s = 11;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    public boolean hasS() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional double s = 11;</code>
     *
     * <pre>
     * CM energy
     * </pre>
     */
    public double getS() {
      return s_;
    }

    // optional string name = 12;
    public static final int NAME_FIELD_NUMBER = 12;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 12;</code>
     *
     * <pre>
     * process name 
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string name = 12;</code>
     *
     * <pre>
     * process name 
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 12;</code>
     *
     * <pre>
     * process name 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 code = 13;
    public static final int CODE_FIELD_NUMBER = 13;
    private int code_;
    /**
     * <code>optional int32 code = 13;</code>
     *
     * <pre>
     * process code 
     * </pre>
     */
    public boolean hasCode() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 code = 13;</code>
     *
     * <pre>
     * process code 
     * </pre>
     */
    public int getCode() {
      return code_;
    }

    // optional double cross_section = 14;
    public static final int CROSS_SECTION_FIELD_NUMBER = 14;
    private double crossSection_;
    /**
     * <code>optional double cross_section = 14;</code>
     *
     * <pre>
     *  cross section in pb
     * </pre>
     */
    public boolean hasCrossSection() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional double cross_section = 14;</code>
     *
     * <pre>
     *  cross section in pb
     * </pre>
     */
    public double getCrossSection() {
      return crossSection_;
    }

    // optional double cross_section_error = 15;
    public static final int CROSS_SECTION_ERROR_FIELD_NUMBER = 15;
    private double crossSectionError_;
    /**
     * <code>optional double cross_section_error = 15;</code>
     *
     * <pre>
     *  error associated with this cross section in pb 
     * </pre>
     */
    public boolean hasCrossSectionError() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional double cross_section_error = 15;</code>
     *
     * <pre>
     *  error associated with this cross section in pb 
     * </pre>
     */
    public double getCrossSectionError() {
      return crossSectionError_;
    }

    // optional int32 MomentumUnit = 16;
    public static final int MOMENTUMUNIT_FIELD_NUMBER = 16;
    private int momentumUnit_;
    /**
     * <code>optional int32 MomentumUnit = 16;</code>
     *
     * <pre>
     * values are MEV or GEV
     * </pre>
     */
    public boolean hasMomentumUnit() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 MomentumUnit = 16;</code>
     *
     * <pre>
     * values are MEV or GEV
     * </pre>
     */
    public int getMomentumUnit() {
      return momentumUnit_;
    }

    // optional int32 LengthUnit = 17;
    public static final int LENGTHUNIT_FIELD_NUMBER = 17;
    private int lengthUnit_;
    /**
     * <code>optional int32 LengthUnit = 17;</code>
     *
     * <pre>
     * values are MM or CM
     * </pre>
     */
    public boolean hasLengthUnit() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 LengthUnit = 17;</code>
     *
     * <pre>
     * values are MM or CM
     * </pre>
     */
    public int getLengthUnit() {
      return lengthUnit_;
    }

    // optional string NameMomentumUnit = 18;
    public static final int NAMEMOMENTUMUNIT_FIELD_NUMBER = 18;
    private java.lang.Object nameMomentumUnit_;
    /**
     * <code>optional string NameMomentumUnit = 18;</code>
     *
     * <pre>
     * return the unit designation as a string
     * </pre>
     */
    public boolean hasNameMomentumUnit() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional string NameMomentumUnit = 18;</code>
     *
     * <pre>
     * return the unit designation as a string
     * </pre>
     */
    public java.lang.String getNameMomentumUnit() {
      java.lang.Object ref = nameMomentumUnit_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nameMomentumUnit_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string NameMomentumUnit = 18;</code>
     *
     * <pre>
     * return the unit designation as a string
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameMomentumUnitBytes() {
      java.lang.Object ref = nameMomentumUnit_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nameMomentumUnit_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string NameLengthUnit = 19;
    public static final int NAMELENGTHUNIT_FIELD_NUMBER = 19;
    private java.lang.Object nameLengthUnit_;
    /**
     * <code>optional string NameLengthUnit = 19;</code>
     *
     * <pre>
     * return the unit designation as a string 
     * </pre>
     */
    public boolean hasNameLengthUnit() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string NameLengthUnit = 19;</code>
     *
     * <pre>
     * return the unit designation as a string 
     * </pre>
     */
    public java.lang.String getNameLengthUnit() {
      java.lang.Object ref = nameLengthUnit_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nameLengthUnit_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string NameLengthUnit = 19;</code>
     *
     * <pre>
     * return the unit designation as a string 
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameLengthUnitBytes() {
      java.lang.Object ref = nameLengthUnit_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nameLengthUnit_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional double weight = 20;
    public static final int WEIGHT_FIELD_NUMBER = 20;
    private double weight_;
    /**
     * <code>optional double weight = 20;</code>
     *
     * <pre>
     * event weight
     * </pre>
     */
    public boolean hasWeight() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional double weight = 20;</code>
     *
     * <pre>
     * event weight
     * </pre>
     */
    public double getWeight() {
      return weight_;
    }

    // optional double requested_events = 21;
    public static final int REQUESTED_EVENTS_FIELD_NUMBER = 21;
    private double requestedEvents_;
    /**
     * <code>optional double requested_events = 21;</code>
     *
     * <pre>
     * total number of requested events 
     * </pre>
     */
    public boolean hasRequestedEvents() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional double requested_events = 21;</code>
     *
     * <pre>
     * total number of requested events 
     * </pre>
     */
    public double getRequestedEvents() {
      return requestedEvents_;
    }

    // repeated .promc.ProMCHeader.ParticleData particleData = 30;
    public static final int PARTICLEDATA_FIELD_NUMBER = 30;
    private java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData> particleData_;
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData> getParticleDataList() {
      return particleData_;
    }
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    public java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder> 
        getParticleDataOrBuilderList() {
      return particleData_;
    }
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    public int getParticleDataCount() {
      return particleData_.size();
    }
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData getParticleData(int index) {
      return particleData_.get(index);
    }
    /**
     * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
     *
     * <pre>
     * keep all particle information 
     * </pre>
     */
    public promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder getParticleDataOrBuilder(
        int index) {
      return particleData_.get(index);
    }

    // repeated .promc.ProMCHeader.MetaInt metaInt = 31;
    public static final int METAINT_FIELD_NUMBER = 31;
    private java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt> metaInt_;
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt> getMetaIntList() {
      return metaInt_;
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    public java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder> 
        getMetaIntOrBuilderList() {
      return metaInt_;
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    public int getMetaIntCount() {
      return metaInt_.size();
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt getMetaInt(int index) {
      return metaInt_.get(index);
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
     *
     * <pre>
     * keep metadata as key-value (int) 
     * </pre>
     */
    public promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder getMetaIntOrBuilder(
        int index) {
      return metaInt_.get(index);
    }

    // repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;
    public static final int METAFLOAT_FIELD_NUMBER = 32;
    private java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat> metaFloat_;
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat> getMetaFloatList() {
      return metaFloat_;
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    public java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder> 
        getMetaFloatOrBuilderList() {
      return metaFloat_;
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    public int getMetaFloatCount() {
      return metaFloat_.size();
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat getMetaFloat(int index) {
      return metaFloat_.get(index);
    }
    /**
     * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
     *
     * <pre>
     * keep metadata as key-value (double)
     * </pre>
     */
    public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder getMetaFloatOrBuilder(
        int index) {
      return metaFloat_.get(index);
    }

    private void initFields() {
      id1_ = 0;
      id2_ = 0;
      pdfId1_ = 0;
      pdfId2_ = 0;
      x1_ = 0D;
      x2_ = 0D;
      scalepdf_ = 0D;
      pdf1_ = 0;
      pdf2_ = 0;
      eCM_ = 0D;
      s_ = 0D;
      name_ = "";
      code_ = 0;
      crossSection_ = 0D;
      crossSectionError_ = 0D;
      momentumUnit_ = 0;
      lengthUnit_ = 0;
      nameMomentumUnit_ = "";
      nameLengthUnit_ = "";
      weight_ = 0D;
      requestedEvents_ = 0D;
      particleData_ = java.util.Collections.emptyList();
      metaInt_ = java.util.Collections.emptyList();
      metaFloat_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getParticleDataCount(); i++) {
        if (!getParticleData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMetaIntCount(); i++) {
        if (!getMetaInt(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMetaFloatCount(); i++) {
        if (!getMetaFloat(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pdfId1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, pdfId2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, x1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeDouble(6, x2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeDouble(7, scalepdf_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, pdf1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, pdf2_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeDouble(10, eCM_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeDouble(11, s_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getNameBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, code_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeDouble(14, crossSection_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeDouble(15, crossSectionError_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(16, momentumUnit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, lengthUnit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBytes(18, getNameMomentumUnitBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(19, getNameLengthUnitBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeDouble(20, weight_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeDouble(21, requestedEvents_);
      }
      for (int i = 0; i < particleData_.size(); i++) {
        output.writeMessage(30, particleData_.get(i));
      }
      for (int i = 0; i < metaInt_.size(); i++) {
        output.writeMessage(31, metaInt_.get(i));
      }
      for (int i = 0; i < metaFloat_.size(); i++) {
        output.writeMessage(32, metaFloat_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id1_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id2_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pdfId1_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, pdfId2_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, x1_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, x2_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, scalepdf_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, pdf1_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, pdf2_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, eCM_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, s_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getNameBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, code_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(14, crossSection_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(15, crossSectionError_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, momentumUnit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, lengthUnit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(18, getNameMomentumUnitBytes());
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getNameLengthUnitBytes());
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(20, weight_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(21, requestedEvents_);
      }
      for (int i = 0; i < particleData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, particleData_.get(i));
      }
      for (int i = 0; i < metaInt_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, metaInt_.get(i));
      }
      for (int i = 0; i < metaFloat_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, metaFloat_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static promc.io.ProMCHeaderFile.ProMCHeader parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(promc.io.ProMCHeaderFile.ProMCHeader prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code promc.ProMCHeader}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements promc.io.ProMCHeaderFile.ProMCHeaderOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.ProMCHeaderFile.ProMCHeader.class, promc.io.ProMCHeaderFile.ProMCHeader.Builder.class);
      }

      // Construct using promc.io.ProMCHeaderFile.ProMCHeader.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getParticleDataFieldBuilder();
          getMetaIntFieldBuilder();
          getMetaFloatFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        id2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pdfId1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        pdfId2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        x1_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        x2_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000020);
        scalepdf_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000040);
        pdf1_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        pdf2_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        eCM_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000200);
        s_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000400);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        code_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        crossSection_ = 0D;
        bitField0_ = (bitField0_ & ~0x00002000);
        crossSectionError_ = 0D;
        bitField0_ = (bitField0_ & ~0x00004000);
        momentumUnit_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        lengthUnit_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        nameMomentumUnit_ = "";
        bitField0_ = (bitField0_ & ~0x00020000);
        nameLengthUnit_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        weight_ = 0D;
        bitField0_ = (bitField0_ & ~0x00080000);
        requestedEvents_ = 0D;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (particleDataBuilder_ == null) {
          particleData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          particleDataBuilder_.clear();
        }
        if (metaIntBuilder_ == null) {
          metaInt_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00400000);
        } else {
          metaIntBuilder_.clear();
        }
        if (metaFloatBuilder_ == null) {
          metaFloat_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
        } else {
          metaFloatBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return promc.io.ProMCHeaderFile.internal_static_promc_ProMCHeader_descriptor;
      }

      public promc.io.ProMCHeaderFile.ProMCHeader getDefaultInstanceForType() {
        return promc.io.ProMCHeaderFile.ProMCHeader.getDefaultInstance();
      }

      public promc.io.ProMCHeaderFile.ProMCHeader build() {
        promc.io.ProMCHeaderFile.ProMCHeader result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public promc.io.ProMCHeaderFile.ProMCHeader buildPartial() {
        promc.io.ProMCHeaderFile.ProMCHeader result = new promc.io.ProMCHeaderFile.ProMCHeader(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id1_ = id1_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id2_ = id2_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pdfId1_ = pdfId1_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.pdfId2_ = pdfId2_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.x1_ = x1_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.x2_ = x2_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.scalepdf_ = scalepdf_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.pdf1_ = pdf1_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.pdf2_ = pdf2_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.eCM_ = eCM_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.s_ = s_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.code_ = code_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.crossSection_ = crossSection_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.crossSectionError_ = crossSectionError_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.momentumUnit_ = momentumUnit_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.lengthUnit_ = lengthUnit_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.nameMomentumUnit_ = nameMomentumUnit_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.nameLengthUnit_ = nameLengthUnit_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.weight_ = weight_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.requestedEvents_ = requestedEvents_;
        if (particleDataBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            particleData_ = java.util.Collections.unmodifiableList(particleData_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.particleData_ = particleData_;
        } else {
          result.particleData_ = particleDataBuilder_.build();
        }
        if (metaIntBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000)) {
            metaInt_ = java.util.Collections.unmodifiableList(metaInt_);
            bitField0_ = (bitField0_ & ~0x00400000);
          }
          result.metaInt_ = metaInt_;
        } else {
          result.metaInt_ = metaIntBuilder_.build();
        }
        if (metaFloatBuilder_ == null) {
          if (((bitField0_ & 0x00800000) == 0x00800000)) {
            metaFloat_ = java.util.Collections.unmodifiableList(metaFloat_);
            bitField0_ = (bitField0_ & ~0x00800000);
          }
          result.metaFloat_ = metaFloat_;
        } else {
          result.metaFloat_ = metaFloatBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof promc.io.ProMCHeaderFile.ProMCHeader) {
          return mergeFrom((promc.io.ProMCHeaderFile.ProMCHeader)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(promc.io.ProMCHeaderFile.ProMCHeader other) {
        if (other == promc.io.ProMCHeaderFile.ProMCHeader.getDefaultInstance()) return this;
        if (other.hasId1()) {
          setId1(other.getId1());
        }
        if (other.hasId2()) {
          setId2(other.getId2());
        }
        if (other.hasPdfId1()) {
          setPdfId1(other.getPdfId1());
        }
        if (other.hasPdfId2()) {
          setPdfId2(other.getPdfId2());
        }
        if (other.hasX1()) {
          setX1(other.getX1());
        }
        if (other.hasX2()) {
          setX2(other.getX2());
        }
        if (other.hasScalepdf()) {
          setScalepdf(other.getScalepdf());
        }
        if (other.hasPdf1()) {
          setPdf1(other.getPdf1());
        }
        if (other.hasPdf2()) {
          setPdf2(other.getPdf2());
        }
        if (other.hasECM()) {
          setECM(other.getECM());
        }
        if (other.hasS()) {
          setS(other.getS());
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000800;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        if (other.hasCrossSection()) {
          setCrossSection(other.getCrossSection());
        }
        if (other.hasCrossSectionError()) {
          setCrossSectionError(other.getCrossSectionError());
        }
        if (other.hasMomentumUnit()) {
          setMomentumUnit(other.getMomentumUnit());
        }
        if (other.hasLengthUnit()) {
          setLengthUnit(other.getLengthUnit());
        }
        if (other.hasNameMomentumUnit()) {
          bitField0_ |= 0x00020000;
          nameMomentumUnit_ = other.nameMomentumUnit_;
          onChanged();
        }
        if (other.hasNameLengthUnit()) {
          bitField0_ |= 0x00040000;
          nameLengthUnit_ = other.nameLengthUnit_;
          onChanged();
        }
        if (other.hasWeight()) {
          setWeight(other.getWeight());
        }
        if (other.hasRequestedEvents()) {
          setRequestedEvents(other.getRequestedEvents());
        }
        if (particleDataBuilder_ == null) {
          if (!other.particleData_.isEmpty()) {
            if (particleData_.isEmpty()) {
              particleData_ = other.particleData_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureParticleDataIsMutable();
              particleData_.addAll(other.particleData_);
            }
            onChanged();
          }
        } else {
          if (!other.particleData_.isEmpty()) {
            if (particleDataBuilder_.isEmpty()) {
              particleDataBuilder_.dispose();
              particleDataBuilder_ = null;
              particleData_ = other.particleData_;
              bitField0_ = (bitField0_ & ~0x00200000);
              particleDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParticleDataFieldBuilder() : null;
            } else {
              particleDataBuilder_.addAllMessages(other.particleData_);
            }
          }
        }
        if (metaIntBuilder_ == null) {
          if (!other.metaInt_.isEmpty()) {
            if (metaInt_.isEmpty()) {
              metaInt_ = other.metaInt_;
              bitField0_ = (bitField0_ & ~0x00400000);
            } else {
              ensureMetaIntIsMutable();
              metaInt_.addAll(other.metaInt_);
            }
            onChanged();
          }
        } else {
          if (!other.metaInt_.isEmpty()) {
            if (metaIntBuilder_.isEmpty()) {
              metaIntBuilder_.dispose();
              metaIntBuilder_ = null;
              metaInt_ = other.metaInt_;
              bitField0_ = (bitField0_ & ~0x00400000);
              metaIntBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaIntFieldBuilder() : null;
            } else {
              metaIntBuilder_.addAllMessages(other.metaInt_);
            }
          }
        }
        if (metaFloatBuilder_ == null) {
          if (!other.metaFloat_.isEmpty()) {
            if (metaFloat_.isEmpty()) {
              metaFloat_ = other.metaFloat_;
              bitField0_ = (bitField0_ & ~0x00800000);
            } else {
              ensureMetaFloatIsMutable();
              metaFloat_.addAll(other.metaFloat_);
            }
            onChanged();
          }
        } else {
          if (!other.metaFloat_.isEmpty()) {
            if (metaFloatBuilder_.isEmpty()) {
              metaFloatBuilder_.dispose();
              metaFloatBuilder_ = null;
              metaFloat_ = other.metaFloat_;
              bitField0_ = (bitField0_ & ~0x00800000);
              metaFloatBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMetaFloatFieldBuilder() : null;
            } else {
              metaFloatBuilder_.addAllMessages(other.metaFloat_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getParticleDataCount(); i++) {
          if (!getParticleData(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMetaIntCount(); i++) {
          if (!getMetaInt(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMetaFloatCount(); i++) {
          if (!getMetaFloat(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        promc.io.ProMCHeaderFile.ProMCHeader parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (promc.io.ProMCHeaderFile.ProMCHeader) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 id1 = 1;
      private int id1_ ;
      /**
       * <code>optional int32 id1 = 1;</code>
       *
       * <pre>
       * used to store the global information for all events
       * </pre>
       */
      public boolean hasId1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 id1 = 1;</code>
       *
       * <pre>
       * used to store the global information for all events
       * </pre>
       */
      public int getId1() {
        return id1_;
      }
      /**
       * <code>optional int32 id1 = 1;</code>
       *
       * <pre>
       * used to store the global information for all events
       * </pre>
       */
      public Builder setId1(int value) {
        bitField0_ |= 0x00000001;
        id1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id1 = 1;</code>
       *
       * <pre>
       * used to store the global information for all events
       * </pre>
       */
      public Builder clearId1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 id2 = 2;
      private int id2_ ;
      /**
       * <code>optional int32 id2 = 2;</code>
       *
       * <pre>
       * flavour code of second parton
       * </pre>
       */
      public boolean hasId2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 id2 = 2;</code>
       *
       * <pre>
       * flavour code of second parton
       * </pre>
       */
      public int getId2() {
        return id2_;
      }
      /**
       * <code>optional int32 id2 = 2;</code>
       *
       * <pre>
       * flavour code of second parton
       * </pre>
       */
      public Builder setId2(int value) {
        bitField0_ |= 0x00000002;
        id2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id2 = 2;</code>
       *
       * <pre>
       * flavour code of second parton
       * </pre>
       */
      public Builder clearId2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id2_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pdf_id1 = 3;
      private int pdfId1_ ;
      /**
       * <code>optional int32 pdf_id1 = 3;</code>
       *
       * <pre>
       * LHAPDF set id of first parton 
       * </pre>
       */
      public boolean hasPdfId1() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 pdf_id1 = 3;</code>
       *
       * <pre>
       * LHAPDF set id of first parton 
       * </pre>
       */
      public int getPdfId1() {
        return pdfId1_;
      }
      /**
       * <code>optional int32 pdf_id1 = 3;</code>
       *
       * <pre>
       * LHAPDF set id of first parton 
       * </pre>
       */
      public Builder setPdfId1(int value) {
        bitField0_ |= 0x00000004;
        pdfId1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pdf_id1 = 3;</code>
       *
       * <pre>
       * LHAPDF set id of first parton 
       * </pre>
       */
      public Builder clearPdfId1() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pdfId1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pdf_id2 = 4;
      private int pdfId2_ ;
      /**
       * <code>optional int32 pdf_id2 = 4;</code>
       *
       * <pre>
       * LHAPDF set id of second parton
       * </pre>
       */
      public boolean hasPdfId2() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 pdf_id2 = 4;</code>
       *
       * <pre>
       * LHAPDF set id of second parton
       * </pre>
       */
      public int getPdfId2() {
        return pdfId2_;
      }
      /**
       * <code>optional int32 pdf_id2 = 4;</code>
       *
       * <pre>
       * LHAPDF set id of second parton
       * </pre>
       */
      public Builder setPdfId2(int value) {
        bitField0_ |= 0x00000008;
        pdfId2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pdf_id2 = 4;</code>
       *
       * <pre>
       * LHAPDF set id of second parton
       * </pre>
       */
      public Builder clearPdfId2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pdfId2_ = 0;
        onChanged();
        return this;
      }

      // optional double x1 = 5;
      private double x1_ ;
      /**
       * <code>optional double x1 = 5;</code>
       *
       * <pre>
       * fraction of beam momentum carried by first parton (”beam side”)
       * </pre>
       */
      public boolean hasX1() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double x1 = 5;</code>
       *
       * <pre>
       * fraction of beam momentum carried by first parton (”beam side”)
       * </pre>
       */
      public double getX1() {
        return x1_;
      }
      /**
       * <code>optional double x1 = 5;</code>
       *
       * <pre>
       * fraction of beam momentum carried by first parton (”beam side”)
       * </pre>
       */
      public Builder setX1(double value) {
        bitField0_ |= 0x00000010;
        x1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double x1 = 5;</code>
       *
       * <pre>
       * fraction of beam momentum carried by first parton (”beam side”)
       * </pre>
       */
      public Builder clearX1() {
        bitField0_ = (bitField0_ & ~0x00000010);
        x1_ = 0D;
        onChanged();
        return this;
      }

      // optional double x2 = 6;
      private double x2_ ;
      /**
       * <code>optional double x2 = 6;</code>
       *
       * <pre>
       * fraction of beam momentum carried by second parton (”target side”)
       * </pre>
       */
      public boolean hasX2() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double x2 = 6;</code>
       *
       * <pre>
       * fraction of beam momentum carried by second parton (”target side”)
       * </pre>
       */
      public double getX2() {
        return x2_;
      }
      /**
       * <code>optional double x2 = 6;</code>
       *
       * <pre>
       * fraction of beam momentum carried by second parton (”target side”)
       * </pre>
       */
      public Builder setX2(double value) {
        bitField0_ |= 0x00000020;
        x2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double x2 = 6;</code>
       *
       * <pre>
       * fraction of beam momentum carried by second parton (”target side”)
       * </pre>
       */
      public Builder clearX2() {
        bitField0_ = (bitField0_ & ~0x00000020);
        x2_ = 0D;
        onChanged();
        return this;
      }

      // optional double scalepdf = 7;
      private double scalepdf_ ;
      /**
       * <code>optional double scalepdf = 7;</code>
       *
       * <pre>
       * Q-scale used in evaluation of PDF’s (in GeV)
       * </pre>
       */
      public boolean hasScalepdf() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double scalepdf = 7;</code>
       *
       * <pre>
       * Q-scale used in evaluation of PDF’s (in GeV)
       * </pre>
       */
      public double getScalepdf() {
        return scalepdf_;
      }
      /**
       * <code>optional double scalepdf = 7;</code>
       *
       * <pre>
       * Q-scale used in evaluation of PDF’s (in GeV)
       * </pre>
       */
      public Builder setScalepdf(double value) {
        bitField0_ |= 0x00000040;
        scalepdf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double scalepdf = 7;</code>
       *
       * <pre>
       * Q-scale used in evaluation of PDF’s (in GeV)
       * </pre>
       */
      public Builder clearScalepdf() {
        bitField0_ = (bitField0_ & ~0x00000040);
        scalepdf_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 pdf1 = 8;
      private int pdf1_ ;
      /**
       * <code>optional int32 pdf1 = 8;</code>
       *
       * <pre>
       *  PDF (id1, x1, Q) This should be of the form x*f(x)
       * </pre>
       */
      public boolean hasPdf1() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 pdf1 = 8;</code>
       *
       * <pre>
       *  PDF (id1, x1, Q) This should be of the form x*f(x)
       * </pre>
       */
      public int getPdf1() {
        return pdf1_;
      }
      /**
       * <code>optional int32 pdf1 = 8;</code>
       *
       * <pre>
       *  PDF (id1, x1, Q) This should be of the form x*f(x)
       * </pre>
       */
      public Builder setPdf1(int value) {
        bitField0_ |= 0x00000080;
        pdf1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pdf1 = 8;</code>
       *
       * <pre>
       *  PDF (id1, x1, Q) This should be of the form x*f(x)
       * </pre>
       */
      public Builder clearPdf1() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pdf1_ = 0;
        onChanged();
        return this;
      }

      // optional int32 pdf2 = 9;
      private int pdf2_ ;
      /**
       * <code>optional int32 pdf2 = 9;</code>
       *
       * <pre>
       *  PDF (id2, x2, Q) This should be of the form x*f(x)
       * </pre>
       */
      public boolean hasPdf2() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 pdf2 = 9;</code>
       *
       * <pre>
       *  PDF (id2, x2, Q) This should be of the form x*f(x)
       * </pre>
       */
      public int getPdf2() {
        return pdf2_;
      }
      /**
       * <code>optional int32 pdf2 = 9;</code>
       *
       * <pre>
       *  PDF (id2, x2, Q) This should be of the form x*f(x)
       * </pre>
       */
      public Builder setPdf2(int value) {
        bitField0_ |= 0x00000100;
        pdf2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pdf2 = 9;</code>
       *
       * <pre>
       *  PDF (id2, x2, Q) This should be of the form x*f(x)
       * </pre>
       */
      public Builder clearPdf2() {
        bitField0_ = (bitField0_ & ~0x00000100);
        pdf2_ = 0;
        onChanged();
        return this;
      }

      // optional double eCM = 10;
      private double eCM_ ;
      /**
       * <code>optional double eCM = 10;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public boolean hasECM() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional double eCM = 10;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public double getECM() {
        return eCM_;
      }
      /**
       * <code>optional double eCM = 10;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public Builder setECM(double value) {
        bitField0_ |= 0x00000200;
        eCM_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double eCM = 10;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public Builder clearECM() {
        bitField0_ = (bitField0_ & ~0x00000200);
        eCM_ = 0D;
        onChanged();
        return this;
      }

      // optional double s = 11;
      private double s_ ;
      /**
       * <code>optional double s = 11;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public boolean hasS() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional double s = 11;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public double getS() {
        return s_;
      }
      /**
       * <code>optional double s = 11;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public Builder setS(double value) {
        bitField0_ |= 0x00000400;
        s_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double s = 11;</code>
       *
       * <pre>
       * CM energy
       * </pre>
       */
      public Builder clearS() {
        bitField0_ = (bitField0_ & ~0x00000400);
        s_ = 0D;
        onChanged();
        return this;
      }

      // optional string name = 12;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 12;</code>
       *
       * <pre>
       * process name 
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string name = 12;</code>
       *
       * <pre>
       * process name 
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 12;</code>
       *
       * <pre>
       * process name 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 12;</code>
       *
       * <pre>
       * process name 
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 12;</code>
       *
       * <pre>
       * process name 
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000800);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 12;</code>
       *
       * <pre>
       * process name 
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 code = 13;
      private int code_ ;
      /**
       * <code>optional int32 code = 13;</code>
       *
       * <pre>
       * process code 
       * </pre>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 code = 13;</code>
       *
       * <pre>
       * process code 
       * </pre>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>optional int32 code = 13;</code>
       *
       * <pre>
       * process code 
       * </pre>
       */
      public Builder setCode(int value) {
        bitField0_ |= 0x00001000;
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 code = 13;</code>
       *
       * <pre>
       * process code 
       * </pre>
       */
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00001000);
        code_ = 0;
        onChanged();
        return this;
      }

      // optional double cross_section = 14;
      private double crossSection_ ;
      /**
       * <code>optional double cross_section = 14;</code>
       *
       * <pre>
       *  cross section in pb
       * </pre>
       */
      public boolean hasCrossSection() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional double cross_section = 14;</code>
       *
       * <pre>
       *  cross section in pb
       * </pre>
       */
      public double getCrossSection() {
        return crossSection_;
      }
      /**
       * <code>optional double cross_section = 14;</code>
       *
       * <pre>
       *  cross section in pb
       * </pre>
       */
      public Builder setCrossSection(double value) {
        bitField0_ |= 0x00002000;
        crossSection_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cross_section = 14;</code>
       *
       * <pre>
       *  cross section in pb
       * </pre>
       */
      public Builder clearCrossSection() {
        bitField0_ = (bitField0_ & ~0x00002000);
        crossSection_ = 0D;
        onChanged();
        return this;
      }

      // optional double cross_section_error = 15;
      private double crossSectionError_ ;
      /**
       * <code>optional double cross_section_error = 15;</code>
       *
       * <pre>
       *  error associated with this cross section in pb 
       * </pre>
       */
      public boolean hasCrossSectionError() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional double cross_section_error = 15;</code>
       *
       * <pre>
       *  error associated with this cross section in pb 
       * </pre>
       */
      public double getCrossSectionError() {
        return crossSectionError_;
      }
      /**
       * <code>optional double cross_section_error = 15;</code>
       *
       * <pre>
       *  error associated with this cross section in pb 
       * </pre>
       */
      public Builder setCrossSectionError(double value) {
        bitField0_ |= 0x00004000;
        crossSectionError_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cross_section_error = 15;</code>
       *
       * <pre>
       *  error associated with this cross section in pb 
       * </pre>
       */
      public Builder clearCrossSectionError() {
        bitField0_ = (bitField0_ & ~0x00004000);
        crossSectionError_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 MomentumUnit = 16;
      private int momentumUnit_ ;
      /**
       * <code>optional int32 MomentumUnit = 16;</code>
       *
       * <pre>
       * values are MEV or GEV
       * </pre>
       */
      public boolean hasMomentumUnit() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 MomentumUnit = 16;</code>
       *
       * <pre>
       * values are MEV or GEV
       * </pre>
       */
      public int getMomentumUnit() {
        return momentumUnit_;
      }
      /**
       * <code>optional int32 MomentumUnit = 16;</code>
       *
       * <pre>
       * values are MEV or GEV
       * </pre>
       */
      public Builder setMomentumUnit(int value) {
        bitField0_ |= 0x00008000;
        momentumUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 MomentumUnit = 16;</code>
       *
       * <pre>
       * values are MEV or GEV
       * </pre>
       */
      public Builder clearMomentumUnit() {
        bitField0_ = (bitField0_ & ~0x00008000);
        momentumUnit_ = 0;
        onChanged();
        return this;
      }

      // optional int32 LengthUnit = 17;
      private int lengthUnit_ ;
      /**
       * <code>optional int32 LengthUnit = 17;</code>
       *
       * <pre>
       * values are MM or CM
       * </pre>
       */
      public boolean hasLengthUnit() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 LengthUnit = 17;</code>
       *
       * <pre>
       * values are MM or CM
       * </pre>
       */
      public int getLengthUnit() {
        return lengthUnit_;
      }
      /**
       * <code>optional int32 LengthUnit = 17;</code>
       *
       * <pre>
       * values are MM or CM
       * </pre>
       */
      public Builder setLengthUnit(int value) {
        bitField0_ |= 0x00010000;
        lengthUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 LengthUnit = 17;</code>
       *
       * <pre>
       * values are MM or CM
       * </pre>
       */
      public Builder clearLengthUnit() {
        bitField0_ = (bitField0_ & ~0x00010000);
        lengthUnit_ = 0;
        onChanged();
        return this;
      }

      // optional string NameMomentumUnit = 18;
      private java.lang.Object nameMomentumUnit_ = "";
      /**
       * <code>optional string NameMomentumUnit = 18;</code>
       *
       * <pre>
       * return the unit designation as a string
       * </pre>
       */
      public boolean hasNameMomentumUnit() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional string NameMomentumUnit = 18;</code>
       *
       * <pre>
       * return the unit designation as a string
       * </pre>
       */
      public java.lang.String getNameMomentumUnit() {
        java.lang.Object ref = nameMomentumUnit_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nameMomentumUnit_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string NameMomentumUnit = 18;</code>
       *
       * <pre>
       * return the unit designation as a string
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameMomentumUnitBytes() {
        java.lang.Object ref = nameMomentumUnit_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nameMomentumUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string NameMomentumUnit = 18;</code>
       *
       * <pre>
       * return the unit designation as a string
       * </pre>
       */
      public Builder setNameMomentumUnit(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        nameMomentumUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string NameMomentumUnit = 18;</code>
       *
       * <pre>
       * return the unit designation as a string
       * </pre>
       */
      public Builder clearNameMomentumUnit() {
        bitField0_ = (bitField0_ & ~0x00020000);
        nameMomentumUnit_ = getDefaultInstance().getNameMomentumUnit();
        onChanged();
        return this;
      }
      /**
       * <code>optional string NameMomentumUnit = 18;</code>
       *
       * <pre>
       * return the unit designation as a string
       * </pre>
       */
      public Builder setNameMomentumUnitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00020000;
        nameMomentumUnit_ = value;
        onChanged();
        return this;
      }

      // optional string NameLengthUnit = 19;
      private java.lang.Object nameLengthUnit_ = "";
      /**
       * <code>optional string NameLengthUnit = 19;</code>
       *
       * <pre>
       * return the unit designation as a string 
       * </pre>
       */
      public boolean hasNameLengthUnit() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string NameLengthUnit = 19;</code>
       *
       * <pre>
       * return the unit designation as a string 
       * </pre>
       */
      public java.lang.String getNameLengthUnit() {
        java.lang.Object ref = nameLengthUnit_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          nameLengthUnit_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string NameLengthUnit = 19;</code>
       *
       * <pre>
       * return the unit designation as a string 
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameLengthUnitBytes() {
        java.lang.Object ref = nameLengthUnit_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nameLengthUnit_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string NameLengthUnit = 19;</code>
       *
       * <pre>
       * return the unit designation as a string 
       * </pre>
       */
      public Builder setNameLengthUnit(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        nameLengthUnit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string NameLengthUnit = 19;</code>
       *
       * <pre>
       * return the unit designation as a string 
       * </pre>
       */
      public Builder clearNameLengthUnit() {
        bitField0_ = (bitField0_ & ~0x00040000);
        nameLengthUnit_ = getDefaultInstance().getNameLengthUnit();
        onChanged();
        return this;
      }
      /**
       * <code>optional string NameLengthUnit = 19;</code>
       *
       * <pre>
       * return the unit designation as a string 
       * </pre>
       */
      public Builder setNameLengthUnitBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        nameLengthUnit_ = value;
        onChanged();
        return this;
      }

      // optional double weight = 20;
      private double weight_ ;
      /**
       * <code>optional double weight = 20;</code>
       *
       * <pre>
       * event weight
       * </pre>
       */
      public boolean hasWeight() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional double weight = 20;</code>
       *
       * <pre>
       * event weight
       * </pre>
       */
      public double getWeight() {
        return weight_;
      }
      /**
       * <code>optional double weight = 20;</code>
       *
       * <pre>
       * event weight
       * </pre>
       */
      public Builder setWeight(double value) {
        bitField0_ |= 0x00080000;
        weight_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double weight = 20;</code>
       *
       * <pre>
       * event weight
       * </pre>
       */
      public Builder clearWeight() {
        bitField0_ = (bitField0_ & ~0x00080000);
        weight_ = 0D;
        onChanged();
        return this;
      }

      // optional double requested_events = 21;
      private double requestedEvents_ ;
      /**
       * <code>optional double requested_events = 21;</code>
       *
       * <pre>
       * total number of requested events 
       * </pre>
       */
      public boolean hasRequestedEvents() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional double requested_events = 21;</code>
       *
       * <pre>
       * total number of requested events 
       * </pre>
       */
      public double getRequestedEvents() {
        return requestedEvents_;
      }
      /**
       * <code>optional double requested_events = 21;</code>
       *
       * <pre>
       * total number of requested events 
       * </pre>
       */
      public Builder setRequestedEvents(double value) {
        bitField0_ |= 0x00100000;
        requestedEvents_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double requested_events = 21;</code>
       *
       * <pre>
       * total number of requested events 
       * </pre>
       */
      public Builder clearRequestedEvents() {
        bitField0_ = (bitField0_ & ~0x00100000);
        requestedEvents_ = 0D;
        onChanged();
        return this;
      }

      // repeated .promc.ProMCHeader.ParticleData particleData = 30;
      private java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData> particleData_ =
        java.util.Collections.emptyList();
      private void ensureParticleDataIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          particleData_ = new java.util.ArrayList<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData>(particleData_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCHeaderFile.ProMCHeader.ParticleData, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder, promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder> particleDataBuilder_;

      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData> getParticleDataList() {
        if (particleDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(particleData_);
        } else {
          return particleDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public int getParticleDataCount() {
        if (particleDataBuilder_ == null) {
          return particleData_.size();
        } else {
          return particleDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData getParticleData(int index) {
        if (particleDataBuilder_ == null) {
          return particleData_.get(index);
        } else {
          return particleDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder setParticleData(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData value) {
        if (particleDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParticleDataIsMutable();
          particleData_.set(index, value);
          onChanged();
        } else {
          particleDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder setParticleData(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder builderForValue) {
        if (particleDataBuilder_ == null) {
          ensureParticleDataIsMutable();
          particleData_.set(index, builderForValue.build());
          onChanged();
        } else {
          particleDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder addParticleData(promc.io.ProMCHeaderFile.ProMCHeader.ParticleData value) {
        if (particleDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParticleDataIsMutable();
          particleData_.add(value);
          onChanged();
        } else {
          particleDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder addParticleData(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData value) {
        if (particleDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParticleDataIsMutable();
          particleData_.add(index, value);
          onChanged();
        } else {
          particleDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder addParticleData(
          promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder builderForValue) {
        if (particleDataBuilder_ == null) {
          ensureParticleDataIsMutable();
          particleData_.add(builderForValue.build());
          onChanged();
        } else {
          particleDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder addParticleData(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder builderForValue) {
        if (particleDataBuilder_ == null) {
          ensureParticleDataIsMutable();
          particleData_.add(index, builderForValue.build());
          onChanged();
        } else {
          particleDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder addAllParticleData(
          java.lang.Iterable<? extends promc.io.ProMCHeaderFile.ProMCHeader.ParticleData> values) {
        if (particleDataBuilder_ == null) {
          ensureParticleDataIsMutable();
          super.addAll(values, particleData_);
          onChanged();
        } else {
          particleDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder clearParticleData() {
        if (particleDataBuilder_ == null) {
          particleData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          particleDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public Builder removeParticleData(int index) {
        if (particleDataBuilder_ == null) {
          ensureParticleDataIsMutable();
          particleData_.remove(index);
          onChanged();
        } else {
          particleDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder getParticleDataBuilder(
          int index) {
        return getParticleDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder getParticleDataOrBuilder(
          int index) {
        if (particleDataBuilder_ == null) {
          return particleData_.get(index);  } else {
          return particleDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder> 
           getParticleDataOrBuilderList() {
        if (particleDataBuilder_ != null) {
          return particleDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(particleData_);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder addParticleDataBuilder() {
        return getParticleDataFieldBuilder().addBuilder(
            promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder addParticleDataBuilder(
          int index) {
        return getParticleDataFieldBuilder().addBuilder(
            index, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCHeader.ParticleData particleData = 30;</code>
       *
       * <pre>
       * keep all particle information 
       * </pre>
       */
      public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder> 
           getParticleDataBuilderList() {
        return getParticleDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCHeaderFile.ProMCHeader.ParticleData, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder, promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder> 
          getParticleDataFieldBuilder() {
        if (particleDataBuilder_ == null) {
          particleDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              promc.io.ProMCHeaderFile.ProMCHeader.ParticleData, promc.io.ProMCHeaderFile.ProMCHeader.ParticleData.Builder, promc.io.ProMCHeaderFile.ProMCHeader.ParticleDataOrBuilder>(
                  particleData_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          particleData_ = null;
        }
        return particleDataBuilder_;
      }

      // repeated .promc.ProMCHeader.MetaInt metaInt = 31;
      private java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt> metaInt_ =
        java.util.Collections.emptyList();
      private void ensureMetaIntIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          metaInt_ = new java.util.ArrayList<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt>(metaInt_);
          bitField0_ |= 0x00400000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCHeaderFile.ProMCHeader.MetaInt, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder, promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder> metaIntBuilder_;

      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt> getMetaIntList() {
        if (metaIntBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaInt_);
        } else {
          return metaIntBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public int getMetaIntCount() {
        if (metaIntBuilder_ == null) {
          return metaInt_.size();
        } else {
          return metaIntBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt getMetaInt(int index) {
        if (metaIntBuilder_ == null) {
          return metaInt_.get(index);
        } else {
          return metaIntBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder setMetaInt(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt value) {
        if (metaIntBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIntIsMutable();
          metaInt_.set(index, value);
          onChanged();
        } else {
          metaIntBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder setMetaInt(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder builderForValue) {
        if (metaIntBuilder_ == null) {
          ensureMetaIntIsMutable();
          metaInt_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaIntBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder addMetaInt(promc.io.ProMCHeaderFile.ProMCHeader.MetaInt value) {
        if (metaIntBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIntIsMutable();
          metaInt_.add(value);
          onChanged();
        } else {
          metaIntBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder addMetaInt(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt value) {
        if (metaIntBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaIntIsMutable();
          metaInt_.add(index, value);
          onChanged();
        } else {
          metaIntBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder addMetaInt(
          promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder builderForValue) {
        if (metaIntBuilder_ == null) {
          ensureMetaIntIsMutable();
          metaInt_.add(builderForValue.build());
          onChanged();
        } else {
          metaIntBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder addMetaInt(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder builderForValue) {
        if (metaIntBuilder_ == null) {
          ensureMetaIntIsMutable();
          metaInt_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaIntBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder addAllMetaInt(
          java.lang.Iterable<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaInt> values) {
        if (metaIntBuilder_ == null) {
          ensureMetaIntIsMutable();
          super.addAll(values, metaInt_);
          onChanged();
        } else {
          metaIntBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder clearMetaInt() {
        if (metaIntBuilder_ == null) {
          metaInt_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00400000);
          onChanged();
        } else {
          metaIntBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public Builder removeMetaInt(int index) {
        if (metaIntBuilder_ == null) {
          ensureMetaIntIsMutable();
          metaInt_.remove(index);
          onChanged();
        } else {
          metaIntBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder getMetaIntBuilder(
          int index) {
        return getMetaIntFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder getMetaIntOrBuilder(
          int index) {
        if (metaIntBuilder_ == null) {
          return metaInt_.get(index);  } else {
          return metaIntBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder> 
           getMetaIntOrBuilderList() {
        if (metaIntBuilder_ != null) {
          return metaIntBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaInt_);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder addMetaIntBuilder() {
        return getMetaIntFieldBuilder().addBuilder(
            promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder addMetaIntBuilder(
          int index) {
        return getMetaIntFieldBuilder().addBuilder(
            index, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaInt metaInt = 31;</code>
       *
       * <pre>
       * keep metadata as key-value (int) 
       * </pre>
       */
      public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder> 
           getMetaIntBuilderList() {
        return getMetaIntFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCHeaderFile.ProMCHeader.MetaInt, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder, promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder> 
          getMetaIntFieldBuilder() {
        if (metaIntBuilder_ == null) {
          metaIntBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              promc.io.ProMCHeaderFile.ProMCHeader.MetaInt, promc.io.ProMCHeaderFile.ProMCHeader.MetaInt.Builder, promc.io.ProMCHeaderFile.ProMCHeader.MetaIntOrBuilder>(
                  metaInt_,
                  ((bitField0_ & 0x00400000) == 0x00400000),
                  getParentForChildren(),
                  isClean());
          metaInt_ = null;
        }
        return metaIntBuilder_;
      }

      // repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;
      private java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat> metaFloat_ =
        java.util.Collections.emptyList();
      private void ensureMetaFloatIsMutable() {
        if (!((bitField0_ & 0x00800000) == 0x00800000)) {
          metaFloat_ = new java.util.ArrayList<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat>(metaFloat_);
          bitField0_ |= 0x00800000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder> metaFloatBuilder_;

      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat> getMetaFloatList() {
        if (metaFloatBuilder_ == null) {
          return java.util.Collections.unmodifiableList(metaFloat_);
        } else {
          return metaFloatBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public int getMetaFloatCount() {
        if (metaFloatBuilder_ == null) {
          return metaFloat_.size();
        } else {
          return metaFloatBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat getMetaFloat(int index) {
        if (metaFloatBuilder_ == null) {
          return metaFloat_.get(index);
        } else {
          return metaFloatBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder setMetaFloat(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat value) {
        if (metaFloatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaFloatIsMutable();
          metaFloat_.set(index, value);
          onChanged();
        } else {
          metaFloatBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder setMetaFloat(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder builderForValue) {
        if (metaFloatBuilder_ == null) {
          ensureMetaFloatIsMutable();
          metaFloat_.set(index, builderForValue.build());
          onChanged();
        } else {
          metaFloatBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder addMetaFloat(promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat value) {
        if (metaFloatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaFloatIsMutable();
          metaFloat_.add(value);
          onChanged();
        } else {
          metaFloatBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder addMetaFloat(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat value) {
        if (metaFloatBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMetaFloatIsMutable();
          metaFloat_.add(index, value);
          onChanged();
        } else {
          metaFloatBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder addMetaFloat(
          promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder builderForValue) {
        if (metaFloatBuilder_ == null) {
          ensureMetaFloatIsMutable();
          metaFloat_.add(builderForValue.build());
          onChanged();
        } else {
          metaFloatBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder addMetaFloat(
          int index, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder builderForValue) {
        if (metaFloatBuilder_ == null) {
          ensureMetaFloatIsMutable();
          metaFloat_.add(index, builderForValue.build());
          onChanged();
        } else {
          metaFloatBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder addAllMetaFloat(
          java.lang.Iterable<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat> values) {
        if (metaFloatBuilder_ == null) {
          ensureMetaFloatIsMutable();
          super.addAll(values, metaFloat_);
          onChanged();
        } else {
          metaFloatBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder clearMetaFloat() {
        if (metaFloatBuilder_ == null) {
          metaFloat_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00800000);
          onChanged();
        } else {
          metaFloatBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public Builder removeMetaFloat(int index) {
        if (metaFloatBuilder_ == null) {
          ensureMetaFloatIsMutable();
          metaFloat_.remove(index);
          onChanged();
        } else {
          metaFloatBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder getMetaFloatBuilder(
          int index) {
        return getMetaFloatFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder getMetaFloatOrBuilder(
          int index) {
        if (metaFloatBuilder_ == null) {
          return metaFloat_.get(index);  } else {
          return metaFloatBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public java.util.List<? extends promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder> 
           getMetaFloatOrBuilderList() {
        if (metaFloatBuilder_ != null) {
          return metaFloatBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(metaFloat_);
        }
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder addMetaFloatBuilder() {
        return getMetaFloatFieldBuilder().addBuilder(
            promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder addMetaFloatBuilder(
          int index) {
        return getMetaFloatFieldBuilder().addBuilder(
            index, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCHeader.MetaFloat metaFloat = 32;</code>
       *
       * <pre>
       * keep metadata as key-value (double)
       * </pre>
       */
      public java.util.List<promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder> 
           getMetaFloatBuilderList() {
        return getMetaFloatFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder> 
          getMetaFloatFieldBuilder() {
        if (metaFloatBuilder_ == null) {
          metaFloatBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloat.Builder, promc.io.ProMCHeaderFile.ProMCHeader.MetaFloatOrBuilder>(
                  metaFloat_,
                  ((bitField0_ & 0x00800000) == 0x00800000),
                  getParentForChildren(),
                  isClean());
          metaFloat_ = null;
        }
        return metaFloatBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:promc.ProMCHeader)
    }

    static {
      defaultInstance = new ProMCHeader(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:promc.ProMCHeader)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_ProMCHeader_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_ProMCHeader_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_ProMCHeader_ParticleData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_ProMCHeader_ParticleData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_ProMCHeader_MetaInt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_ProMCHeader_MetaInt_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_ProMCHeader_MetaFloat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_ProMCHeader_MetaFloat_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021ProMCHeader.proto\022\005promc\"\313\005\n\013ProMCHead" +
      "er\022\013\n\003id1\030\001 \001(\005\022\013\n\003id2\030\002 \001(\005\022\017\n\007pdf_id1\030" +
      "\003 \001(\005\022\017\n\007pdf_id2\030\004 \001(\005\022\n\n\002x1\030\005 \001(\001\022\n\n\002x2" +
      "\030\006 \001(\001\022\020\n\010scalepdf\030\007 \001(\001\022\014\n\004pdf1\030\010 \001(\005\022\014" +
      "\n\004pdf2\030\t \001(\005\022\013\n\003eCM\030\n \001(\001\022\t\n\001s\030\013 \001(\001\022\014\n\004" +
      "name\030\014 \001(\t\022\014\n\004code\030\r \001(\005\022\025\n\rcross_sectio" +
      "n\030\016 \001(\001\022\033\n\023cross_section_error\030\017 \001(\001\022\024\n\014" +
      "MomentumUnit\030\020 \001(\005\022\022\n\nLengthUnit\030\021 \001(\005\022\030" +
      "\n\020NameMomentumUnit\030\022 \001(\t\022\026\n\016NameLengthUn" +
      "it\030\023 \001(\t\022\016\n\006weight\030\024 \001(\001\022\030\n\020requested_ev",
      "ents\030\025 \001(\001\0225\n\014particleData\030\036 \003(\0132\037.promc" +
      ".ProMCHeader.ParticleData\022+\n\007metaInt\030\037 \003" +
      "(\0132\032.promc.ProMCHeader.MetaInt\022/\n\tmetaFl" +
      "oat\030  \003(\0132\034.promc.ProMCHeader.MetaFloat\032" +
      "g\n\014ParticleData\022\n\n\002id\030\001 \002(\021\022\014\n\004mass\030\002 \002(" +
      "\001\022\014\n\004name\030\003 \002(\t\022\r\n\005width\030\004 \001(\002\022\020\n\010lifeti" +
      "me\030\005 \001(\002\022\016\n\006charge\030\006 \001(\021\032%\n\007MetaInt\022\013\n\003k" +
      "ey\030\001 \002(\t\022\r\n\005value\030\002 \002(\022\032\'\n\tMetaFloat\022\013\n\003" +
      "key\030\001 \002(\t\022\r\n\005value\030\002 \002(\001B\033\n\010promc.ioB\017Pr" +
      "oMCHeaderFile"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_promc_ProMCHeader_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_promc_ProMCHeader_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_ProMCHeader_descriptor,
              new java.lang.String[] { "Id1", "Id2", "PdfId1", "PdfId2", "X1", "X2", "Scalepdf", "Pdf1", "Pdf2", "ECM", "S", "Name", "Code", "CrossSection", "CrossSectionError", "MomentumUnit", "LengthUnit", "NameMomentumUnit", "NameLengthUnit", "Weight", "RequestedEvents", "ParticleData", "MetaInt", "MetaFloat", });
          internal_static_promc_ProMCHeader_ParticleData_descriptor =
            internal_static_promc_ProMCHeader_descriptor.getNestedTypes().get(0);
          internal_static_promc_ProMCHeader_ParticleData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_ProMCHeader_ParticleData_descriptor,
              new java.lang.String[] { "Id", "Mass", "Name", "Width", "Lifetime", "Charge", });
          internal_static_promc_ProMCHeader_MetaInt_descriptor =
            internal_static_promc_ProMCHeader_descriptor.getNestedTypes().get(1);
          internal_static_promc_ProMCHeader_MetaInt_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_ProMCHeader_MetaInt_descriptor,
              new java.lang.String[] { "Key", "Value", });
          internal_static_promc_ProMCHeader_MetaFloat_descriptor =
            internal_static_promc_ProMCHeader_descriptor.getNestedTypes().get(2);
          internal_static_promc_ProMCHeader_MetaFloat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_ProMCHeader_MetaFloat_descriptor,
              new java.lang.String[] { "Key", "Value", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
