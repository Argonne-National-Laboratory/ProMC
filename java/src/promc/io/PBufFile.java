// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HRecord.proto

package promc.io;

public final class PBufFile {
  private PBufFile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RecordOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string name = 1;
    /**
     * <code>optional string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>optional string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional .promc.Record.P0I p0I = 2;
    /**
     * <code>optional .promc.Record.P0I p0I = 2;</code>
     */
    boolean hasP0I();
    /**
     * <code>optional .promc.Record.P0I p0I = 2;</code>
     */
    promc.io.PBufFile.Record.P0I getP0I();
    /**
     * <code>optional .promc.Record.P0I p0I = 2;</code>
     */
    promc.io.PBufFile.Record.P0IOrBuilder getP0IOrBuilder();

    // optional .promc.Record.P0D p0D = 3;
    /**
     * <code>optional .promc.Record.P0D p0D = 3;</code>
     */
    boolean hasP0D();
    /**
     * <code>optional .promc.Record.P0D p0D = 3;</code>
     */
    promc.io.PBufFile.Record.P0D getP0D();
    /**
     * <code>optional .promc.Record.P0D p0D = 3;</code>
     */
    promc.io.PBufFile.Record.P0DOrBuilder getP0DOrBuilder();

    // optional .promc.Record.PXY pXY = 4;
    /**
     * <code>optional .promc.Record.PXY pXY = 4;</code>
     */
    boolean hasPXY();
    /**
     * <code>optional .promc.Record.PXY pXY = 4;</code>
     */
    promc.io.PBufFile.Record.PXY getPXY();
    /**
     * <code>optional .promc.Record.PXY pXY = 4;</code>
     */
    promc.io.PBufFile.Record.PXYOrBuilder getPXYOrBuilder();

    // optional .promc.Record.PXYZ pXYZ = 5;
    /**
     * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
     */
    boolean hasPXYZ();
    /**
     * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
     */
    promc.io.PBufFile.Record.PXYZ getPXYZ();
    /**
     * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
     */
    promc.io.PBufFile.Record.PXYZOrBuilder getPXYZOrBuilder();

    // optional .promc.Record.P1D p1D = 6;
    /**
     * <code>optional .promc.Record.P1D p1D = 6;</code>
     */
    boolean hasP1D();
    /**
     * <code>optional .promc.Record.P1D p1D = 6;</code>
     */
    promc.io.PBufFile.Record.P1D getP1D();
    /**
     * <code>optional .promc.Record.P1D p1D = 6;</code>
     */
    promc.io.PBufFile.Record.P1DOrBuilder getP1DOrBuilder();

    // optional .promc.Record.H1D h1D = 7;
    /**
     * <code>optional .promc.Record.H1D h1D = 7;</code>
     */
    boolean hasH1D();
    /**
     * <code>optional .promc.Record.H1D h1D = 7;</code>
     */
    promc.io.PBufFile.Record.H1D getH1D();
    /**
     * <code>optional .promc.Record.H1D h1D = 7;</code>
     */
    promc.io.PBufFile.Record.H1DOrBuilder getH1DOrBuilder();

    // optional .promc.Record.H2D h2D = 8;
    /**
     * <code>optional .promc.Record.H2D h2D = 8;</code>
     */
    boolean hasH2D();
    /**
     * <code>optional .promc.Record.H2D h2D = 8;</code>
     */
    promc.io.PBufFile.Record.H2D getH2D();
    /**
     * <code>optional .promc.Record.H2D h2D = 8;</code>
     */
    promc.io.PBufFile.Record.H2DOrBuilder getH2DOrBuilder();

    // optional .promc.Record.F1D f1D = 9;
    /**
     * <code>optional .promc.Record.F1D f1D = 9;</code>
     */
    boolean hasF1D();
    /**
     * <code>optional .promc.Record.F1D f1D = 9;</code>
     */
    promc.io.PBufFile.Record.F1D getF1D();
    /**
     * <code>optional .promc.Record.F1D f1D = 9;</code>
     */
    promc.io.PBufFile.Record.F1DOrBuilder getF1DOrBuilder();

    // optional .promc.Record.F2D f2D = 10;
    /**
     * <code>optional .promc.Record.F2D f2D = 10;</code>
     */
    boolean hasF2D();
    /**
     * <code>optional .promc.Record.F2D f2D = 10;</code>
     */
    promc.io.PBufFile.Record.F2D getF2D();
    /**
     * <code>optional .promc.Record.F2D f2D = 10;</code>
     */
    promc.io.PBufFile.Record.F2DOrBuilder getF2DOrBuilder();

    // optional .promc.Record.FND fND = 11;
    /**
     * <code>optional .promc.Record.FND fND = 11;</code>
     */
    boolean hasFND();
    /**
     * <code>optional .promc.Record.FND fND = 11;</code>
     */
    promc.io.PBufFile.Record.FND getFND();
    /**
     * <code>optional .promc.Record.FND fND = 11;</code>
     */
    promc.io.PBufFile.Record.FNDOrBuilder getFNDOrBuilder();

    // optional .promc.Record.FPR fPR = 12;
    /**
     * <code>optional .promc.Record.FPR fPR = 12;</code>
     */
    boolean hasFPR();
    /**
     * <code>optional .promc.Record.FPR fPR = 12;</code>
     */
    promc.io.PBufFile.Record.FPR getFPR();
    /**
     * <code>optional .promc.Record.FPR fPR = 12;</code>
     */
    promc.io.PBufFile.Record.FPROrBuilder getFPROrBuilder();

    // optional .promc.Record.PND pND = 13;
    /**
     * <code>optional .promc.Record.PND pND = 13;</code>
     */
    boolean hasPND();
    /**
     * <code>optional .promc.Record.PND pND = 13;</code>
     */
    promc.io.PBufFile.Record.PND getPND();
    /**
     * <code>optional .promc.Record.PND pND = 13;</code>
     */
    promc.io.PBufFile.Record.PNDOrBuilder getPNDOrBuilder();

    // optional .promc.Record.PNI pNI = 14;
    /**
     * <code>optional .promc.Record.PNI pNI = 14;</code>
     */
    boolean hasPNI();
    /**
     * <code>optional .promc.Record.PNI pNI = 14;</code>
     */
    promc.io.PBufFile.Record.PNI getPNI();
    /**
     * <code>optional .promc.Record.PNI pNI = 14;</code>
     */
    promc.io.PBufFile.Record.PNIOrBuilder getPNIOrBuilder();
  }
  /**
   * Protobuf type {@code promc.Record}
   *
   * <pre>
   * orginize in repeated records
   * </pre>
   */
  public static final class Record extends
      com.google.protobuf.GeneratedMessage
      implements RecordOrBuilder {
    // Use Record.newBuilder() to construct.
    private Record(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Record(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Record defaultInstance;
    public static Record getDefaultInstance() {
      return defaultInstance;
    }

    public Record getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Record(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              name_ = input.readBytes();
              break;
            }
            case 18: {
              promc.io.PBufFile.Record.P0I.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = p0I_.toBuilder();
              }
              p0I_ = input.readMessage(promc.io.PBufFile.Record.P0I.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p0I_);
                p0I_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              promc.io.PBufFile.Record.P0D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = p0D_.toBuilder();
              }
              p0D_ = input.readMessage(promc.io.PBufFile.Record.P0D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p0D_);
                p0D_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 34: {
              promc.io.PBufFile.Record.PXY.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = pXY_.toBuilder();
              }
              pXY_ = input.readMessage(promc.io.PBufFile.Record.PXY.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pXY_);
                pXY_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 42: {
              promc.io.PBufFile.Record.PXYZ.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = pXYZ_.toBuilder();
              }
              pXYZ_ = input.readMessage(promc.io.PBufFile.Record.PXYZ.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pXYZ_);
                pXYZ_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              promc.io.PBufFile.Record.P1D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = p1D_.toBuilder();
              }
              p1D_ = input.readMessage(promc.io.PBufFile.Record.P1D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(p1D_);
                p1D_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 58: {
              promc.io.PBufFile.Record.H1D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = h1D_.toBuilder();
              }
              h1D_ = input.readMessage(promc.io.PBufFile.Record.H1D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(h1D_);
                h1D_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 66: {
              promc.io.PBufFile.Record.H2D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = h2D_.toBuilder();
              }
              h2D_ = input.readMessage(promc.io.PBufFile.Record.H2D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(h2D_);
                h2D_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 74: {
              promc.io.PBufFile.Record.F1D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000100) == 0x00000100)) {
                subBuilder = f1D_.toBuilder();
              }
              f1D_ = input.readMessage(promc.io.PBufFile.Record.F1D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(f1D_);
                f1D_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000100;
              break;
            }
            case 82: {
              promc.io.PBufFile.Record.F2D.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = f2D_.toBuilder();
              }
              f2D_ = input.readMessage(promc.io.PBufFile.Record.F2D.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(f2D_);
                f2D_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 90: {
              promc.io.PBufFile.Record.FND.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = fND_.toBuilder();
              }
              fND_ = input.readMessage(promc.io.PBufFile.Record.FND.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fND_);
                fND_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 98: {
              promc.io.PBufFile.Record.FPR.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = fPR_.toBuilder();
              }
              fPR_ = input.readMessage(promc.io.PBufFile.Record.FPR.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fPR_);
                fPR_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 106: {
              promc.io.PBufFile.Record.PND.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = pND_.toBuilder();
              }
              pND_ = input.readMessage(promc.io.PBufFile.Record.PND.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pND_);
                pND_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 114: {
              promc.io.PBufFile.Record.PNI.Builder subBuilder = null;
              if (((bitField0_ & 0x00002000) == 0x00002000)) {
                subBuilder = pNI_.toBuilder();
              }
              pNI_ = input.readMessage(promc.io.PBufFile.Record.PNI.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pNI_);
                pNI_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00002000;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return promc.io.PBufFile.internal_static_promc_Record_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return promc.io.PBufFile.internal_static_promc_Record_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              promc.io.PBufFile.Record.class, promc.io.PBufFile.Record.Builder.class);
    }

    public static com.google.protobuf.Parser<Record> PARSER =
        new com.google.protobuf.AbstractParser<Record>() {
      public Record parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Record(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Record> getParserForType() {
      return PARSER;
    }

    public interface P0IOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated int64 value = 2 [packed = true];
      /**
       * <code>repeated int64 value = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Long> getValueList();
      /**
       * <code>repeated int64 value = 2 [packed = true];</code>
       */
      int getValueCount();
      /**
       * <code>repeated int64 value = 2 [packed = true];</code>
       */
      long getValue(int index);
    }
    /**
     * Protobuf type {@code promc.Record.P0I}
     */
    public static final class P0I extends
        com.google.protobuf.GeneratedMessage
        implements P0IOrBuilder {
      // Use P0I.newBuilder() to construct.
      private P0I(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private P0I(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final P0I defaultInstance;
      public static P0I getDefaultInstance() {
        return defaultInstance;
      }

      public P0I getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private P0I(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  value_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000002;
                }
                value_.add(input.readInt64());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  value_ = new java.util.ArrayList<java.lang.Long>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  value_.add(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_P0I_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_P0I_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.P0I.class, promc.io.PBufFile.Record.P0I.Builder.class);
      }

      public static com.google.protobuf.Parser<P0I> PARSER =
          new com.google.protobuf.AbstractParser<P0I>() {
        public P0I parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new P0I(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<P0I> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated int64 value = 2 [packed = true];
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Long> value_;
      /**
       * <code>repeated int64 value = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated int64 value = 2 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 2 [packed = true];</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      private int valueMemoizedSerializedSize = -1;

      private void initFields() {
        name_ = "none";
        value_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getValueList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(valueMemoizedSerializedSize);
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeInt64NoTag(value_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < value_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(value_.get(i));
          }
          size += dataSize;
          if (!getValueList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          valueMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.P0I parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.P0I parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0I parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.P0I parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0I parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.P0I parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0I parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.P0I parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0I parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.P0I parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.P0I prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.P0I}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.P0IOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_P0I_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_P0I_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.P0I.class, promc.io.PBufFile.Record.P0I.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.P0I.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_P0I_descriptor;
        }

        public promc.io.PBufFile.Record.P0I getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.P0I.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.P0I build() {
          promc.io.PBufFile.Record.P0I result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.P0I buildPartial() {
          promc.io.PBufFile.Record.P0I result = new promc.io.PBufFile.Record.P0I(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.P0I) {
            return mergeFrom((promc.io.PBufFile.Record.P0I)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.P0I other) {
          if (other == promc.io.PBufFile.Record.P0I.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.P0I parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.P0I) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated int64 value = 2 [packed = true];
        private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = new java.util.ArrayList<java.lang.Long>(value_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int64 value = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Long>
            getValueList() {
          return java.util.Collections.unmodifiableList(value_);
        }
        /**
         * <code>repeated int64 value = 2 [packed = true];</code>
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated int64 value = 2 [packed = true];</code>
         */
        public long getValue(int index) {
          return value_.get(index);
        }
        /**
         * <code>repeated int64 value = 2 [packed = true];</code>
         */
        public Builder setValue(
            int index, long value) {
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 value = 2 [packed = true];</code>
         */
        public Builder addValue(long value) {
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 value = 2 [packed = true];</code>
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 value = 2 [packed = true];</code>
         */
        public Builder clearValue() {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.P0I)
      }

      static {
        defaultInstance = new P0I(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.P0I)
    }

    public interface P0DOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated double value = 2 [packed = true];
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getValueList();
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      int getValueCount();
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      double getValue(int index);
    }
    /**
     * Protobuf type {@code promc.Record.P0D}
     */
    public static final class P0D extends
        com.google.protobuf.GeneratedMessage
        implements P0DOrBuilder {
      // Use P0D.newBuilder() to construct.
      private P0D(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private P0D(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final P0D defaultInstance;
      public static P0D getDefaultInstance() {
        return defaultInstance;
      }

      public P0D getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private P0D(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  value_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                value_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  value_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  value_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_P0D_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_P0D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.P0D.class, promc.io.PBufFile.Record.P0D.Builder.class);
      }

      public static com.google.protobuf.Parser<P0D> PARSER =
          new com.google.protobuf.AbstractParser<P0D>() {
        public P0D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new P0D(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<P0D> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated double value = 2 [packed = true];
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> value_;
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      public double getValue(int index) {
        return value_.get(index);
      }
      private int valueMemoizedSerializedSize = -1;

      private void initFields() {
        name_ = "none";
        value_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getValueList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(valueMemoizedSerializedSize);
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeDoubleNoTag(value_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getValueList().size();
          size += dataSize;
          if (!getValueList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          valueMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.P0D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.P0D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.P0D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.P0D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.P0D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P0D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.P0D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.P0D prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.P0D}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.P0DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_P0D_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_P0D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.P0D.class, promc.io.PBufFile.Record.P0D.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.P0D.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_P0D_descriptor;
        }

        public promc.io.PBufFile.Record.P0D getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.P0D.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.P0D build() {
          promc.io.PBufFile.Record.P0D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.P0D buildPartial() {
          promc.io.PBufFile.Record.P0D result = new promc.io.PBufFile.Record.P0D(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.P0D) {
            return mergeFrom((promc.io.PBufFile.Record.P0D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.P0D other) {
          if (other == promc.io.PBufFile.Record.P0D.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.P0D parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.P0D) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated double value = 2 [packed = true];
        private java.util.List<java.lang.Double> value_ = java.util.Collections.emptyList();
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = new java.util.ArrayList<java.lang.Double>(value_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getValueList() {
          return java.util.Collections.unmodifiableList(value_);
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public double getValue(int index) {
          return value_.get(index);
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder setValue(
            int index, double value) {
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder addValue(double value) {
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder clearValue() {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.P0D)
      }

      static {
        defaultInstance = new P0D(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.P0D)
    }

    public interface PXYOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated double x = 2 [packed = true];
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getXList();
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      int getXCount();
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      double getX(int index);

      // repeated double y = 3 [packed = true];
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getYList();
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      int getYCount();
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      double getY(int index);
    }
    /**
     * Protobuf type {@code promc.Record.PXY}
     *
     * <pre>
     * to keep X vs Y
     * </pre>
     */
    public static final class PXY extends
        com.google.protobuf.GeneratedMessage
        implements PXYOrBuilder {
      // Use PXY.newBuilder() to construct.
      private PXY(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PXY(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PXY defaultInstance;
      public static PXY getDefaultInstance() {
        return defaultInstance;
      }

      public PXY getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PXY(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  x_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                x_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  x_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  x_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 25: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  y_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                y_.add(input.readDouble());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  y_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  y_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = java.util.Collections.unmodifiableList(x_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = java.util.Collections.unmodifiableList(y_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_PXY_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_PXY_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.PXY.class, promc.io.PBufFile.Record.PXY.Builder.class);
      }

      public static com.google.protobuf.Parser<PXY> PARSER =
          new com.google.protobuf.AbstractParser<PXY>() {
        public PXY parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PXY(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PXY> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated double x = 2 [packed = true];
      public static final int X_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> x_;
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getXList() {
        return x_;
      }
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public int getXCount() {
        return x_.size();
      }
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public double getX(int index) {
        return x_.get(index);
      }
      private int xMemoizedSerializedSize = -1;

      // repeated double y = 3 [packed = true];
      public static final int Y_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Double> y_;
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getYList() {
        return y_;
      }
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public int getYCount() {
        return y_.size();
      }
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public double getY(int index) {
        return y_.get(index);
      }
      private int yMemoizedSerializedSize = -1;

      private void initFields() {
        name_ = "none";
        x_ = java.util.Collections.emptyList();
        y_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getXList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(xMemoizedSerializedSize);
        }
        for (int i = 0; i < x_.size(); i++) {
          output.writeDoubleNoTag(x_.get(i));
        }
        if (getYList().size() > 0) {
          output.writeRawVarint32(26);
          output.writeRawVarint32(yMemoizedSerializedSize);
        }
        for (int i = 0; i < y_.size(); i++) {
          output.writeDoubleNoTag(y_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getXList().size();
          size += dataSize;
          if (!getXList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getYList().size();
          size += dataSize;
          if (!getYList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          yMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.PXY parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PXY parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXY parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PXY parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXY parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PXY parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXY parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.PXY parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXY parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PXY parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.PXY prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.PXY}
       *
       * <pre>
       * to keep X vs Y
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.PXYOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_PXY_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_PXY_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.PXY.class, promc.io.PBufFile.Record.PXY.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.PXY.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_PXY_descriptor;
        }

        public promc.io.PBufFile.Record.PXY getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.PXY.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.PXY build() {
          promc.io.PBufFile.Record.PXY result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.PXY buildPartial() {
          promc.io.PBufFile.Record.PXY result = new promc.io.PBufFile.Record.PXY(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = java.util.Collections.unmodifiableList(x_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.x_ = x_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = java.util.Collections.unmodifiableList(y_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.y_ = y_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.PXY) {
            return mergeFrom((promc.io.PBufFile.Record.PXY)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.PXY other) {
          if (other == promc.io.PBufFile.Record.PXY.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.x_.isEmpty()) {
            if (x_.isEmpty()) {
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureXIsMutable();
              x_.addAll(other.x_);
            }
            onChanged();
          }
          if (!other.y_.isEmpty()) {
            if (y_.isEmpty()) {
              y_ = other.y_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureYIsMutable();
              y_.addAll(other.y_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.PXY parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.PXY) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated double x = 2 [packed = true];
        private java.util.List<java.lang.Double> x_ = java.util.Collections.emptyList();
        private void ensureXIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = new java.util.ArrayList<java.lang.Double>(x_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getXList() {
          return java.util.Collections.unmodifiableList(x_);
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public int getXCount() {
          return x_.size();
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public double getX(int index) {
          return x_.get(index);
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder setX(
            int index, double value) {
          ensureXIsMutable();
          x_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder addX(double value) {
          ensureXIsMutable();
          x_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder addAllX(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureXIsMutable();
          super.addAll(values, x_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder clearX() {
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // repeated double y = 3 [packed = true];
        private java.util.List<java.lang.Double> y_ = java.util.Collections.emptyList();
        private void ensureYIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = new java.util.ArrayList<java.lang.Double>(y_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getYList() {
          return java.util.Collections.unmodifiableList(y_);
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public int getYCount() {
          return y_.size();
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public double getY(int index) {
          return y_.get(index);
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder setY(
            int index, double value) {
          ensureYIsMutable();
          y_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder addY(double value) {
          ensureYIsMutable();
          y_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder addAllY(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureYIsMutable();
          super.addAll(values, y_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder clearY() {
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.PXY)
      }

      static {
        defaultInstance = new PXY(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.PXY)
    }

    public interface PXYZOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated double x = 2 [packed = true];
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getXList();
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      int getXCount();
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      double getX(int index);

      // repeated double y = 3 [packed = true];
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getYList();
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      int getYCount();
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      double getY(int index);

      // repeated double z = 4 [packed = true];
      /**
       * <code>repeated double z = 4 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getZList();
      /**
       * <code>repeated double z = 4 [packed = true];</code>
       */
      int getZCount();
      /**
       * <code>repeated double z = 4 [packed = true];</code>
       */
      double getZ(int index);
    }
    /**
     * Protobuf type {@code promc.Record.PXYZ}
     *
     * <pre>
     * to keep X vs Y vs Z
     * </pre>
     */
    public static final class PXYZ extends
        com.google.protobuf.GeneratedMessage
        implements PXYZOrBuilder {
      // Use PXYZ.newBuilder() to construct.
      private PXYZ(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PXYZ(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PXYZ defaultInstance;
      public static PXYZ getDefaultInstance() {
        return defaultInstance;
      }

      public PXYZ getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PXYZ(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  x_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                x_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  x_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  x_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 25: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  y_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                y_.add(input.readDouble());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  y_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  y_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 33: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  z_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                z_.add(input.readDouble());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  z_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  z_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = java.util.Collections.unmodifiableList(x_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = java.util.Collections.unmodifiableList(y_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            z_ = java.util.Collections.unmodifiableList(z_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_PXYZ_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_PXYZ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.PXYZ.class, promc.io.PBufFile.Record.PXYZ.Builder.class);
      }

      public static com.google.protobuf.Parser<PXYZ> PARSER =
          new com.google.protobuf.AbstractParser<PXYZ>() {
        public PXYZ parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PXYZ(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PXYZ> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated double x = 2 [packed = true];
      public static final int X_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> x_;
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getXList() {
        return x_;
      }
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public int getXCount() {
        return x_.size();
      }
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public double getX(int index) {
        return x_.get(index);
      }
      private int xMemoizedSerializedSize = -1;

      // repeated double y = 3 [packed = true];
      public static final int Y_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Double> y_;
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getYList() {
        return y_;
      }
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public int getYCount() {
        return y_.size();
      }
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public double getY(int index) {
        return y_.get(index);
      }
      private int yMemoizedSerializedSize = -1;

      // repeated double z = 4 [packed = true];
      public static final int Z_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Double> z_;
      /**
       * <code>repeated double z = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getZList() {
        return z_;
      }
      /**
       * <code>repeated double z = 4 [packed = true];</code>
       */
      public int getZCount() {
        return z_.size();
      }
      /**
       * <code>repeated double z = 4 [packed = true];</code>
       */
      public double getZ(int index) {
        return z_.get(index);
      }
      private int zMemoizedSerializedSize = -1;

      private void initFields() {
        name_ = "none";
        x_ = java.util.Collections.emptyList();
        y_ = java.util.Collections.emptyList();
        z_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getXList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(xMemoizedSerializedSize);
        }
        for (int i = 0; i < x_.size(); i++) {
          output.writeDoubleNoTag(x_.get(i));
        }
        if (getYList().size() > 0) {
          output.writeRawVarint32(26);
          output.writeRawVarint32(yMemoizedSerializedSize);
        }
        for (int i = 0; i < y_.size(); i++) {
          output.writeDoubleNoTag(y_.get(i));
        }
        if (getZList().size() > 0) {
          output.writeRawVarint32(34);
          output.writeRawVarint32(zMemoizedSerializedSize);
        }
        for (int i = 0; i < z_.size(); i++) {
          output.writeDoubleNoTag(z_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getXList().size();
          size += dataSize;
          if (!getXList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getYList().size();
          size += dataSize;
          if (!getYList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          yMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getZList().size();
          size += dataSize;
          if (!getZList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          zMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.PXYZ parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PXYZ parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXYZ parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PXYZ parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXYZ parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PXYZ parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXYZ parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.PXYZ parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PXYZ parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PXYZ parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.PXYZ prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.PXYZ}
       *
       * <pre>
       * to keep X vs Y vs Z
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.PXYZOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_PXYZ_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_PXYZ_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.PXYZ.class, promc.io.PBufFile.Record.PXYZ.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.PXYZ.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          z_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_PXYZ_descriptor;
        }

        public promc.io.PBufFile.Record.PXYZ getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.PXYZ.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.PXYZ build() {
          promc.io.PBufFile.Record.PXYZ result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.PXYZ buildPartial() {
          promc.io.PBufFile.Record.PXYZ result = new promc.io.PBufFile.Record.PXYZ(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = java.util.Collections.unmodifiableList(x_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.x_ = x_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = java.util.Collections.unmodifiableList(y_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.y_ = y_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            z_ = java.util.Collections.unmodifiableList(z_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.z_ = z_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.PXYZ) {
            return mergeFrom((promc.io.PBufFile.Record.PXYZ)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.PXYZ other) {
          if (other == promc.io.PBufFile.Record.PXYZ.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.x_.isEmpty()) {
            if (x_.isEmpty()) {
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureXIsMutable();
              x_.addAll(other.x_);
            }
            onChanged();
          }
          if (!other.y_.isEmpty()) {
            if (y_.isEmpty()) {
              y_ = other.y_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureYIsMutable();
              y_.addAll(other.y_);
            }
            onChanged();
          }
          if (!other.z_.isEmpty()) {
            if (z_.isEmpty()) {
              z_ = other.z_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureZIsMutable();
              z_.addAll(other.z_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.PXYZ parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.PXYZ) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated double x = 2 [packed = true];
        private java.util.List<java.lang.Double> x_ = java.util.Collections.emptyList();
        private void ensureXIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = new java.util.ArrayList<java.lang.Double>(x_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getXList() {
          return java.util.Collections.unmodifiableList(x_);
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public int getXCount() {
          return x_.size();
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public double getX(int index) {
          return x_.get(index);
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder setX(
            int index, double value) {
          ensureXIsMutable();
          x_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder addX(double value) {
          ensureXIsMutable();
          x_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder addAllX(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureXIsMutable();
          super.addAll(values, x_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder clearX() {
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // repeated double y = 3 [packed = true];
        private java.util.List<java.lang.Double> y_ = java.util.Collections.emptyList();
        private void ensureYIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = new java.util.ArrayList<java.lang.Double>(y_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getYList() {
          return java.util.Collections.unmodifiableList(y_);
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public int getYCount() {
          return y_.size();
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public double getY(int index) {
          return y_.get(index);
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder setY(
            int index, double value) {
          ensureYIsMutable();
          y_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder addY(double value) {
          ensureYIsMutable();
          y_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder addAllY(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureYIsMutable();
          super.addAll(values, y_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder clearY() {
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // repeated double z = 4 [packed = true];
        private java.util.List<java.lang.Double> z_ = java.util.Collections.emptyList();
        private void ensureZIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            z_ = new java.util.ArrayList<java.lang.Double>(z_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated double z = 4 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getZList() {
          return java.util.Collections.unmodifiableList(z_);
        }
        /**
         * <code>repeated double z = 4 [packed = true];</code>
         */
        public int getZCount() {
          return z_.size();
        }
        /**
         * <code>repeated double z = 4 [packed = true];</code>
         */
        public double getZ(int index) {
          return z_.get(index);
        }
        /**
         * <code>repeated double z = 4 [packed = true];</code>
         */
        public Builder setZ(
            int index, double value) {
          ensureZIsMutable();
          z_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double z = 4 [packed = true];</code>
         */
        public Builder addZ(double value) {
          ensureZIsMutable();
          z_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double z = 4 [packed = true];</code>
         */
        public Builder addAllZ(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureZIsMutable();
          super.addAll(values, z_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double z = 4 [packed = true];</code>
         */
        public Builder clearZ() {
          z_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.PXYZ)
      }

      static {
        defaultInstance = new PXYZ(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.PXYZ)
    }

    public interface P1DOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated double x = 2 [packed = true];
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getXList();
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      int getXCount();
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      double getX(int index);

      // repeated double y = 3 [packed = true];
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getYList();
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      int getYCount();
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      double getY(int index);

      // repeated double xleft = 4 [packed = true];
      /**
       * <code>repeated double xleft = 4 [packed = true];</code>
       *
       * <pre>
       * to keep errors
       * </pre>
       */
      java.util.List<java.lang.Double> getXleftList();
      /**
       * <code>repeated double xleft = 4 [packed = true];</code>
       *
       * <pre>
       * to keep errors
       * </pre>
       */
      int getXleftCount();
      /**
       * <code>repeated double xleft = 4 [packed = true];</code>
       *
       * <pre>
       * to keep errors
       * </pre>
       */
      double getXleft(int index);

      // repeated double xright = 5 [packed = true];
      /**
       * <code>repeated double xright = 5 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getXrightList();
      /**
       * <code>repeated double xright = 5 [packed = true];</code>
       */
      int getXrightCount();
      /**
       * <code>repeated double xright = 5 [packed = true];</code>
       */
      double getXright(int index);

      // repeated double yupper = 6 [packed = true];
      /**
       * <code>repeated double yupper = 6 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getYupperList();
      /**
       * <code>repeated double yupper = 6 [packed = true];</code>
       */
      int getYupperCount();
      /**
       * <code>repeated double yupper = 6 [packed = true];</code>
       */
      double getYupper(int index);

      // repeated double ylower = 7 [packed = true];
      /**
       * <code>repeated double ylower = 7 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getYlowerList();
      /**
       * <code>repeated double ylower = 7 [packed = true];</code>
       */
      int getYlowerCount();
      /**
       * <code>repeated double ylower = 7 [packed = true];</code>
       */
      double getYlower(int index);

      // repeated double xsysleft = 8 [packed = true];
      /**
       * <code>repeated double xsysleft = 8 [packed = true];</code>
       *
       * <pre>
       * to keep systematic  
       * </pre>
       */
      java.util.List<java.lang.Double> getXsysleftList();
      /**
       * <code>repeated double xsysleft = 8 [packed = true];</code>
       *
       * <pre>
       * to keep systematic  
       * </pre>
       */
      int getXsysleftCount();
      /**
       * <code>repeated double xsysleft = 8 [packed = true];</code>
       *
       * <pre>
       * to keep systematic  
       * </pre>
       */
      double getXsysleft(int index);

      // repeated double xsysright = 9 [packed = true];
      /**
       * <code>repeated double xsysright = 9 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getXsysrightList();
      /**
       * <code>repeated double xsysright = 9 [packed = true];</code>
       */
      int getXsysrightCount();
      /**
       * <code>repeated double xsysright = 9 [packed = true];</code>
       */
      double getXsysright(int index);

      // repeated double ysysupper = 10 [packed = true];
      /**
       * <code>repeated double ysysupper = 10 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getYsysupperList();
      /**
       * <code>repeated double ysysupper = 10 [packed = true];</code>
       */
      int getYsysupperCount();
      /**
       * <code>repeated double ysysupper = 10 [packed = true];</code>
       */
      double getYsysupper(int index);

      // repeated double ysyslower = 11 [packed = true];
      /**
       * <code>repeated double ysyslower = 11 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getYsyslowerList();
      /**
       * <code>repeated double ysyslower = 11 [packed = true];</code>
       */
      int getYsyslowerCount();
      /**
       * <code>repeated double ysyslower = 11 [packed = true];</code>
       */
      double getYsyslower(int index);
    }
    /**
     * Protobuf type {@code promc.Record.P1D}
     *
     * <pre>
     * complete P1D object with errors 
     * </pre>
     */
    public static final class P1D extends
        com.google.protobuf.GeneratedMessage
        implements P1DOrBuilder {
      // Use P1D.newBuilder() to construct.
      private P1D(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private P1D(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final P1D defaultInstance;
      public static P1D getDefaultInstance() {
        return defaultInstance;
      }

      public P1D getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private P1D(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  x_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                x_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  x_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  x_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 25: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  y_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                y_.add(input.readDouble());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  y_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  y_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 33: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  xleft_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                xleft_.add(input.readDouble());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  xleft_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  xleft_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 41: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  xright_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                xright_.add(input.readDouble());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  xright_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  xright_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 49: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  yupper_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000020;
                }
                yupper_.add(input.readDouble());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  yupper_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  yupper_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 57: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  ylower_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                ylower_.add(input.readDouble());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                  ylower_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                while (input.getBytesUntilLimit() > 0) {
                  ylower_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 65: {
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                  xsysleft_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000080;
                }
                xsysleft_.add(input.readDouble());
                break;
              }
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                  xsysleft_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000080;
                }
                while (input.getBytesUntilLimit() > 0) {
                  xsysleft_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 73: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  xsysright_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000100;
                }
                xsysright_.add(input.readDouble());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                  xsysright_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000100;
                }
                while (input.getBytesUntilLimit() > 0) {
                  xsysright_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 81: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  ysysupper_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000200;
                }
                ysysupper_.add(input.readDouble());
                break;
              }
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                  ysysupper_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000200;
                }
                while (input.getBytesUntilLimit() > 0) {
                  ysysupper_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 89: {
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  ysyslower_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000400;
                }
                ysyslower_.add(input.readDouble());
                break;
              }
              case 90: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                  ysyslower_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000400;
                }
                while (input.getBytesUntilLimit() > 0) {
                  ysyslower_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = java.util.Collections.unmodifiableList(x_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = java.util.Collections.unmodifiableList(y_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            xleft_ = java.util.Collections.unmodifiableList(xleft_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            xright_ = java.util.Collections.unmodifiableList(xright_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            yupper_ = java.util.Collections.unmodifiableList(yupper_);
          }
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            ylower_ = java.util.Collections.unmodifiableList(ylower_);
          }
          if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
            xsysleft_ = java.util.Collections.unmodifiableList(xsysleft_);
          }
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            xsysright_ = java.util.Collections.unmodifiableList(xsysright_);
          }
          if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
            ysysupper_ = java.util.Collections.unmodifiableList(ysysupper_);
          }
          if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
            ysyslower_ = java.util.Collections.unmodifiableList(ysyslower_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_P1D_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_P1D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.P1D.class, promc.io.PBufFile.Record.P1D.Builder.class);
      }

      public static com.google.protobuf.Parser<P1D> PARSER =
          new com.google.protobuf.AbstractParser<P1D>() {
        public P1D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new P1D(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<P1D> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated double x = 2 [packed = true];
      public static final int X_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> x_;
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getXList() {
        return x_;
      }
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public int getXCount() {
        return x_.size();
      }
      /**
       * <code>repeated double x = 2 [packed = true];</code>
       */
      public double getX(int index) {
        return x_.get(index);
      }
      private int xMemoizedSerializedSize = -1;

      // repeated double y = 3 [packed = true];
      public static final int Y_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Double> y_;
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getYList() {
        return y_;
      }
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public int getYCount() {
        return y_.size();
      }
      /**
       * <code>repeated double y = 3 [packed = true];</code>
       */
      public double getY(int index) {
        return y_.get(index);
      }
      private int yMemoizedSerializedSize = -1;

      // repeated double xleft = 4 [packed = true];
      public static final int XLEFT_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Double> xleft_;
      /**
       * <code>repeated double xleft = 4 [packed = true];</code>
       *
       * <pre>
       * to keep errors
       * </pre>
       */
      public java.util.List<java.lang.Double>
          getXleftList() {
        return xleft_;
      }
      /**
       * <code>repeated double xleft = 4 [packed = true];</code>
       *
       * <pre>
       * to keep errors
       * </pre>
       */
      public int getXleftCount() {
        return xleft_.size();
      }
      /**
       * <code>repeated double xleft = 4 [packed = true];</code>
       *
       * <pre>
       * to keep errors
       * </pre>
       */
      public double getXleft(int index) {
        return xleft_.get(index);
      }
      private int xleftMemoizedSerializedSize = -1;

      // repeated double xright = 5 [packed = true];
      public static final int XRIGHT_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Double> xright_;
      /**
       * <code>repeated double xright = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getXrightList() {
        return xright_;
      }
      /**
       * <code>repeated double xright = 5 [packed = true];</code>
       */
      public int getXrightCount() {
        return xright_.size();
      }
      /**
       * <code>repeated double xright = 5 [packed = true];</code>
       */
      public double getXright(int index) {
        return xright_.get(index);
      }
      private int xrightMemoizedSerializedSize = -1;

      // repeated double yupper = 6 [packed = true];
      public static final int YUPPER_FIELD_NUMBER = 6;
      private java.util.List<java.lang.Double> yupper_;
      /**
       * <code>repeated double yupper = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getYupperList() {
        return yupper_;
      }
      /**
       * <code>repeated double yupper = 6 [packed = true];</code>
       */
      public int getYupperCount() {
        return yupper_.size();
      }
      /**
       * <code>repeated double yupper = 6 [packed = true];</code>
       */
      public double getYupper(int index) {
        return yupper_.get(index);
      }
      private int yupperMemoizedSerializedSize = -1;

      // repeated double ylower = 7 [packed = true];
      public static final int YLOWER_FIELD_NUMBER = 7;
      private java.util.List<java.lang.Double> ylower_;
      /**
       * <code>repeated double ylower = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getYlowerList() {
        return ylower_;
      }
      /**
       * <code>repeated double ylower = 7 [packed = true];</code>
       */
      public int getYlowerCount() {
        return ylower_.size();
      }
      /**
       * <code>repeated double ylower = 7 [packed = true];</code>
       */
      public double getYlower(int index) {
        return ylower_.get(index);
      }
      private int ylowerMemoizedSerializedSize = -1;

      // repeated double xsysleft = 8 [packed = true];
      public static final int XSYSLEFT_FIELD_NUMBER = 8;
      private java.util.List<java.lang.Double> xsysleft_;
      /**
       * <code>repeated double xsysleft = 8 [packed = true];</code>
       *
       * <pre>
       * to keep systematic  
       * </pre>
       */
      public java.util.List<java.lang.Double>
          getXsysleftList() {
        return xsysleft_;
      }
      /**
       * <code>repeated double xsysleft = 8 [packed = true];</code>
       *
       * <pre>
       * to keep systematic  
       * </pre>
       */
      public int getXsysleftCount() {
        return xsysleft_.size();
      }
      /**
       * <code>repeated double xsysleft = 8 [packed = true];</code>
       *
       * <pre>
       * to keep systematic  
       * </pre>
       */
      public double getXsysleft(int index) {
        return xsysleft_.get(index);
      }
      private int xsysleftMemoizedSerializedSize = -1;

      // repeated double xsysright = 9 [packed = true];
      public static final int XSYSRIGHT_FIELD_NUMBER = 9;
      private java.util.List<java.lang.Double> xsysright_;
      /**
       * <code>repeated double xsysright = 9 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getXsysrightList() {
        return xsysright_;
      }
      /**
       * <code>repeated double xsysright = 9 [packed = true];</code>
       */
      public int getXsysrightCount() {
        return xsysright_.size();
      }
      /**
       * <code>repeated double xsysright = 9 [packed = true];</code>
       */
      public double getXsysright(int index) {
        return xsysright_.get(index);
      }
      private int xsysrightMemoizedSerializedSize = -1;

      // repeated double ysysupper = 10 [packed = true];
      public static final int YSYSUPPER_FIELD_NUMBER = 10;
      private java.util.List<java.lang.Double> ysysupper_;
      /**
       * <code>repeated double ysysupper = 10 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getYsysupperList() {
        return ysysupper_;
      }
      /**
       * <code>repeated double ysysupper = 10 [packed = true];</code>
       */
      public int getYsysupperCount() {
        return ysysupper_.size();
      }
      /**
       * <code>repeated double ysysupper = 10 [packed = true];</code>
       */
      public double getYsysupper(int index) {
        return ysysupper_.get(index);
      }
      private int ysysupperMemoizedSerializedSize = -1;

      // repeated double ysyslower = 11 [packed = true];
      public static final int YSYSLOWER_FIELD_NUMBER = 11;
      private java.util.List<java.lang.Double> ysyslower_;
      /**
       * <code>repeated double ysyslower = 11 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getYsyslowerList() {
        return ysyslower_;
      }
      /**
       * <code>repeated double ysyslower = 11 [packed = true];</code>
       */
      public int getYsyslowerCount() {
        return ysyslower_.size();
      }
      /**
       * <code>repeated double ysyslower = 11 [packed = true];</code>
       */
      public double getYsyslower(int index) {
        return ysyslower_.get(index);
      }
      private int ysyslowerMemoizedSerializedSize = -1;

      private void initFields() {
        name_ = "none";
        x_ = java.util.Collections.emptyList();
        y_ = java.util.Collections.emptyList();
        xleft_ = java.util.Collections.emptyList();
        xright_ = java.util.Collections.emptyList();
        yupper_ = java.util.Collections.emptyList();
        ylower_ = java.util.Collections.emptyList();
        xsysleft_ = java.util.Collections.emptyList();
        xsysright_ = java.util.Collections.emptyList();
        ysysupper_ = java.util.Collections.emptyList();
        ysyslower_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getXList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(xMemoizedSerializedSize);
        }
        for (int i = 0; i < x_.size(); i++) {
          output.writeDoubleNoTag(x_.get(i));
        }
        if (getYList().size() > 0) {
          output.writeRawVarint32(26);
          output.writeRawVarint32(yMemoizedSerializedSize);
        }
        for (int i = 0; i < y_.size(); i++) {
          output.writeDoubleNoTag(y_.get(i));
        }
        if (getXleftList().size() > 0) {
          output.writeRawVarint32(34);
          output.writeRawVarint32(xleftMemoizedSerializedSize);
        }
        for (int i = 0; i < xleft_.size(); i++) {
          output.writeDoubleNoTag(xleft_.get(i));
        }
        if (getXrightList().size() > 0) {
          output.writeRawVarint32(42);
          output.writeRawVarint32(xrightMemoizedSerializedSize);
        }
        for (int i = 0; i < xright_.size(); i++) {
          output.writeDoubleNoTag(xright_.get(i));
        }
        if (getYupperList().size() > 0) {
          output.writeRawVarint32(50);
          output.writeRawVarint32(yupperMemoizedSerializedSize);
        }
        for (int i = 0; i < yupper_.size(); i++) {
          output.writeDoubleNoTag(yupper_.get(i));
        }
        if (getYlowerList().size() > 0) {
          output.writeRawVarint32(58);
          output.writeRawVarint32(ylowerMemoizedSerializedSize);
        }
        for (int i = 0; i < ylower_.size(); i++) {
          output.writeDoubleNoTag(ylower_.get(i));
        }
        if (getXsysleftList().size() > 0) {
          output.writeRawVarint32(66);
          output.writeRawVarint32(xsysleftMemoizedSerializedSize);
        }
        for (int i = 0; i < xsysleft_.size(); i++) {
          output.writeDoubleNoTag(xsysleft_.get(i));
        }
        if (getXsysrightList().size() > 0) {
          output.writeRawVarint32(74);
          output.writeRawVarint32(xsysrightMemoizedSerializedSize);
        }
        for (int i = 0; i < xsysright_.size(); i++) {
          output.writeDoubleNoTag(xsysright_.get(i));
        }
        if (getYsysupperList().size() > 0) {
          output.writeRawVarint32(82);
          output.writeRawVarint32(ysysupperMemoizedSerializedSize);
        }
        for (int i = 0; i < ysysupper_.size(); i++) {
          output.writeDoubleNoTag(ysysupper_.get(i));
        }
        if (getYsyslowerList().size() > 0) {
          output.writeRawVarint32(90);
          output.writeRawVarint32(ysyslowerMemoizedSerializedSize);
        }
        for (int i = 0; i < ysyslower_.size(); i++) {
          output.writeDoubleNoTag(ysyslower_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getXList().size();
          size += dataSize;
          if (!getXList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getYList().size();
          size += dataSize;
          if (!getYList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          yMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getXleftList().size();
          size += dataSize;
          if (!getXleftList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xleftMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getXrightList().size();
          size += dataSize;
          if (!getXrightList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xrightMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getYupperList().size();
          size += dataSize;
          if (!getYupperList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          yupperMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getYlowerList().size();
          size += dataSize;
          if (!getYlowerList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          ylowerMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getXsysleftList().size();
          size += dataSize;
          if (!getXsysleftList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xsysleftMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getXsysrightList().size();
          size += dataSize;
          if (!getXsysrightList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          xsysrightMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getYsysupperList().size();
          size += dataSize;
          if (!getYsysupperList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          ysysupperMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getYsyslowerList().size();
          size += dataSize;
          if (!getYsyslowerList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          ysyslowerMemoizedSerializedSize = dataSize;
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.P1D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.P1D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P1D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.P1D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P1D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.P1D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P1D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.P1D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.P1D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.P1D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.P1D prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.P1D}
       *
       * <pre>
       * complete P1D object with errors 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.P1DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_P1D_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_P1D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.P1D.class, promc.io.PBufFile.Record.P1D.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.P1D.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          xleft_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          xright_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          yupper_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          ylower_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          xsysleft_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          xsysright_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          ysysupper_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          ysyslower_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_P1D_descriptor;
        }

        public promc.io.PBufFile.Record.P1D getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.P1D.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.P1D build() {
          promc.io.PBufFile.Record.P1D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.P1D buildPartial() {
          promc.io.PBufFile.Record.P1D result = new promc.io.PBufFile.Record.P1D(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = java.util.Collections.unmodifiableList(x_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.x_ = x_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = java.util.Collections.unmodifiableList(y_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.y_ = y_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            xleft_ = java.util.Collections.unmodifiableList(xleft_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.xleft_ = xleft_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            xright_ = java.util.Collections.unmodifiableList(xright_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.xright_ = xright_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            yupper_ = java.util.Collections.unmodifiableList(yupper_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.yupper_ = yupper_;
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            ylower_ = java.util.Collections.unmodifiableList(ylower_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.ylower_ = ylower_;
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            xsysleft_ = java.util.Collections.unmodifiableList(xsysleft_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.xsysleft_ = xsysleft_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            xsysright_ = java.util.Collections.unmodifiableList(xsysright_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.xsysright_ = xsysright_;
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            ysysupper_ = java.util.Collections.unmodifiableList(ysysupper_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.ysysupper_ = ysysupper_;
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            ysyslower_ = java.util.Collections.unmodifiableList(ysyslower_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.ysyslower_ = ysyslower_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.P1D) {
            return mergeFrom((promc.io.PBufFile.Record.P1D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.P1D other) {
          if (other == promc.io.PBufFile.Record.P1D.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.x_.isEmpty()) {
            if (x_.isEmpty()) {
              x_ = other.x_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureXIsMutable();
              x_.addAll(other.x_);
            }
            onChanged();
          }
          if (!other.y_.isEmpty()) {
            if (y_.isEmpty()) {
              y_ = other.y_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureYIsMutable();
              y_.addAll(other.y_);
            }
            onChanged();
          }
          if (!other.xleft_.isEmpty()) {
            if (xleft_.isEmpty()) {
              xleft_ = other.xleft_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureXleftIsMutable();
              xleft_.addAll(other.xleft_);
            }
            onChanged();
          }
          if (!other.xright_.isEmpty()) {
            if (xright_.isEmpty()) {
              xright_ = other.xright_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureXrightIsMutable();
              xright_.addAll(other.xright_);
            }
            onChanged();
          }
          if (!other.yupper_.isEmpty()) {
            if (yupper_.isEmpty()) {
              yupper_ = other.yupper_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureYupperIsMutable();
              yupper_.addAll(other.yupper_);
            }
            onChanged();
          }
          if (!other.ylower_.isEmpty()) {
            if (ylower_.isEmpty()) {
              ylower_ = other.ylower_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureYlowerIsMutable();
              ylower_.addAll(other.ylower_);
            }
            onChanged();
          }
          if (!other.xsysleft_.isEmpty()) {
            if (xsysleft_.isEmpty()) {
              xsysleft_ = other.xsysleft_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureXsysleftIsMutable();
              xsysleft_.addAll(other.xsysleft_);
            }
            onChanged();
          }
          if (!other.xsysright_.isEmpty()) {
            if (xsysright_.isEmpty()) {
              xsysright_ = other.xsysright_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureXsysrightIsMutable();
              xsysright_.addAll(other.xsysright_);
            }
            onChanged();
          }
          if (!other.ysysupper_.isEmpty()) {
            if (ysysupper_.isEmpty()) {
              ysysupper_ = other.ysysupper_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureYsysupperIsMutable();
              ysysupper_.addAll(other.ysysupper_);
            }
            onChanged();
          }
          if (!other.ysyslower_.isEmpty()) {
            if (ysyslower_.isEmpty()) {
              ysyslower_ = other.ysyslower_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureYsyslowerIsMutable();
              ysyslower_.addAll(other.ysyslower_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.P1D parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.P1D) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated double x = 2 [packed = true];
        private java.util.List<java.lang.Double> x_ = java.util.Collections.emptyList();
        private void ensureXIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            x_ = new java.util.ArrayList<java.lang.Double>(x_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getXList() {
          return java.util.Collections.unmodifiableList(x_);
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public int getXCount() {
          return x_.size();
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public double getX(int index) {
          return x_.get(index);
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder setX(
            int index, double value) {
          ensureXIsMutable();
          x_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder addX(double value) {
          ensureXIsMutable();
          x_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder addAllX(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureXIsMutable();
          super.addAll(values, x_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double x = 2 [packed = true];</code>
         */
        public Builder clearX() {
          x_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // repeated double y = 3 [packed = true];
        private java.util.List<java.lang.Double> y_ = java.util.Collections.emptyList();
        private void ensureYIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            y_ = new java.util.ArrayList<java.lang.Double>(y_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getYList() {
          return java.util.Collections.unmodifiableList(y_);
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public int getYCount() {
          return y_.size();
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public double getY(int index) {
          return y_.get(index);
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder setY(
            int index, double value) {
          ensureYIsMutable();
          y_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder addY(double value) {
          ensureYIsMutable();
          y_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder addAllY(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureYIsMutable();
          super.addAll(values, y_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double y = 3 [packed = true];</code>
         */
        public Builder clearY() {
          y_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // repeated double xleft = 4 [packed = true];
        private java.util.List<java.lang.Double> xleft_ = java.util.Collections.emptyList();
        private void ensureXleftIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            xleft_ = new java.util.ArrayList<java.lang.Double>(xleft_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated double xleft = 4 [packed = true];</code>
         *
         * <pre>
         * to keep errors
         * </pre>
         */
        public java.util.List<java.lang.Double>
            getXleftList() {
          return java.util.Collections.unmodifiableList(xleft_);
        }
        /**
         * <code>repeated double xleft = 4 [packed = true];</code>
         *
         * <pre>
         * to keep errors
         * </pre>
         */
        public int getXleftCount() {
          return xleft_.size();
        }
        /**
         * <code>repeated double xleft = 4 [packed = true];</code>
         *
         * <pre>
         * to keep errors
         * </pre>
         */
        public double getXleft(int index) {
          return xleft_.get(index);
        }
        /**
         * <code>repeated double xleft = 4 [packed = true];</code>
         *
         * <pre>
         * to keep errors
         * </pre>
         */
        public Builder setXleft(
            int index, double value) {
          ensureXleftIsMutable();
          xleft_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xleft = 4 [packed = true];</code>
         *
         * <pre>
         * to keep errors
         * </pre>
         */
        public Builder addXleft(double value) {
          ensureXleftIsMutable();
          xleft_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xleft = 4 [packed = true];</code>
         *
         * <pre>
         * to keep errors
         * </pre>
         */
        public Builder addAllXleft(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureXleftIsMutable();
          super.addAll(values, xleft_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xleft = 4 [packed = true];</code>
         *
         * <pre>
         * to keep errors
         * </pre>
         */
        public Builder clearXleft() {
          xleft_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        // repeated double xright = 5 [packed = true];
        private java.util.List<java.lang.Double> xright_ = java.util.Collections.emptyList();
        private void ensureXrightIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            xright_ = new java.util.ArrayList<java.lang.Double>(xright_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated double xright = 5 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getXrightList() {
          return java.util.Collections.unmodifiableList(xright_);
        }
        /**
         * <code>repeated double xright = 5 [packed = true];</code>
         */
        public int getXrightCount() {
          return xright_.size();
        }
        /**
         * <code>repeated double xright = 5 [packed = true];</code>
         */
        public double getXright(int index) {
          return xright_.get(index);
        }
        /**
         * <code>repeated double xright = 5 [packed = true];</code>
         */
        public Builder setXright(
            int index, double value) {
          ensureXrightIsMutable();
          xright_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xright = 5 [packed = true];</code>
         */
        public Builder addXright(double value) {
          ensureXrightIsMutable();
          xright_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xright = 5 [packed = true];</code>
         */
        public Builder addAllXright(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureXrightIsMutable();
          super.addAll(values, xright_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xright = 5 [packed = true];</code>
         */
        public Builder clearXright() {
          xright_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        // repeated double yupper = 6 [packed = true];
        private java.util.List<java.lang.Double> yupper_ = java.util.Collections.emptyList();
        private void ensureYupperIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            yupper_ = new java.util.ArrayList<java.lang.Double>(yupper_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated double yupper = 6 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getYupperList() {
          return java.util.Collections.unmodifiableList(yupper_);
        }
        /**
         * <code>repeated double yupper = 6 [packed = true];</code>
         */
        public int getYupperCount() {
          return yupper_.size();
        }
        /**
         * <code>repeated double yupper = 6 [packed = true];</code>
         */
        public double getYupper(int index) {
          return yupper_.get(index);
        }
        /**
         * <code>repeated double yupper = 6 [packed = true];</code>
         */
        public Builder setYupper(
            int index, double value) {
          ensureYupperIsMutable();
          yupper_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double yupper = 6 [packed = true];</code>
         */
        public Builder addYupper(double value) {
          ensureYupperIsMutable();
          yupper_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double yupper = 6 [packed = true];</code>
         */
        public Builder addAllYupper(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureYupperIsMutable();
          super.addAll(values, yupper_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double yupper = 6 [packed = true];</code>
         */
        public Builder clearYupper() {
          yupper_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        // repeated double ylower = 7 [packed = true];
        private java.util.List<java.lang.Double> ylower_ = java.util.Collections.emptyList();
        private void ensureYlowerIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            ylower_ = new java.util.ArrayList<java.lang.Double>(ylower_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated double ylower = 7 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getYlowerList() {
          return java.util.Collections.unmodifiableList(ylower_);
        }
        /**
         * <code>repeated double ylower = 7 [packed = true];</code>
         */
        public int getYlowerCount() {
          return ylower_.size();
        }
        /**
         * <code>repeated double ylower = 7 [packed = true];</code>
         */
        public double getYlower(int index) {
          return ylower_.get(index);
        }
        /**
         * <code>repeated double ylower = 7 [packed = true];</code>
         */
        public Builder setYlower(
            int index, double value) {
          ensureYlowerIsMutable();
          ylower_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ylower = 7 [packed = true];</code>
         */
        public Builder addYlower(double value) {
          ensureYlowerIsMutable();
          ylower_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ylower = 7 [packed = true];</code>
         */
        public Builder addAllYlower(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureYlowerIsMutable();
          super.addAll(values, ylower_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ylower = 7 [packed = true];</code>
         */
        public Builder clearYlower() {
          ylower_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        // repeated double xsysleft = 8 [packed = true];
        private java.util.List<java.lang.Double> xsysleft_ = java.util.Collections.emptyList();
        private void ensureXsysleftIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            xsysleft_ = new java.util.ArrayList<java.lang.Double>(xsysleft_);
            bitField0_ |= 0x00000080;
           }
        }
        /**
         * <code>repeated double xsysleft = 8 [packed = true];</code>
         *
         * <pre>
         * to keep systematic  
         * </pre>
         */
        public java.util.List<java.lang.Double>
            getXsysleftList() {
          return java.util.Collections.unmodifiableList(xsysleft_);
        }
        /**
         * <code>repeated double xsysleft = 8 [packed = true];</code>
         *
         * <pre>
         * to keep systematic  
         * </pre>
         */
        public int getXsysleftCount() {
          return xsysleft_.size();
        }
        /**
         * <code>repeated double xsysleft = 8 [packed = true];</code>
         *
         * <pre>
         * to keep systematic  
         * </pre>
         */
        public double getXsysleft(int index) {
          return xsysleft_.get(index);
        }
        /**
         * <code>repeated double xsysleft = 8 [packed = true];</code>
         *
         * <pre>
         * to keep systematic  
         * </pre>
         */
        public Builder setXsysleft(
            int index, double value) {
          ensureXsysleftIsMutable();
          xsysleft_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xsysleft = 8 [packed = true];</code>
         *
         * <pre>
         * to keep systematic  
         * </pre>
         */
        public Builder addXsysleft(double value) {
          ensureXsysleftIsMutable();
          xsysleft_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xsysleft = 8 [packed = true];</code>
         *
         * <pre>
         * to keep systematic  
         * </pre>
         */
        public Builder addAllXsysleft(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureXsysleftIsMutable();
          super.addAll(values, xsysleft_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xsysleft = 8 [packed = true];</code>
         *
         * <pre>
         * to keep systematic  
         * </pre>
         */
        public Builder clearXsysleft() {
          xsysleft_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }

        // repeated double xsysright = 9 [packed = true];
        private java.util.List<java.lang.Double> xsysright_ = java.util.Collections.emptyList();
        private void ensureXsysrightIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            xsysright_ = new java.util.ArrayList<java.lang.Double>(xsysright_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated double xsysright = 9 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getXsysrightList() {
          return java.util.Collections.unmodifiableList(xsysright_);
        }
        /**
         * <code>repeated double xsysright = 9 [packed = true];</code>
         */
        public int getXsysrightCount() {
          return xsysright_.size();
        }
        /**
         * <code>repeated double xsysright = 9 [packed = true];</code>
         */
        public double getXsysright(int index) {
          return xsysright_.get(index);
        }
        /**
         * <code>repeated double xsysright = 9 [packed = true];</code>
         */
        public Builder setXsysright(
            int index, double value) {
          ensureXsysrightIsMutable();
          xsysright_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xsysright = 9 [packed = true];</code>
         */
        public Builder addXsysright(double value) {
          ensureXsysrightIsMutable();
          xsysright_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xsysright = 9 [packed = true];</code>
         */
        public Builder addAllXsysright(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureXsysrightIsMutable();
          super.addAll(values, xsysright_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double xsysright = 9 [packed = true];</code>
         */
        public Builder clearXsysright() {
          xsysright_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }

        // repeated double ysysupper = 10 [packed = true];
        private java.util.List<java.lang.Double> ysysupper_ = java.util.Collections.emptyList();
        private void ensureYsysupperIsMutable() {
          if (!((bitField0_ & 0x00000200) == 0x00000200)) {
            ysysupper_ = new java.util.ArrayList<java.lang.Double>(ysysupper_);
            bitField0_ |= 0x00000200;
           }
        }
        /**
         * <code>repeated double ysysupper = 10 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getYsysupperList() {
          return java.util.Collections.unmodifiableList(ysysupper_);
        }
        /**
         * <code>repeated double ysysupper = 10 [packed = true];</code>
         */
        public int getYsysupperCount() {
          return ysysupper_.size();
        }
        /**
         * <code>repeated double ysysupper = 10 [packed = true];</code>
         */
        public double getYsysupper(int index) {
          return ysysupper_.get(index);
        }
        /**
         * <code>repeated double ysysupper = 10 [packed = true];</code>
         */
        public Builder setYsysupper(
            int index, double value) {
          ensureYsysupperIsMutable();
          ysysupper_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ysysupper = 10 [packed = true];</code>
         */
        public Builder addYsysupper(double value) {
          ensureYsysupperIsMutable();
          ysysupper_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ysysupper = 10 [packed = true];</code>
         */
        public Builder addAllYsysupper(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureYsysupperIsMutable();
          super.addAll(values, ysysupper_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ysysupper = 10 [packed = true];</code>
         */
        public Builder clearYsysupper() {
          ysysupper_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
          return this;
        }

        // repeated double ysyslower = 11 [packed = true];
        private java.util.List<java.lang.Double> ysyslower_ = java.util.Collections.emptyList();
        private void ensureYsyslowerIsMutable() {
          if (!((bitField0_ & 0x00000400) == 0x00000400)) {
            ysyslower_ = new java.util.ArrayList<java.lang.Double>(ysyslower_);
            bitField0_ |= 0x00000400;
           }
        }
        /**
         * <code>repeated double ysyslower = 11 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getYsyslowerList() {
          return java.util.Collections.unmodifiableList(ysyslower_);
        }
        /**
         * <code>repeated double ysyslower = 11 [packed = true];</code>
         */
        public int getYsyslowerCount() {
          return ysyslower_.size();
        }
        /**
         * <code>repeated double ysyslower = 11 [packed = true];</code>
         */
        public double getYsyslower(int index) {
          return ysyslower_.get(index);
        }
        /**
         * <code>repeated double ysyslower = 11 [packed = true];</code>
         */
        public Builder setYsyslower(
            int index, double value) {
          ensureYsyslowerIsMutable();
          ysyslower_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ysyslower = 11 [packed = true];</code>
         */
        public Builder addYsyslower(double value) {
          ensureYsyslowerIsMutable();
          ysyslower_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ysyslower = 11 [packed = true];</code>
         */
        public Builder addAllYsyslower(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureYsyslowerIsMutable();
          super.addAll(values, ysyslower_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double ysyslower = 11 [packed = true];</code>
         */
        public Builder clearYsyslower() {
          ysyslower_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.P1D)
      }

      static {
        defaultInstance = new P1D(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.P1D)
    }

    public interface H1DOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated double heights = 2 [packed = true];
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getHeightsList();
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      int getHeightsCount();
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      double getHeights(int index);

      // repeated double errors = 3 [packed = true];
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getErrorsList();
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      int getErrorsCount();
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      double getErrors(int index);

      // repeated double means = 4 [packed = true];
      /**
       * <code>repeated double means = 4 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getMeansList();
      /**
       * <code>repeated double means = 4 [packed = true];</code>
       */
      int getMeansCount();
      /**
       * <code>repeated double means = 4 [packed = true];</code>
       */
      double getMeans(int index);

      // repeated double rmses = 5 [packed = true];
      /**
       * <code>repeated double rmses = 5 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getRmsesList();
      /**
       * <code>repeated double rmses = 5 [packed = true];</code>
       */
      int getRmsesCount();
      /**
       * <code>repeated double rmses = 5 [packed = true];</code>
       */
      double getRmses(int index);

      // repeated int32 entries = 6 [packed = true];
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getEntriesList();
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      int getEntriesCount();
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      int getEntries(int index);

      // repeated double edges = 7 [packed = true];
      /**
       * <code>repeated double edges = 7 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getEdgesList();
      /**
       * <code>repeated double edges = 7 [packed = true];</code>
       */
      int getEdgesCount();
      /**
       * <code>repeated double edges = 7 [packed = true];</code>
       */
      double getEdges(int index);

      // required int32 bins = 8;
      /**
       * <code>required int32 bins = 8;</code>
       */
      boolean hasBins();
      /**
       * <code>required int32 bins = 8;</code>
       */
      int getBins();

      // required double min = 9;
      /**
       * <code>required double min = 9;</code>
       */
      boolean hasMin();
      /**
       * <code>required double min = 9;</code>
       */
      double getMin();

      // required double max = 10;
      /**
       * <code>required double max = 10;</code>
       */
      boolean hasMax();
      /**
       * <code>required double max = 10;</code>
       */
      double getMax();

      // optional int32 allentries = 11;
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      boolean hasAllentries();
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      int getAllentries();

      // optional int32 nentries = 12;
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      boolean hasNentries();
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      int getNentries();

      // optional double underflow = 13;
      /**
       * <code>optional double underflow = 13;</code>
       */
      boolean hasUnderflow();
      /**
       * <code>optional double underflow = 13;</code>
       */
      double getUnderflow();

      // optional double overflow = 14;
      /**
       * <code>optional double overflow = 14;</code>
       */
      boolean hasOverflow();
      /**
       * <code>optional double overflow = 14;</code>
       */
      double getOverflow();

      // optional double rms = 15;
      /**
       * <code>optional double rms = 15;</code>
       */
      boolean hasRms();
      /**
       * <code>optional double rms = 15;</code>
       */
      double getRms();

      // optional double mean = 16;
      /**
       * <code>optional double mean = 16;</code>
       */
      boolean hasMean();
      /**
       * <code>optional double mean = 16;</code>
       */
      double getMean();

      // required bool isFixedBins = 17;
      /**
       * <code>required bool isFixedBins = 17;</code>
       */
      boolean hasIsFixedBins();
      /**
       * <code>required bool isFixedBins = 17;</code>
       */
      boolean getIsFixedBins();
    }
    /**
     * Protobuf type {@code promc.Record.H1D}
     *
     * <pre>
     *  1D histogram
     * </pre>
     */
    public static final class H1D extends
        com.google.protobuf.GeneratedMessage
        implements H1DOrBuilder {
      // Use H1D.newBuilder() to construct.
      private H1D(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private H1D(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final H1D defaultInstance;
      public static H1D getDefaultInstance() {
        return defaultInstance;
      }

      public H1D getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private H1D(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  heights_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                heights_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  heights_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  heights_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 25: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  errors_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                errors_.add(input.readDouble());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  errors_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  errors_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 33: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  means_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                means_.add(input.readDouble());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  means_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  means_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 41: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  rmses_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                rmses_.add(input.readDouble());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  rmses_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  rmses_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 48: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  entries_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                entries_.add(input.readInt32());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  entries_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  entries_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 57: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  edges_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                edges_.add(input.readDouble());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                  edges_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                while (input.getBytesUntilLimit() > 0) {
                  edges_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 64: {
                bitField0_ |= 0x00000002;
                bins_ = input.readInt32();
                break;
              }
              case 73: {
                bitField0_ |= 0x00000004;
                min_ = input.readDouble();
                break;
              }
              case 81: {
                bitField0_ |= 0x00000008;
                max_ = input.readDouble();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000010;
                allentries_ = input.readInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000020;
                nentries_ = input.readInt32();
                break;
              }
              case 105: {
                bitField0_ |= 0x00000040;
                underflow_ = input.readDouble();
                break;
              }
              case 113: {
                bitField0_ |= 0x00000080;
                overflow_ = input.readDouble();
                break;
              }
              case 121: {
                bitField0_ |= 0x00000100;
                rms_ = input.readDouble();
                break;
              }
              case 129: {
                bitField0_ |= 0x00000200;
                mean_ = input.readDouble();
                break;
              }
              case 136: {
                bitField0_ |= 0x00000400;
                isFixedBins_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            heights_ = java.util.Collections.unmodifiableList(heights_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            means_ = java.util.Collections.unmodifiableList(means_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            rmses_ = java.util.Collections.unmodifiableList(rmses_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
          }
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            edges_ = java.util.Collections.unmodifiableList(edges_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_H1D_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_H1D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.H1D.class, promc.io.PBufFile.Record.H1D.Builder.class);
      }

      public static com.google.protobuf.Parser<H1D> PARSER =
          new com.google.protobuf.AbstractParser<H1D>() {
        public H1D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new H1D(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<H1D> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated double heights = 2 [packed = true];
      public static final int HEIGHTS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> heights_;
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getHeightsList() {
        return heights_;
      }
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      public int getHeightsCount() {
        return heights_.size();
      }
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      public double getHeights(int index) {
        return heights_.get(index);
      }
      private int heightsMemoizedSerializedSize = -1;

      // repeated double errors = 3 [packed = true];
      public static final int ERRORS_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Double> errors_;
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getErrorsList() {
        return errors_;
      }
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      public int getErrorsCount() {
        return errors_.size();
      }
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      public double getErrors(int index) {
        return errors_.get(index);
      }
      private int errorsMemoizedSerializedSize = -1;

      // repeated double means = 4 [packed = true];
      public static final int MEANS_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Double> means_;
      /**
       * <code>repeated double means = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getMeansList() {
        return means_;
      }
      /**
       * <code>repeated double means = 4 [packed = true];</code>
       */
      public int getMeansCount() {
        return means_.size();
      }
      /**
       * <code>repeated double means = 4 [packed = true];</code>
       */
      public double getMeans(int index) {
        return means_.get(index);
      }
      private int meansMemoizedSerializedSize = -1;

      // repeated double rmses = 5 [packed = true];
      public static final int RMSES_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Double> rmses_;
      /**
       * <code>repeated double rmses = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getRmsesList() {
        return rmses_;
      }
      /**
       * <code>repeated double rmses = 5 [packed = true];</code>
       */
      public int getRmsesCount() {
        return rmses_.size();
      }
      /**
       * <code>repeated double rmses = 5 [packed = true];</code>
       */
      public double getRmses(int index) {
        return rmses_.get(index);
      }
      private int rmsesMemoizedSerializedSize = -1;

      // repeated int32 entries = 6 [packed = true];
      public static final int ENTRIES_FIELD_NUMBER = 6;
      private java.util.List<java.lang.Integer> entries_;
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getEntriesList() {
        return entries_;
      }
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      public int getEntriesCount() {
        return entries_.size();
      }
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      public int getEntries(int index) {
        return entries_.get(index);
      }
      private int entriesMemoizedSerializedSize = -1;

      // repeated double edges = 7 [packed = true];
      public static final int EDGES_FIELD_NUMBER = 7;
      private java.util.List<java.lang.Double> edges_;
      /**
       * <code>repeated double edges = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getEdgesList() {
        return edges_;
      }
      /**
       * <code>repeated double edges = 7 [packed = true];</code>
       */
      public int getEdgesCount() {
        return edges_.size();
      }
      /**
       * <code>repeated double edges = 7 [packed = true];</code>
       */
      public double getEdges(int index) {
        return edges_.get(index);
      }
      private int edgesMemoizedSerializedSize = -1;

      // required int32 bins = 8;
      public static final int BINS_FIELD_NUMBER = 8;
      private int bins_;
      /**
       * <code>required int32 bins = 8;</code>
       */
      public boolean hasBins() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 bins = 8;</code>
       */
      public int getBins() {
        return bins_;
      }

      // required double min = 9;
      public static final int MIN_FIELD_NUMBER = 9;
      private double min_;
      /**
       * <code>required double min = 9;</code>
       */
      public boolean hasMin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double min = 9;</code>
       */
      public double getMin() {
        return min_;
      }

      // required double max = 10;
      public static final int MAX_FIELD_NUMBER = 10;
      private double max_;
      /**
       * <code>required double max = 10;</code>
       */
      public boolean hasMax() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required double max = 10;</code>
       */
      public double getMax() {
        return max_;
      }

      // optional int32 allentries = 11;
      public static final int ALLENTRIES_FIELD_NUMBER = 11;
      private int allentries_;
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      public boolean hasAllentries() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      public int getAllentries() {
        return allentries_;
      }

      // optional int32 nentries = 12;
      public static final int NENTRIES_FIELD_NUMBER = 12;
      private int nentries_;
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      public boolean hasNentries() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      public int getNentries() {
        return nentries_;
      }

      // optional double underflow = 13;
      public static final int UNDERFLOW_FIELD_NUMBER = 13;
      private double underflow_;
      /**
       * <code>optional double underflow = 13;</code>
       */
      public boolean hasUnderflow() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional double underflow = 13;</code>
       */
      public double getUnderflow() {
        return underflow_;
      }

      // optional double overflow = 14;
      public static final int OVERFLOW_FIELD_NUMBER = 14;
      private double overflow_;
      /**
       * <code>optional double overflow = 14;</code>
       */
      public boolean hasOverflow() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional double overflow = 14;</code>
       */
      public double getOverflow() {
        return overflow_;
      }

      // optional double rms = 15;
      public static final int RMS_FIELD_NUMBER = 15;
      private double rms_;
      /**
       * <code>optional double rms = 15;</code>
       */
      public boolean hasRms() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional double rms = 15;</code>
       */
      public double getRms() {
        return rms_;
      }

      // optional double mean = 16;
      public static final int MEAN_FIELD_NUMBER = 16;
      private double mean_;
      /**
       * <code>optional double mean = 16;</code>
       */
      public boolean hasMean() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional double mean = 16;</code>
       */
      public double getMean() {
        return mean_;
      }

      // required bool isFixedBins = 17;
      public static final int ISFIXEDBINS_FIELD_NUMBER = 17;
      private boolean isFixedBins_;
      /**
       * <code>required bool isFixedBins = 17;</code>
       */
      public boolean hasIsFixedBins() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required bool isFixedBins = 17;</code>
       */
      public boolean getIsFixedBins() {
        return isFixedBins_;
      }

      private void initFields() {
        name_ = "none";
        heights_ = java.util.Collections.emptyList();
        errors_ = java.util.Collections.emptyList();
        means_ = java.util.Collections.emptyList();
        rmses_ = java.util.Collections.emptyList();
        entries_ = java.util.Collections.emptyList();
        edges_ = java.util.Collections.emptyList();
        bins_ = 0;
        min_ = 0D;
        max_ = 0D;
        allentries_ = 0;
        nentries_ = 0;
        underflow_ = 0D;
        overflow_ = 0D;
        rms_ = 0D;
        mean_ = 0D;
        isFixedBins_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBins()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMin()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMax()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsFixedBins()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getHeightsList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(heightsMemoizedSerializedSize);
        }
        for (int i = 0; i < heights_.size(); i++) {
          output.writeDoubleNoTag(heights_.get(i));
        }
        if (getErrorsList().size() > 0) {
          output.writeRawVarint32(26);
          output.writeRawVarint32(errorsMemoizedSerializedSize);
        }
        for (int i = 0; i < errors_.size(); i++) {
          output.writeDoubleNoTag(errors_.get(i));
        }
        if (getMeansList().size() > 0) {
          output.writeRawVarint32(34);
          output.writeRawVarint32(meansMemoizedSerializedSize);
        }
        for (int i = 0; i < means_.size(); i++) {
          output.writeDoubleNoTag(means_.get(i));
        }
        if (getRmsesList().size() > 0) {
          output.writeRawVarint32(42);
          output.writeRawVarint32(rmsesMemoizedSerializedSize);
        }
        for (int i = 0; i < rmses_.size(); i++) {
          output.writeDoubleNoTag(rmses_.get(i));
        }
        if (getEntriesList().size() > 0) {
          output.writeRawVarint32(50);
          output.writeRawVarint32(entriesMemoizedSerializedSize);
        }
        for (int i = 0; i < entries_.size(); i++) {
          output.writeInt32NoTag(entries_.get(i));
        }
        if (getEdgesList().size() > 0) {
          output.writeRawVarint32(58);
          output.writeRawVarint32(edgesMemoizedSerializedSize);
        }
        for (int i = 0; i < edges_.size(); i++) {
          output.writeDoubleNoTag(edges_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(8, bins_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(9, min_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(10, max_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(11, allentries_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeInt32(12, nentries_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeDouble(13, underflow_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeDouble(14, overflow_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeDouble(15, rms_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeDouble(16, mean_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(17, isFixedBins_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getHeightsList().size();
          size += dataSize;
          if (!getHeightsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          heightsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getErrorsList().size();
          size += dataSize;
          if (!getErrorsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          errorsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getMeansList().size();
          size += dataSize;
          if (!getMeansList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          meansMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getRmsesList().size();
          size += dataSize;
          if (!getRmsesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          rmsesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < entries_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(entries_.get(i));
          }
          size += dataSize;
          if (!getEntriesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          entriesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getEdgesList().size();
          size += dataSize;
          if (!getEdgesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          edgesMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(8, bins_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, min_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(10, max_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(11, allentries_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(12, nentries_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(13, underflow_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(14, overflow_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(15, rms_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(16, mean_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(17, isFixedBins_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.H1D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.H1D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H1D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.H1D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H1D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.H1D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H1D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.H1D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H1D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.H1D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.H1D prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.H1D}
       *
       * <pre>
       *  1D histogram
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.H1DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_H1D_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_H1D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.H1D.class, promc.io.PBufFile.Record.H1D.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.H1D.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          heights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          means_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          rmses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          edges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          bins_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          min_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000100);
          max_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000200);
          allentries_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          nentries_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          underflow_ = 0D;
          bitField0_ = (bitField0_ & ~0x00001000);
          overflow_ = 0D;
          bitField0_ = (bitField0_ & ~0x00002000);
          rms_ = 0D;
          bitField0_ = (bitField0_ & ~0x00004000);
          mean_ = 0D;
          bitField0_ = (bitField0_ & ~0x00008000);
          isFixedBins_ = false;
          bitField0_ = (bitField0_ & ~0x00010000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_H1D_descriptor;
        }

        public promc.io.PBufFile.Record.H1D getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.H1D.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.H1D build() {
          promc.io.PBufFile.Record.H1D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.H1D buildPartial() {
          promc.io.PBufFile.Record.H1D result = new promc.io.PBufFile.Record.H1D(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            heights_ = java.util.Collections.unmodifiableList(heights_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.heights_ = heights_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.errors_ = errors_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            means_ = java.util.Collections.unmodifiableList(means_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.means_ = means_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            rmses_ = java.util.Collections.unmodifiableList(rmses_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rmses_ = rmses_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.entries_ = entries_;
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            edges_ = java.util.Collections.unmodifiableList(edges_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.edges_ = edges_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000002;
          }
          result.bins_ = bins_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000004;
          }
          result.min_ = min_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000008;
          }
          result.max_ = max_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000010;
          }
          result.allentries_ = allentries_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000020;
          }
          result.nentries_ = nentries_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00000040;
          }
          result.underflow_ = underflow_;
          if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
            to_bitField0_ |= 0x00000080;
          }
          result.overflow_ = overflow_;
          if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
            to_bitField0_ |= 0x00000100;
          }
          result.rms_ = rms_;
          if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
            to_bitField0_ |= 0x00000200;
          }
          result.mean_ = mean_;
          if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
            to_bitField0_ |= 0x00000400;
          }
          result.isFixedBins_ = isFixedBins_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.H1D) {
            return mergeFrom((promc.io.PBufFile.Record.H1D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.H1D other) {
          if (other == promc.io.PBufFile.Record.H1D.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.heights_.isEmpty()) {
            if (heights_.isEmpty()) {
              heights_ = other.heights_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHeightsIsMutable();
              heights_.addAll(other.heights_);
            }
            onChanged();
          }
          if (!other.errors_.isEmpty()) {
            if (errors_.isEmpty()) {
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureErrorsIsMutable();
              errors_.addAll(other.errors_);
            }
            onChanged();
          }
          if (!other.means_.isEmpty()) {
            if (means_.isEmpty()) {
              means_ = other.means_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMeansIsMutable();
              means_.addAll(other.means_);
            }
            onChanged();
          }
          if (!other.rmses_.isEmpty()) {
            if (rmses_.isEmpty()) {
              rmses_ = other.rmses_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRmsesIsMutable();
              rmses_.addAll(other.rmses_);
            }
            onChanged();
          }
          if (!other.entries_.isEmpty()) {
            if (entries_.isEmpty()) {
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureEntriesIsMutable();
              entries_.addAll(other.entries_);
            }
            onChanged();
          }
          if (!other.edges_.isEmpty()) {
            if (edges_.isEmpty()) {
              edges_ = other.edges_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureEdgesIsMutable();
              edges_.addAll(other.edges_);
            }
            onChanged();
          }
          if (other.hasBins()) {
            setBins(other.getBins());
          }
          if (other.hasMin()) {
            setMin(other.getMin());
          }
          if (other.hasMax()) {
            setMax(other.getMax());
          }
          if (other.hasAllentries()) {
            setAllentries(other.getAllentries());
          }
          if (other.hasNentries()) {
            setNentries(other.getNentries());
          }
          if (other.hasUnderflow()) {
            setUnderflow(other.getUnderflow());
          }
          if (other.hasOverflow()) {
            setOverflow(other.getOverflow());
          }
          if (other.hasRms()) {
            setRms(other.getRms());
          }
          if (other.hasMean()) {
            setMean(other.getMean());
          }
          if (other.hasIsFixedBins()) {
            setIsFixedBins(other.getIsFixedBins());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasBins()) {
            
            return false;
          }
          if (!hasMin()) {
            
            return false;
          }
          if (!hasMax()) {
            
            return false;
          }
          if (!hasIsFixedBins()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.H1D parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.H1D) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated double heights = 2 [packed = true];
        private java.util.List<java.lang.Double> heights_ = java.util.Collections.emptyList();
        private void ensureHeightsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            heights_ = new java.util.ArrayList<java.lang.Double>(heights_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getHeightsList() {
          return java.util.Collections.unmodifiableList(heights_);
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public int getHeightsCount() {
          return heights_.size();
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public double getHeights(int index) {
          return heights_.get(index);
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder setHeights(
            int index, double value) {
          ensureHeightsIsMutable();
          heights_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder addHeights(double value) {
          ensureHeightsIsMutable();
          heights_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder addAllHeights(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureHeightsIsMutable();
          super.addAll(values, heights_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder clearHeights() {
          heights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // repeated double errors = 3 [packed = true];
        private java.util.List<java.lang.Double> errors_ = java.util.Collections.emptyList();
        private void ensureErrorsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            errors_ = new java.util.ArrayList<java.lang.Double>(errors_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getErrorsList() {
          return java.util.Collections.unmodifiableList(errors_);
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public int getErrorsCount() {
          return errors_.size();
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public double getErrors(int index) {
          return errors_.get(index);
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder setErrors(
            int index, double value) {
          ensureErrorsIsMutable();
          errors_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder addErrors(double value) {
          ensureErrorsIsMutable();
          errors_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder addAllErrors(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureErrorsIsMutable();
          super.addAll(values, errors_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder clearErrors() {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // repeated double means = 4 [packed = true];
        private java.util.List<java.lang.Double> means_ = java.util.Collections.emptyList();
        private void ensureMeansIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            means_ = new java.util.ArrayList<java.lang.Double>(means_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated double means = 4 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getMeansList() {
          return java.util.Collections.unmodifiableList(means_);
        }
        /**
         * <code>repeated double means = 4 [packed = true];</code>
         */
        public int getMeansCount() {
          return means_.size();
        }
        /**
         * <code>repeated double means = 4 [packed = true];</code>
         */
        public double getMeans(int index) {
          return means_.get(index);
        }
        /**
         * <code>repeated double means = 4 [packed = true];</code>
         */
        public Builder setMeans(
            int index, double value) {
          ensureMeansIsMutable();
          means_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double means = 4 [packed = true];</code>
         */
        public Builder addMeans(double value) {
          ensureMeansIsMutable();
          means_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double means = 4 [packed = true];</code>
         */
        public Builder addAllMeans(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureMeansIsMutable();
          super.addAll(values, means_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double means = 4 [packed = true];</code>
         */
        public Builder clearMeans() {
          means_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        // repeated double rmses = 5 [packed = true];
        private java.util.List<java.lang.Double> rmses_ = java.util.Collections.emptyList();
        private void ensureRmsesIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            rmses_ = new java.util.ArrayList<java.lang.Double>(rmses_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated double rmses = 5 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getRmsesList() {
          return java.util.Collections.unmodifiableList(rmses_);
        }
        /**
         * <code>repeated double rmses = 5 [packed = true];</code>
         */
        public int getRmsesCount() {
          return rmses_.size();
        }
        /**
         * <code>repeated double rmses = 5 [packed = true];</code>
         */
        public double getRmses(int index) {
          return rmses_.get(index);
        }
        /**
         * <code>repeated double rmses = 5 [packed = true];</code>
         */
        public Builder setRmses(
            int index, double value) {
          ensureRmsesIsMutable();
          rmses_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmses = 5 [packed = true];</code>
         */
        public Builder addRmses(double value) {
          ensureRmsesIsMutable();
          rmses_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmses = 5 [packed = true];</code>
         */
        public Builder addAllRmses(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureRmsesIsMutable();
          super.addAll(values, rmses_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmses = 5 [packed = true];</code>
         */
        public Builder clearRmses() {
          rmses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        // repeated int32 entries = 6 [packed = true];
        private java.util.List<java.lang.Integer> entries_ = java.util.Collections.emptyList();
        private void ensureEntriesIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            entries_ = new java.util.ArrayList<java.lang.Integer>(entries_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getEntriesList() {
          return java.util.Collections.unmodifiableList(entries_);
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public int getEntriesCount() {
          return entries_.size();
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public int getEntries(int index) {
          return entries_.get(index);
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder setEntries(
            int index, int value) {
          ensureEntriesIsMutable();
          entries_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder addEntries(int value) {
          ensureEntriesIsMutable();
          entries_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder addAllEntries(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureEntriesIsMutable();
          super.addAll(values, entries_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder clearEntries() {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        // repeated double edges = 7 [packed = true];
        private java.util.List<java.lang.Double> edges_ = java.util.Collections.emptyList();
        private void ensureEdgesIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            edges_ = new java.util.ArrayList<java.lang.Double>(edges_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated double edges = 7 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getEdgesList() {
          return java.util.Collections.unmodifiableList(edges_);
        }
        /**
         * <code>repeated double edges = 7 [packed = true];</code>
         */
        public int getEdgesCount() {
          return edges_.size();
        }
        /**
         * <code>repeated double edges = 7 [packed = true];</code>
         */
        public double getEdges(int index) {
          return edges_.get(index);
        }
        /**
         * <code>repeated double edges = 7 [packed = true];</code>
         */
        public Builder setEdges(
            int index, double value) {
          ensureEdgesIsMutable();
          edges_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double edges = 7 [packed = true];</code>
         */
        public Builder addEdges(double value) {
          ensureEdgesIsMutable();
          edges_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double edges = 7 [packed = true];</code>
         */
        public Builder addAllEdges(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureEdgesIsMutable();
          super.addAll(values, edges_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double edges = 7 [packed = true];</code>
         */
        public Builder clearEdges() {
          edges_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        // required int32 bins = 8;
        private int bins_ ;
        /**
         * <code>required int32 bins = 8;</code>
         */
        public boolean hasBins() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>required int32 bins = 8;</code>
         */
        public int getBins() {
          return bins_;
        }
        /**
         * <code>required int32 bins = 8;</code>
         */
        public Builder setBins(int value) {
          bitField0_ |= 0x00000080;
          bins_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 bins = 8;</code>
         */
        public Builder clearBins() {
          bitField0_ = (bitField0_ & ~0x00000080);
          bins_ = 0;
          onChanged();
          return this;
        }

        // required double min = 9;
        private double min_ ;
        /**
         * <code>required double min = 9;</code>
         */
        public boolean hasMin() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>required double min = 9;</code>
         */
        public double getMin() {
          return min_;
        }
        /**
         * <code>required double min = 9;</code>
         */
        public Builder setMin(double value) {
          bitField0_ |= 0x00000100;
          min_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double min = 9;</code>
         */
        public Builder clearMin() {
          bitField0_ = (bitField0_ & ~0x00000100);
          min_ = 0D;
          onChanged();
          return this;
        }

        // required double max = 10;
        private double max_ ;
        /**
         * <code>required double max = 10;</code>
         */
        public boolean hasMax() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>required double max = 10;</code>
         */
        public double getMax() {
          return max_;
        }
        /**
         * <code>required double max = 10;</code>
         */
        public Builder setMax(double value) {
          bitField0_ |= 0x00000200;
          max_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double max = 10;</code>
         */
        public Builder clearMax() {
          bitField0_ = (bitField0_ & ~0x00000200);
          max_ = 0D;
          onChanged();
          return this;
        }

        // optional int32 allentries = 11;
        private int allentries_ ;
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public boolean hasAllentries() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public int getAllentries() {
          return allentries_;
        }
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public Builder setAllentries(int value) {
          bitField0_ |= 0x00000400;
          allentries_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public Builder clearAllentries() {
          bitField0_ = (bitField0_ & ~0x00000400);
          allentries_ = 0;
          onChanged();
          return this;
        }

        // optional int32 nentries = 12;
        private int nentries_ ;
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public boolean hasNentries() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public int getNentries() {
          return nentries_;
        }
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public Builder setNentries(int value) {
          bitField0_ |= 0x00000800;
          nentries_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public Builder clearNentries() {
          bitField0_ = (bitField0_ & ~0x00000800);
          nentries_ = 0;
          onChanged();
          return this;
        }

        // optional double underflow = 13;
        private double underflow_ ;
        /**
         * <code>optional double underflow = 13;</code>
         */
        public boolean hasUnderflow() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>optional double underflow = 13;</code>
         */
        public double getUnderflow() {
          return underflow_;
        }
        /**
         * <code>optional double underflow = 13;</code>
         */
        public Builder setUnderflow(double value) {
          bitField0_ |= 0x00001000;
          underflow_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double underflow = 13;</code>
         */
        public Builder clearUnderflow() {
          bitField0_ = (bitField0_ & ~0x00001000);
          underflow_ = 0D;
          onChanged();
          return this;
        }

        // optional double overflow = 14;
        private double overflow_ ;
        /**
         * <code>optional double overflow = 14;</code>
         */
        public boolean hasOverflow() {
          return ((bitField0_ & 0x00002000) == 0x00002000);
        }
        /**
         * <code>optional double overflow = 14;</code>
         */
        public double getOverflow() {
          return overflow_;
        }
        /**
         * <code>optional double overflow = 14;</code>
         */
        public Builder setOverflow(double value) {
          bitField0_ |= 0x00002000;
          overflow_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double overflow = 14;</code>
         */
        public Builder clearOverflow() {
          bitField0_ = (bitField0_ & ~0x00002000);
          overflow_ = 0D;
          onChanged();
          return this;
        }

        // optional double rms = 15;
        private double rms_ ;
        /**
         * <code>optional double rms = 15;</code>
         */
        public boolean hasRms() {
          return ((bitField0_ & 0x00004000) == 0x00004000);
        }
        /**
         * <code>optional double rms = 15;</code>
         */
        public double getRms() {
          return rms_;
        }
        /**
         * <code>optional double rms = 15;</code>
         */
        public Builder setRms(double value) {
          bitField0_ |= 0x00004000;
          rms_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double rms = 15;</code>
         */
        public Builder clearRms() {
          bitField0_ = (bitField0_ & ~0x00004000);
          rms_ = 0D;
          onChanged();
          return this;
        }

        // optional double mean = 16;
        private double mean_ ;
        /**
         * <code>optional double mean = 16;</code>
         */
        public boolean hasMean() {
          return ((bitField0_ & 0x00008000) == 0x00008000);
        }
        /**
         * <code>optional double mean = 16;</code>
         */
        public double getMean() {
          return mean_;
        }
        /**
         * <code>optional double mean = 16;</code>
         */
        public Builder setMean(double value) {
          bitField0_ |= 0x00008000;
          mean_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double mean = 16;</code>
         */
        public Builder clearMean() {
          bitField0_ = (bitField0_ & ~0x00008000);
          mean_ = 0D;
          onChanged();
          return this;
        }

        // required bool isFixedBins = 17;
        private boolean isFixedBins_ ;
        /**
         * <code>required bool isFixedBins = 17;</code>
         */
        public boolean hasIsFixedBins() {
          return ((bitField0_ & 0x00010000) == 0x00010000);
        }
        /**
         * <code>required bool isFixedBins = 17;</code>
         */
        public boolean getIsFixedBins() {
          return isFixedBins_;
        }
        /**
         * <code>required bool isFixedBins = 17;</code>
         */
        public Builder setIsFixedBins(boolean value) {
          bitField0_ |= 0x00010000;
          isFixedBins_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool isFixedBins = 17;</code>
         */
        public Builder clearIsFixedBins() {
          bitField0_ = (bitField0_ & ~0x00010000);
          isFixedBins_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.H1D)
      }

      static {
        defaultInstance = new H1D(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.H1D)
    }

    public interface H2DOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated double heights = 2 [packed = true];
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getHeightsList();
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      int getHeightsCount();
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      double getHeights(int index);

      // repeated double errors = 3 [packed = true];
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getErrorsList();
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      int getErrorsCount();
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      double getErrors(int index);

      // repeated double meansX = 4 [packed = true];
      /**
       * <code>repeated double meansX = 4 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getMeansXList();
      /**
       * <code>repeated double meansX = 4 [packed = true];</code>
       */
      int getMeansXCount();
      /**
       * <code>repeated double meansX = 4 [packed = true];</code>
       */
      double getMeansX(int index);

      // repeated double rmsesX = 5 [packed = true];
      /**
       * <code>repeated double rmsesX = 5 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getRmsesXList();
      /**
       * <code>repeated double rmsesX = 5 [packed = true];</code>
       */
      int getRmsesXCount();
      /**
       * <code>repeated double rmsesX = 5 [packed = true];</code>
       */
      double getRmsesX(int index);

      // repeated int32 entries = 6 [packed = true];
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getEntriesList();
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      int getEntriesCount();
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      int getEntries(int index);

      // repeated double meansY = 7 [packed = true];
      /**
       * <code>repeated double meansY = 7 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getMeansYList();
      /**
       * <code>repeated double meansY = 7 [packed = true];</code>
       */
      int getMeansYCount();
      /**
       * <code>repeated double meansY = 7 [packed = true];</code>
       */
      double getMeansY(int index);

      // repeated double rmsesY = 8 [packed = true];
      /**
       * <code>repeated double rmsesY = 8 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getRmsesYList();
      /**
       * <code>repeated double rmsesY = 8 [packed = true];</code>
       */
      int getRmsesYCount();
      /**
       * <code>repeated double rmsesY = 8 [packed = true];</code>
       */
      double getRmsesY(int index);

      // repeated double summary = 9 [packed = true];
      /**
       * <code>repeated double summary = 9 [packed = true];</code>
       *
       * <pre>
       * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
       * </pre>
       */
      java.util.List<java.lang.Double> getSummaryList();
      /**
       * <code>repeated double summary = 9 [packed = true];</code>
       *
       * <pre>
       * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
       * </pre>
       */
      int getSummaryCount();
      /**
       * <code>repeated double summary = 9 [packed = true];</code>
       *
       * <pre>
       * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
       * </pre>
       */
      double getSummary(int index);

      // repeated double outofrange = 10 [packed = true];
      /**
       * <code>repeated double outofrange = 10 [packed = true];</code>
       *
       * <pre>
       * out of range
       * 6 | 7 | 8
       * -----------
       * 3 | 4 | 5
       * -----------
       * 0 | 1 | 2
       * </pre>
       */
      java.util.List<java.lang.Double> getOutofrangeList();
      /**
       * <code>repeated double outofrange = 10 [packed = true];</code>
       *
       * <pre>
       * out of range
       * 6 | 7 | 8
       * -----------
       * 3 | 4 | 5
       * -----------
       * 0 | 1 | 2
       * </pre>
       */
      int getOutofrangeCount();
      /**
       * <code>repeated double outofrange = 10 [packed = true];</code>
       *
       * <pre>
       * out of range
       * 6 | 7 | 8
       * -----------
       * 3 | 4 | 5
       * -----------
       * 0 | 1 | 2
       * </pre>
       */
      double getOutofrange(int index);

      // optional int32 allentries = 11;
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      boolean hasAllentries();
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      int getAllentries();

      // optional int32 nentries = 12;
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      boolean hasNentries();
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      int getNentries();

      // required bool isFixedBins = 13;
      /**
       * <code>required bool isFixedBins = 13;</code>
       */
      boolean hasIsFixedBins();
      /**
       * <code>required bool isFixedBins = 13;</code>
       */
      boolean getIsFixedBins();
    }
    /**
     * Protobuf type {@code promc.Record.H2D}
     *
     * <pre>
     *  2D histogram
     * </pre>
     */
    public static final class H2D extends
        com.google.protobuf.GeneratedMessage
        implements H2DOrBuilder {
      // Use H2D.newBuilder() to construct.
      private H2D(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private H2D(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final H2D defaultInstance;
      public static H2D getDefaultInstance() {
        return defaultInstance;
      }

      public H2D getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private H2D(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  heights_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                heights_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  heights_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  heights_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 25: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  errors_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                errors_.add(input.readDouble());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  errors_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  errors_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 33: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  meansX_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                meansX_.add(input.readDouble());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  meansX_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  meansX_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 41: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  rmsesX_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                rmsesX_.add(input.readDouble());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  rmsesX_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  rmsesX_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 48: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  entries_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                entries_.add(input.readInt32());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  entries_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  entries_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 57: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  meansY_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                meansY_.add(input.readDouble());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                  meansY_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                while (input.getBytesUntilLimit() > 0) {
                  meansY_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 65: {
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                  rmsesY_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000080;
                }
                rmsesY_.add(input.readDouble());
                break;
              }
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                  rmsesY_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000080;
                }
                while (input.getBytesUntilLimit() > 0) {
                  rmsesY_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 73: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  summary_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000100;
                }
                summary_.add(input.readDouble());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                  summary_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000100;
                }
                while (input.getBytesUntilLimit() > 0) {
                  summary_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 81: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  outofrange_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000200;
                }
                outofrange_.add(input.readDouble());
                break;
              }
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                  outofrange_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000200;
                }
                while (input.getBytesUntilLimit() > 0) {
                  outofrange_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 88: {
                bitField0_ |= 0x00000002;
                allentries_ = input.readInt32();
                break;
              }
              case 96: {
                bitField0_ |= 0x00000004;
                nentries_ = input.readInt32();
                break;
              }
              case 104: {
                bitField0_ |= 0x00000008;
                isFixedBins_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            heights_ = java.util.Collections.unmodifiableList(heights_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            meansX_ = java.util.Collections.unmodifiableList(meansX_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            rmsesX_ = java.util.Collections.unmodifiableList(rmsesX_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
          }
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            meansY_ = java.util.Collections.unmodifiableList(meansY_);
          }
          if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
            rmsesY_ = java.util.Collections.unmodifiableList(rmsesY_);
          }
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            summary_ = java.util.Collections.unmodifiableList(summary_);
          }
          if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
            outofrange_ = java.util.Collections.unmodifiableList(outofrange_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_H2D_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_H2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.H2D.class, promc.io.PBufFile.Record.H2D.Builder.class);
      }

      public static com.google.protobuf.Parser<H2D> PARSER =
          new com.google.protobuf.AbstractParser<H2D>() {
        public H2D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new H2D(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<H2D> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated double heights = 2 [packed = true];
      public static final int HEIGHTS_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> heights_;
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getHeightsList() {
        return heights_;
      }
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      public int getHeightsCount() {
        return heights_.size();
      }
      /**
       * <code>repeated double heights = 2 [packed = true];</code>
       */
      public double getHeights(int index) {
        return heights_.get(index);
      }
      private int heightsMemoizedSerializedSize = -1;

      // repeated double errors = 3 [packed = true];
      public static final int ERRORS_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Double> errors_;
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getErrorsList() {
        return errors_;
      }
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      public int getErrorsCount() {
        return errors_.size();
      }
      /**
       * <code>repeated double errors = 3 [packed = true];</code>
       */
      public double getErrors(int index) {
        return errors_.get(index);
      }
      private int errorsMemoizedSerializedSize = -1;

      // repeated double meansX = 4 [packed = true];
      public static final int MEANSX_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Double> meansX_;
      /**
       * <code>repeated double meansX = 4 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getMeansXList() {
        return meansX_;
      }
      /**
       * <code>repeated double meansX = 4 [packed = true];</code>
       */
      public int getMeansXCount() {
        return meansX_.size();
      }
      /**
       * <code>repeated double meansX = 4 [packed = true];</code>
       */
      public double getMeansX(int index) {
        return meansX_.get(index);
      }
      private int meansXMemoizedSerializedSize = -1;

      // repeated double rmsesX = 5 [packed = true];
      public static final int RMSESX_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Double> rmsesX_;
      /**
       * <code>repeated double rmsesX = 5 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getRmsesXList() {
        return rmsesX_;
      }
      /**
       * <code>repeated double rmsesX = 5 [packed = true];</code>
       */
      public int getRmsesXCount() {
        return rmsesX_.size();
      }
      /**
       * <code>repeated double rmsesX = 5 [packed = true];</code>
       */
      public double getRmsesX(int index) {
        return rmsesX_.get(index);
      }
      private int rmsesXMemoizedSerializedSize = -1;

      // repeated int32 entries = 6 [packed = true];
      public static final int ENTRIES_FIELD_NUMBER = 6;
      private java.util.List<java.lang.Integer> entries_;
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getEntriesList() {
        return entries_;
      }
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      public int getEntriesCount() {
        return entries_.size();
      }
      /**
       * <code>repeated int32 entries = 6 [packed = true];</code>
       */
      public int getEntries(int index) {
        return entries_.get(index);
      }
      private int entriesMemoizedSerializedSize = -1;

      // repeated double meansY = 7 [packed = true];
      public static final int MEANSY_FIELD_NUMBER = 7;
      private java.util.List<java.lang.Double> meansY_;
      /**
       * <code>repeated double meansY = 7 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getMeansYList() {
        return meansY_;
      }
      /**
       * <code>repeated double meansY = 7 [packed = true];</code>
       */
      public int getMeansYCount() {
        return meansY_.size();
      }
      /**
       * <code>repeated double meansY = 7 [packed = true];</code>
       */
      public double getMeansY(int index) {
        return meansY_.get(index);
      }
      private int meansYMemoizedSerializedSize = -1;

      // repeated double rmsesY = 8 [packed = true];
      public static final int RMSESY_FIELD_NUMBER = 8;
      private java.util.List<java.lang.Double> rmsesY_;
      /**
       * <code>repeated double rmsesY = 8 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getRmsesYList() {
        return rmsesY_;
      }
      /**
       * <code>repeated double rmsesY = 8 [packed = true];</code>
       */
      public int getRmsesYCount() {
        return rmsesY_.size();
      }
      /**
       * <code>repeated double rmsesY = 8 [packed = true];</code>
       */
      public double getRmsesY(int index) {
        return rmsesY_.get(index);
      }
      private int rmsesYMemoizedSerializedSize = -1;

      // repeated double summary = 9 [packed = true];
      public static final int SUMMARY_FIELD_NUMBER = 9;
      private java.util.List<java.lang.Double> summary_;
      /**
       * <code>repeated double summary = 9 [packed = true];</code>
       *
       * <pre>
       * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
       * </pre>
       */
      public java.util.List<java.lang.Double>
          getSummaryList() {
        return summary_;
      }
      /**
       * <code>repeated double summary = 9 [packed = true];</code>
       *
       * <pre>
       * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
       * </pre>
       */
      public int getSummaryCount() {
        return summary_.size();
      }
      /**
       * <code>repeated double summary = 9 [packed = true];</code>
       *
       * <pre>
       * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
       * </pre>
       */
      public double getSummary(int index) {
        return summary_.get(index);
      }
      private int summaryMemoizedSerializedSize = -1;

      // repeated double outofrange = 10 [packed = true];
      public static final int OUTOFRANGE_FIELD_NUMBER = 10;
      private java.util.List<java.lang.Double> outofrange_;
      /**
       * <code>repeated double outofrange = 10 [packed = true];</code>
       *
       * <pre>
       * out of range
       * 6 | 7 | 8
       * -----------
       * 3 | 4 | 5
       * -----------
       * 0 | 1 | 2
       * </pre>
       */
      public java.util.List<java.lang.Double>
          getOutofrangeList() {
        return outofrange_;
      }
      /**
       * <code>repeated double outofrange = 10 [packed = true];</code>
       *
       * <pre>
       * out of range
       * 6 | 7 | 8
       * -----------
       * 3 | 4 | 5
       * -----------
       * 0 | 1 | 2
       * </pre>
       */
      public int getOutofrangeCount() {
        return outofrange_.size();
      }
      /**
       * <code>repeated double outofrange = 10 [packed = true];</code>
       *
       * <pre>
       * out of range
       * 6 | 7 | 8
       * -----------
       * 3 | 4 | 5
       * -----------
       * 0 | 1 | 2
       * </pre>
       */
      public double getOutofrange(int index) {
        return outofrange_.get(index);
      }
      private int outofrangeMemoizedSerializedSize = -1;

      // optional int32 allentries = 11;
      public static final int ALLENTRIES_FIELD_NUMBER = 11;
      private int allentries_;
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      public boolean hasAllentries() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 allentries = 11;</code>
       */
      public int getAllentries() {
        return allentries_;
      }

      // optional int32 nentries = 12;
      public static final int NENTRIES_FIELD_NUMBER = 12;
      private int nentries_;
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      public boolean hasNentries() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 nentries = 12;</code>
       */
      public int getNentries() {
        return nentries_;
      }

      // required bool isFixedBins = 13;
      public static final int ISFIXEDBINS_FIELD_NUMBER = 13;
      private boolean isFixedBins_;
      /**
       * <code>required bool isFixedBins = 13;</code>
       */
      public boolean hasIsFixedBins() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool isFixedBins = 13;</code>
       */
      public boolean getIsFixedBins() {
        return isFixedBins_;
      }

      private void initFields() {
        name_ = "none";
        heights_ = java.util.Collections.emptyList();
        errors_ = java.util.Collections.emptyList();
        meansX_ = java.util.Collections.emptyList();
        rmsesX_ = java.util.Collections.emptyList();
        entries_ = java.util.Collections.emptyList();
        meansY_ = java.util.Collections.emptyList();
        rmsesY_ = java.util.Collections.emptyList();
        summary_ = java.util.Collections.emptyList();
        outofrange_ = java.util.Collections.emptyList();
        allentries_ = 0;
        nentries_ = 0;
        isFixedBins_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsFixedBins()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getHeightsList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(heightsMemoizedSerializedSize);
        }
        for (int i = 0; i < heights_.size(); i++) {
          output.writeDoubleNoTag(heights_.get(i));
        }
        if (getErrorsList().size() > 0) {
          output.writeRawVarint32(26);
          output.writeRawVarint32(errorsMemoizedSerializedSize);
        }
        for (int i = 0; i < errors_.size(); i++) {
          output.writeDoubleNoTag(errors_.get(i));
        }
        if (getMeansXList().size() > 0) {
          output.writeRawVarint32(34);
          output.writeRawVarint32(meansXMemoizedSerializedSize);
        }
        for (int i = 0; i < meansX_.size(); i++) {
          output.writeDoubleNoTag(meansX_.get(i));
        }
        if (getRmsesXList().size() > 0) {
          output.writeRawVarint32(42);
          output.writeRawVarint32(rmsesXMemoizedSerializedSize);
        }
        for (int i = 0; i < rmsesX_.size(); i++) {
          output.writeDoubleNoTag(rmsesX_.get(i));
        }
        if (getEntriesList().size() > 0) {
          output.writeRawVarint32(50);
          output.writeRawVarint32(entriesMemoizedSerializedSize);
        }
        for (int i = 0; i < entries_.size(); i++) {
          output.writeInt32NoTag(entries_.get(i));
        }
        if (getMeansYList().size() > 0) {
          output.writeRawVarint32(58);
          output.writeRawVarint32(meansYMemoizedSerializedSize);
        }
        for (int i = 0; i < meansY_.size(); i++) {
          output.writeDoubleNoTag(meansY_.get(i));
        }
        if (getRmsesYList().size() > 0) {
          output.writeRawVarint32(66);
          output.writeRawVarint32(rmsesYMemoizedSerializedSize);
        }
        for (int i = 0; i < rmsesY_.size(); i++) {
          output.writeDoubleNoTag(rmsesY_.get(i));
        }
        if (getSummaryList().size() > 0) {
          output.writeRawVarint32(74);
          output.writeRawVarint32(summaryMemoizedSerializedSize);
        }
        for (int i = 0; i < summary_.size(); i++) {
          output.writeDoubleNoTag(summary_.get(i));
        }
        if (getOutofrangeList().size() > 0) {
          output.writeRawVarint32(82);
          output.writeRawVarint32(outofrangeMemoizedSerializedSize);
        }
        for (int i = 0; i < outofrange_.size(); i++) {
          output.writeDoubleNoTag(outofrange_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(11, allentries_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(12, nentries_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(13, isFixedBins_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getHeightsList().size();
          size += dataSize;
          if (!getHeightsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          heightsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getErrorsList().size();
          size += dataSize;
          if (!getErrorsList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          errorsMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getMeansXList().size();
          size += dataSize;
          if (!getMeansXList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          meansXMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getRmsesXList().size();
          size += dataSize;
          if (!getRmsesXList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          rmsesXMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < entries_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(entries_.get(i));
          }
          size += dataSize;
          if (!getEntriesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          entriesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getMeansYList().size();
          size += dataSize;
          if (!getMeansYList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          meansYMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getRmsesYList().size();
          size += dataSize;
          if (!getRmsesYList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          rmsesYMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getSummaryList().size();
          size += dataSize;
          if (!getSummaryList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          summaryMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getOutofrangeList().size();
          size += dataSize;
          if (!getOutofrangeList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          outofrangeMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(11, allentries_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(12, nentries_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(13, isFixedBins_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.H2D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.H2D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H2D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.H2D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H2D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.H2D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H2D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.H2D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.H2D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.H2D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.H2D prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.H2D}
       *
       * <pre>
       *  2D histogram
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.H2DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_H2D_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_H2D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.H2D.class, promc.io.PBufFile.Record.H2D.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.H2D.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          heights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          meansX_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          rmsesX_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          meansY_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          rmsesY_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          summary_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          outofrange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          allentries_ = 0;
          bitField0_ = (bitField0_ & ~0x00000400);
          nentries_ = 0;
          bitField0_ = (bitField0_ & ~0x00000800);
          isFixedBins_ = false;
          bitField0_ = (bitField0_ & ~0x00001000);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_H2D_descriptor;
        }

        public promc.io.PBufFile.Record.H2D getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.H2D.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.H2D build() {
          promc.io.PBufFile.Record.H2D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.H2D buildPartial() {
          promc.io.PBufFile.Record.H2D result = new promc.io.PBufFile.Record.H2D(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            heights_ = java.util.Collections.unmodifiableList(heights_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.heights_ = heights_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            errors_ = java.util.Collections.unmodifiableList(errors_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.errors_ = errors_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            meansX_ = java.util.Collections.unmodifiableList(meansX_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.meansX_ = meansX_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            rmsesX_ = java.util.Collections.unmodifiableList(rmsesX_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.rmsesX_ = rmsesX_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            entries_ = java.util.Collections.unmodifiableList(entries_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.entries_ = entries_;
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            meansY_ = java.util.Collections.unmodifiableList(meansY_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.meansY_ = meansY_;
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            rmsesY_ = java.util.Collections.unmodifiableList(rmsesY_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.rmsesY_ = rmsesY_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            summary_ = java.util.Collections.unmodifiableList(summary_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.summary_ = summary_;
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            outofrange_ = java.util.Collections.unmodifiableList(outofrange_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.outofrange_ = outofrange_;
          if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
            to_bitField0_ |= 0x00000002;
          }
          result.allentries_ = allentries_;
          if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
            to_bitField0_ |= 0x00000004;
          }
          result.nentries_ = nentries_;
          if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
            to_bitField0_ |= 0x00000008;
          }
          result.isFixedBins_ = isFixedBins_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.H2D) {
            return mergeFrom((promc.io.PBufFile.Record.H2D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.H2D other) {
          if (other == promc.io.PBufFile.Record.H2D.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.heights_.isEmpty()) {
            if (heights_.isEmpty()) {
              heights_ = other.heights_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHeightsIsMutable();
              heights_.addAll(other.heights_);
            }
            onChanged();
          }
          if (!other.errors_.isEmpty()) {
            if (errors_.isEmpty()) {
              errors_ = other.errors_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureErrorsIsMutable();
              errors_.addAll(other.errors_);
            }
            onChanged();
          }
          if (!other.meansX_.isEmpty()) {
            if (meansX_.isEmpty()) {
              meansX_ = other.meansX_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMeansXIsMutable();
              meansX_.addAll(other.meansX_);
            }
            onChanged();
          }
          if (!other.rmsesX_.isEmpty()) {
            if (rmsesX_.isEmpty()) {
              rmsesX_ = other.rmsesX_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRmsesXIsMutable();
              rmsesX_.addAll(other.rmsesX_);
            }
            onChanged();
          }
          if (!other.entries_.isEmpty()) {
            if (entries_.isEmpty()) {
              entries_ = other.entries_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureEntriesIsMutable();
              entries_.addAll(other.entries_);
            }
            onChanged();
          }
          if (!other.meansY_.isEmpty()) {
            if (meansY_.isEmpty()) {
              meansY_ = other.meansY_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureMeansYIsMutable();
              meansY_.addAll(other.meansY_);
            }
            onChanged();
          }
          if (!other.rmsesY_.isEmpty()) {
            if (rmsesY_.isEmpty()) {
              rmsesY_ = other.rmsesY_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureRmsesYIsMutable();
              rmsesY_.addAll(other.rmsesY_);
            }
            onChanged();
          }
          if (!other.summary_.isEmpty()) {
            if (summary_.isEmpty()) {
              summary_ = other.summary_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureSummaryIsMutable();
              summary_.addAll(other.summary_);
            }
            onChanged();
          }
          if (!other.outofrange_.isEmpty()) {
            if (outofrange_.isEmpty()) {
              outofrange_ = other.outofrange_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureOutofrangeIsMutable();
              outofrange_.addAll(other.outofrange_);
            }
            onChanged();
          }
          if (other.hasAllentries()) {
            setAllentries(other.getAllentries());
          }
          if (other.hasNentries()) {
            setNentries(other.getNentries());
          }
          if (other.hasIsFixedBins()) {
            setIsFixedBins(other.getIsFixedBins());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasIsFixedBins()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.H2D parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.H2D) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated double heights = 2 [packed = true];
        private java.util.List<java.lang.Double> heights_ = java.util.Collections.emptyList();
        private void ensureHeightsIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            heights_ = new java.util.ArrayList<java.lang.Double>(heights_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getHeightsList() {
          return java.util.Collections.unmodifiableList(heights_);
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public int getHeightsCount() {
          return heights_.size();
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public double getHeights(int index) {
          return heights_.get(index);
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder setHeights(
            int index, double value) {
          ensureHeightsIsMutable();
          heights_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder addHeights(double value) {
          ensureHeightsIsMutable();
          heights_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder addAllHeights(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureHeightsIsMutable();
          super.addAll(values, heights_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double heights = 2 [packed = true];</code>
         */
        public Builder clearHeights() {
          heights_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // repeated double errors = 3 [packed = true];
        private java.util.List<java.lang.Double> errors_ = java.util.Collections.emptyList();
        private void ensureErrorsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            errors_ = new java.util.ArrayList<java.lang.Double>(errors_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getErrorsList() {
          return java.util.Collections.unmodifiableList(errors_);
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public int getErrorsCount() {
          return errors_.size();
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public double getErrors(int index) {
          return errors_.get(index);
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder setErrors(
            int index, double value) {
          ensureErrorsIsMutable();
          errors_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder addErrors(double value) {
          ensureErrorsIsMutable();
          errors_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder addAllErrors(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureErrorsIsMutable();
          super.addAll(values, errors_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double errors = 3 [packed = true];</code>
         */
        public Builder clearErrors() {
          errors_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        // repeated double meansX = 4 [packed = true];
        private java.util.List<java.lang.Double> meansX_ = java.util.Collections.emptyList();
        private void ensureMeansXIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            meansX_ = new java.util.ArrayList<java.lang.Double>(meansX_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated double meansX = 4 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getMeansXList() {
          return java.util.Collections.unmodifiableList(meansX_);
        }
        /**
         * <code>repeated double meansX = 4 [packed = true];</code>
         */
        public int getMeansXCount() {
          return meansX_.size();
        }
        /**
         * <code>repeated double meansX = 4 [packed = true];</code>
         */
        public double getMeansX(int index) {
          return meansX_.get(index);
        }
        /**
         * <code>repeated double meansX = 4 [packed = true];</code>
         */
        public Builder setMeansX(
            int index, double value) {
          ensureMeansXIsMutable();
          meansX_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double meansX = 4 [packed = true];</code>
         */
        public Builder addMeansX(double value) {
          ensureMeansXIsMutable();
          meansX_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double meansX = 4 [packed = true];</code>
         */
        public Builder addAllMeansX(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureMeansXIsMutable();
          super.addAll(values, meansX_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double meansX = 4 [packed = true];</code>
         */
        public Builder clearMeansX() {
          meansX_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        // repeated double rmsesX = 5 [packed = true];
        private java.util.List<java.lang.Double> rmsesX_ = java.util.Collections.emptyList();
        private void ensureRmsesXIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            rmsesX_ = new java.util.ArrayList<java.lang.Double>(rmsesX_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated double rmsesX = 5 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getRmsesXList() {
          return java.util.Collections.unmodifiableList(rmsesX_);
        }
        /**
         * <code>repeated double rmsesX = 5 [packed = true];</code>
         */
        public int getRmsesXCount() {
          return rmsesX_.size();
        }
        /**
         * <code>repeated double rmsesX = 5 [packed = true];</code>
         */
        public double getRmsesX(int index) {
          return rmsesX_.get(index);
        }
        /**
         * <code>repeated double rmsesX = 5 [packed = true];</code>
         */
        public Builder setRmsesX(
            int index, double value) {
          ensureRmsesXIsMutable();
          rmsesX_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmsesX = 5 [packed = true];</code>
         */
        public Builder addRmsesX(double value) {
          ensureRmsesXIsMutable();
          rmsesX_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmsesX = 5 [packed = true];</code>
         */
        public Builder addAllRmsesX(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureRmsesXIsMutable();
          super.addAll(values, rmsesX_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmsesX = 5 [packed = true];</code>
         */
        public Builder clearRmsesX() {
          rmsesX_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        // repeated int32 entries = 6 [packed = true];
        private java.util.List<java.lang.Integer> entries_ = java.util.Collections.emptyList();
        private void ensureEntriesIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            entries_ = new java.util.ArrayList<java.lang.Integer>(entries_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getEntriesList() {
          return java.util.Collections.unmodifiableList(entries_);
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public int getEntriesCount() {
          return entries_.size();
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public int getEntries(int index) {
          return entries_.get(index);
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder setEntries(
            int index, int value) {
          ensureEntriesIsMutable();
          entries_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder addEntries(int value) {
          ensureEntriesIsMutable();
          entries_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder addAllEntries(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureEntriesIsMutable();
          super.addAll(values, entries_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 entries = 6 [packed = true];</code>
         */
        public Builder clearEntries() {
          entries_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        // repeated double meansY = 7 [packed = true];
        private java.util.List<java.lang.Double> meansY_ = java.util.Collections.emptyList();
        private void ensureMeansYIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            meansY_ = new java.util.ArrayList<java.lang.Double>(meansY_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated double meansY = 7 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getMeansYList() {
          return java.util.Collections.unmodifiableList(meansY_);
        }
        /**
         * <code>repeated double meansY = 7 [packed = true];</code>
         */
        public int getMeansYCount() {
          return meansY_.size();
        }
        /**
         * <code>repeated double meansY = 7 [packed = true];</code>
         */
        public double getMeansY(int index) {
          return meansY_.get(index);
        }
        /**
         * <code>repeated double meansY = 7 [packed = true];</code>
         */
        public Builder setMeansY(
            int index, double value) {
          ensureMeansYIsMutable();
          meansY_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double meansY = 7 [packed = true];</code>
         */
        public Builder addMeansY(double value) {
          ensureMeansYIsMutable();
          meansY_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double meansY = 7 [packed = true];</code>
         */
        public Builder addAllMeansY(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureMeansYIsMutable();
          super.addAll(values, meansY_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double meansY = 7 [packed = true];</code>
         */
        public Builder clearMeansY() {
          meansY_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        // repeated double rmsesY = 8 [packed = true];
        private java.util.List<java.lang.Double> rmsesY_ = java.util.Collections.emptyList();
        private void ensureRmsesYIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            rmsesY_ = new java.util.ArrayList<java.lang.Double>(rmsesY_);
            bitField0_ |= 0x00000080;
           }
        }
        /**
         * <code>repeated double rmsesY = 8 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getRmsesYList() {
          return java.util.Collections.unmodifiableList(rmsesY_);
        }
        /**
         * <code>repeated double rmsesY = 8 [packed = true];</code>
         */
        public int getRmsesYCount() {
          return rmsesY_.size();
        }
        /**
         * <code>repeated double rmsesY = 8 [packed = true];</code>
         */
        public double getRmsesY(int index) {
          return rmsesY_.get(index);
        }
        /**
         * <code>repeated double rmsesY = 8 [packed = true];</code>
         */
        public Builder setRmsesY(
            int index, double value) {
          ensureRmsesYIsMutable();
          rmsesY_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmsesY = 8 [packed = true];</code>
         */
        public Builder addRmsesY(double value) {
          ensureRmsesYIsMutable();
          rmsesY_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmsesY = 8 [packed = true];</code>
         */
        public Builder addAllRmsesY(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureRmsesYIsMutable();
          super.addAll(values, rmsesY_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double rmsesY = 8 [packed = true];</code>
         */
        public Builder clearRmsesY() {
          rmsesY_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }

        // repeated double summary = 9 [packed = true];
        private java.util.List<java.lang.Double> summary_ = java.util.Collections.emptyList();
        private void ensureSummaryIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            summary_ = new java.util.ArrayList<java.lang.Double>(summary_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated double summary = 9 [packed = true];</code>
         *
         * <pre>
         * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
         * </pre>
         */
        public java.util.List<java.lang.Double>
            getSummaryList() {
          return java.util.Collections.unmodifiableList(summary_);
        }
        /**
         * <code>repeated double summary = 9 [packed = true];</code>
         *
         * <pre>
         * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
         * </pre>
         */
        public int getSummaryCount() {
          return summary_.size();
        }
        /**
         * <code>repeated double summary = 9 [packed = true];</code>
         *
         * <pre>
         * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
         * </pre>
         */
        public double getSummary(int index) {
          return summary_.get(index);
        }
        /**
         * <code>repeated double summary = 9 [packed = true];</code>
         *
         * <pre>
         * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
         * </pre>
         */
        public Builder setSummary(
            int index, double value) {
          ensureSummaryIsMutable();
          summary_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double summary = 9 [packed = true];</code>
         *
         * <pre>
         * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
         * </pre>
         */
        public Builder addSummary(double value) {
          ensureSummaryIsMutable();
          summary_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double summary = 9 [packed = true];</code>
         *
         * <pre>
         * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
         * </pre>
         */
        public Builder addAllSummary(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureSummaryIsMutable();
          super.addAll(values, summary_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double summary = 9 [packed = true];</code>
         *
         * <pre>
         * binsX,minX,maxX,  binsY,minY,maxY,  meanX,rmsX,meanY,rmsY
         * </pre>
         */
        public Builder clearSummary() {
          summary_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }

        // repeated double outofrange = 10 [packed = true];
        private java.util.List<java.lang.Double> outofrange_ = java.util.Collections.emptyList();
        private void ensureOutofrangeIsMutable() {
          if (!((bitField0_ & 0x00000200) == 0x00000200)) {
            outofrange_ = new java.util.ArrayList<java.lang.Double>(outofrange_);
            bitField0_ |= 0x00000200;
           }
        }
        /**
         * <code>repeated double outofrange = 10 [packed = true];</code>
         *
         * <pre>
         * out of range
         * 6 | 7 | 8
         * -----------
         * 3 | 4 | 5
         * -----------
         * 0 | 1 | 2
         * </pre>
         */
        public java.util.List<java.lang.Double>
            getOutofrangeList() {
          return java.util.Collections.unmodifiableList(outofrange_);
        }
        /**
         * <code>repeated double outofrange = 10 [packed = true];</code>
         *
         * <pre>
         * out of range
         * 6 | 7 | 8
         * -----------
         * 3 | 4 | 5
         * -----------
         * 0 | 1 | 2
         * </pre>
         */
        public int getOutofrangeCount() {
          return outofrange_.size();
        }
        /**
         * <code>repeated double outofrange = 10 [packed = true];</code>
         *
         * <pre>
         * out of range
         * 6 | 7 | 8
         * -----------
         * 3 | 4 | 5
         * -----------
         * 0 | 1 | 2
         * </pre>
         */
        public double getOutofrange(int index) {
          return outofrange_.get(index);
        }
        /**
         * <code>repeated double outofrange = 10 [packed = true];</code>
         *
         * <pre>
         * out of range
         * 6 | 7 | 8
         * -----------
         * 3 | 4 | 5
         * -----------
         * 0 | 1 | 2
         * </pre>
         */
        public Builder setOutofrange(
            int index, double value) {
          ensureOutofrangeIsMutable();
          outofrange_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double outofrange = 10 [packed = true];</code>
         *
         * <pre>
         * out of range
         * 6 | 7 | 8
         * -----------
         * 3 | 4 | 5
         * -----------
         * 0 | 1 | 2
         * </pre>
         */
        public Builder addOutofrange(double value) {
          ensureOutofrangeIsMutable();
          outofrange_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double outofrange = 10 [packed = true];</code>
         *
         * <pre>
         * out of range
         * 6 | 7 | 8
         * -----------
         * 3 | 4 | 5
         * -----------
         * 0 | 1 | 2
         * </pre>
         */
        public Builder addAllOutofrange(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureOutofrangeIsMutable();
          super.addAll(values, outofrange_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double outofrange = 10 [packed = true];</code>
         *
         * <pre>
         * out of range
         * 6 | 7 | 8
         * -----------
         * 3 | 4 | 5
         * -----------
         * 0 | 1 | 2
         * </pre>
         */
        public Builder clearOutofrange() {
          outofrange_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
          return this;
        }

        // optional int32 allentries = 11;
        private int allentries_ ;
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public boolean hasAllentries() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public int getAllentries() {
          return allentries_;
        }
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public Builder setAllentries(int value) {
          bitField0_ |= 0x00000400;
          allentries_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 allentries = 11;</code>
         */
        public Builder clearAllentries() {
          bitField0_ = (bitField0_ & ~0x00000400);
          allentries_ = 0;
          onChanged();
          return this;
        }

        // optional int32 nentries = 12;
        private int nentries_ ;
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public boolean hasNentries() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public int getNentries() {
          return nentries_;
        }
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public Builder setNentries(int value) {
          bitField0_ |= 0x00000800;
          nentries_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 nentries = 12;</code>
         */
        public Builder clearNentries() {
          bitField0_ = (bitField0_ & ~0x00000800);
          nentries_ = 0;
          onChanged();
          return this;
        }

        // required bool isFixedBins = 13;
        private boolean isFixedBins_ ;
        /**
         * <code>required bool isFixedBins = 13;</code>
         */
        public boolean hasIsFixedBins() {
          return ((bitField0_ & 0x00001000) == 0x00001000);
        }
        /**
         * <code>required bool isFixedBins = 13;</code>
         */
        public boolean getIsFixedBins() {
          return isFixedBins_;
        }
        /**
         * <code>required bool isFixedBins = 13;</code>
         */
        public Builder setIsFixedBins(boolean value) {
          bitField0_ |= 0x00001000;
          isFixedBins_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool isFixedBins = 13;</code>
         */
        public Builder clearIsFixedBins() {
          bitField0_ = (bitField0_ & ~0x00001000);
          isFixedBins_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.H2D)
      }

      static {
        defaultInstance = new H2D(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.H2D)
    }

    public interface F1DOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required string definition = 2;
      /**
       * <code>required string definition = 2;</code>
       */
      boolean hasDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      java.lang.String getDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      com.google.protobuf.ByteString
          getDefinitionBytes();

      // optional double min = 3;
      /**
       * <code>optional double min = 3;</code>
       */
      boolean hasMin();
      /**
       * <code>optional double min = 3;</code>
       */
      double getMin();

      // optional double max = 4;
      /**
       * <code>optional double max = 4;</code>
       */
      boolean hasMax();
      /**
       * <code>optional double max = 4;</code>
       */
      double getMax();
    }
    /**
     * Protobuf type {@code promc.Record.F1D}
     *
     * <pre>
     *  1D function
     * </pre>
     */
    public static final class F1D extends
        com.google.protobuf.GeneratedMessage
        implements F1DOrBuilder {
      // Use F1D.newBuilder() to construct.
      private F1D(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private F1D(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final F1D defaultInstance;
      public static F1D getDefaultInstance() {
        return defaultInstance;
      }

      public F1D getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private F1D(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                definition_ = input.readBytes();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                min_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                max_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_F1D_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_F1D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.F1D.class, promc.io.PBufFile.Record.F1D.Builder.class);
      }

      public static com.google.protobuf.Parser<F1D> PARSER =
          new com.google.protobuf.AbstractParser<F1D>() {
        public F1D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new F1D(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<F1D> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string definition = 2;
      public static final int DEFINITION_FIELD_NUMBER = 2;
      private java.lang.Object definition_;
      /**
       * <code>required string definition = 2;</code>
       */
      public boolean hasDefinition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public java.lang.String getDefinition() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            definition_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDefinitionBytes() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          definition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional double min = 3;
      public static final int MIN_FIELD_NUMBER = 3;
      private double min_;
      /**
       * <code>optional double min = 3;</code>
       */
      public boolean hasMin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double min = 3;</code>
       */
      public double getMin() {
        return min_;
      }

      // optional double max = 4;
      public static final int MAX_FIELD_NUMBER = 4;
      private double max_;
      /**
       * <code>optional double max = 4;</code>
       */
      public boolean hasMax() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double max = 4;</code>
       */
      public double getMax() {
        return max_;
      }

      private void initFields() {
        name_ = "none";
        definition_ = "";
        min_ = 0D;
        max_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDefinition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, min_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, max_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, min_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, max_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.F1D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.F1D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F1D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.F1D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F1D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.F1D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F1D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.F1D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F1D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.F1D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.F1D prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.F1D}
       *
       * <pre>
       *  1D function
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.F1DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_F1D_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_F1D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.F1D.class, promc.io.PBufFile.Record.F1D.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.F1D.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          definition_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          min_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          max_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_F1D_descriptor;
        }

        public promc.io.PBufFile.Record.F1D getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.F1D.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.F1D build() {
          promc.io.PBufFile.Record.F1D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.F1D buildPartial() {
          promc.io.PBufFile.Record.F1D result = new promc.io.PBufFile.Record.F1D(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.definition_ = definition_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.min_ = min_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.max_ = max_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.F1D) {
            return mergeFrom((promc.io.PBufFile.Record.F1D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.F1D other) {
          if (other == promc.io.PBufFile.Record.F1D.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDefinition()) {
            bitField0_ |= 0x00000002;
            definition_ = other.definition_;
            onChanged();
          }
          if (other.hasMin()) {
            setMin(other.getMin());
          }
          if (other.hasMax()) {
            setMax(other.getMax());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasDefinition()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.F1D parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.F1D) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // required string definition = 2;
        private java.lang.Object definition_ = "";
        /**
         * <code>required string definition = 2;</code>
         */
        public boolean hasDefinition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public java.lang.String getDefinition() {
          java.lang.Object ref = definition_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            definition_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDefinitionBytes() {
          java.lang.Object ref = definition_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            definition_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinition(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder clearDefinition() {
          bitField0_ = (bitField0_ & ~0x00000002);
          definition_ = getDefaultInstance().getDefinition();
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinitionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }

        // optional double min = 3;
        private double min_ ;
        /**
         * <code>optional double min = 3;</code>
         */
        public boolean hasMin() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double min = 3;</code>
         */
        public double getMin() {
          return min_;
        }
        /**
         * <code>optional double min = 3;</code>
         */
        public Builder setMin(double value) {
          bitField0_ |= 0x00000004;
          min_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double min = 3;</code>
         */
        public Builder clearMin() {
          bitField0_ = (bitField0_ & ~0x00000004);
          min_ = 0D;
          onChanged();
          return this;
        }

        // optional double max = 4;
        private double max_ ;
        /**
         * <code>optional double max = 4;</code>
         */
        public boolean hasMax() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double max = 4;</code>
         */
        public double getMax() {
          return max_;
        }
        /**
         * <code>optional double max = 4;</code>
         */
        public Builder setMax(double value) {
          bitField0_ |= 0x00000008;
          max_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double max = 4;</code>
         */
        public Builder clearMax() {
          bitField0_ = (bitField0_ & ~0x00000008);
          max_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.F1D)
      }

      static {
        defaultInstance = new F1D(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.F1D)
    }

    public interface F2DOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required string definition = 2;
      /**
       * <code>required string definition = 2;</code>
       */
      boolean hasDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      java.lang.String getDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      com.google.protobuf.ByteString
          getDefinitionBytes();

      // optional double minX = 3;
      /**
       * <code>optional double minX = 3;</code>
       */
      boolean hasMinX();
      /**
       * <code>optional double minX = 3;</code>
       */
      double getMinX();

      // optional double maxX = 4;
      /**
       * <code>optional double maxX = 4;</code>
       */
      boolean hasMaxX();
      /**
       * <code>optional double maxX = 4;</code>
       */
      double getMaxX();

      // optional double minY = 5;
      /**
       * <code>optional double minY = 5;</code>
       */
      boolean hasMinY();
      /**
       * <code>optional double minY = 5;</code>
       */
      double getMinY();

      // optional double maxY = 6;
      /**
       * <code>optional double maxY = 6;</code>
       */
      boolean hasMaxY();
      /**
       * <code>optional double maxY = 6;</code>
       */
      double getMaxY();
    }
    /**
     * Protobuf type {@code promc.Record.F2D}
     *
     * <pre>
     *  2D function
     * </pre>
     */
    public static final class F2D extends
        com.google.protobuf.GeneratedMessage
        implements F2DOrBuilder {
      // Use F2D.newBuilder() to construct.
      private F2D(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private F2D(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final F2D defaultInstance;
      public static F2D getDefaultInstance() {
        return defaultInstance;
      }

      public F2D getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private F2D(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                definition_ = input.readBytes();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                minX_ = input.readDouble();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                maxX_ = input.readDouble();
                break;
              }
              case 41: {
                bitField0_ |= 0x00000010;
                minY_ = input.readDouble();
                break;
              }
              case 49: {
                bitField0_ |= 0x00000020;
                maxY_ = input.readDouble();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_F2D_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_F2D_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.F2D.class, promc.io.PBufFile.Record.F2D.Builder.class);
      }

      public static com.google.protobuf.Parser<F2D> PARSER =
          new com.google.protobuf.AbstractParser<F2D>() {
        public F2D parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new F2D(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<F2D> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string definition = 2;
      public static final int DEFINITION_FIELD_NUMBER = 2;
      private java.lang.Object definition_;
      /**
       * <code>required string definition = 2;</code>
       */
      public boolean hasDefinition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public java.lang.String getDefinition() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            definition_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDefinitionBytes() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          definition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional double minX = 3;
      public static final int MINX_FIELD_NUMBER = 3;
      private double minX_;
      /**
       * <code>optional double minX = 3;</code>
       */
      public boolean hasMinX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double minX = 3;</code>
       */
      public double getMinX() {
        return minX_;
      }

      // optional double maxX = 4;
      public static final int MAXX_FIELD_NUMBER = 4;
      private double maxX_;
      /**
       * <code>optional double maxX = 4;</code>
       */
      public boolean hasMaxX() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double maxX = 4;</code>
       */
      public double getMaxX() {
        return maxX_;
      }

      // optional double minY = 5;
      public static final int MINY_FIELD_NUMBER = 5;
      private double minY_;
      /**
       * <code>optional double minY = 5;</code>
       */
      public boolean hasMinY() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double minY = 5;</code>
       */
      public double getMinY() {
        return minY_;
      }

      // optional double maxY = 6;
      public static final int MAXY_FIELD_NUMBER = 6;
      private double maxY_;
      /**
       * <code>optional double maxY = 6;</code>
       */
      public boolean hasMaxY() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional double maxY = 6;</code>
       */
      public double getMaxY() {
        return maxY_;
      }

      private void initFields() {
        name_ = "none";
        definition_ = "";
        minX_ = 0D;
        maxX_ = 0D;
        minY_ = 0D;
        maxY_ = 0D;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDefinition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, minX_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, maxX_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeDouble(5, minY_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeDouble(6, maxY_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, minX_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, maxX_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, minY_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, maxY_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.F2D parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.F2D parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F2D parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.F2D parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F2D parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.F2D parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F2D parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.F2D parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.F2D parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.F2D parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.F2D prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.F2D}
       *
       * <pre>
       *  2D function
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.F2DOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_F2D_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_F2D_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.F2D.class, promc.io.PBufFile.Record.F2D.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.F2D.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          definition_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          minX_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          maxX_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          minY_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000010);
          maxY_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_F2D_descriptor;
        }

        public promc.io.PBufFile.Record.F2D getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.F2D.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.F2D build() {
          promc.io.PBufFile.Record.F2D result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.F2D buildPartial() {
          promc.io.PBufFile.Record.F2D result = new promc.io.PBufFile.Record.F2D(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.definition_ = definition_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.minX_ = minX_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.maxX_ = maxX_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.minY_ = minY_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.maxY_ = maxY_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.F2D) {
            return mergeFrom((promc.io.PBufFile.Record.F2D)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.F2D other) {
          if (other == promc.io.PBufFile.Record.F2D.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDefinition()) {
            bitField0_ |= 0x00000002;
            definition_ = other.definition_;
            onChanged();
          }
          if (other.hasMinX()) {
            setMinX(other.getMinX());
          }
          if (other.hasMaxX()) {
            setMaxX(other.getMaxX());
          }
          if (other.hasMinY()) {
            setMinY(other.getMinY());
          }
          if (other.hasMaxY()) {
            setMaxY(other.getMaxY());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasDefinition()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.F2D parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.F2D) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // required string definition = 2;
        private java.lang.Object definition_ = "";
        /**
         * <code>required string definition = 2;</code>
         */
        public boolean hasDefinition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public java.lang.String getDefinition() {
          java.lang.Object ref = definition_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            definition_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDefinitionBytes() {
          java.lang.Object ref = definition_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            definition_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinition(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder clearDefinition() {
          bitField0_ = (bitField0_ & ~0x00000002);
          definition_ = getDefaultInstance().getDefinition();
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinitionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }

        // optional double minX = 3;
        private double minX_ ;
        /**
         * <code>optional double minX = 3;</code>
         */
        public boolean hasMinX() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional double minX = 3;</code>
         */
        public double getMinX() {
          return minX_;
        }
        /**
         * <code>optional double minX = 3;</code>
         */
        public Builder setMinX(double value) {
          bitField0_ |= 0x00000004;
          minX_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double minX = 3;</code>
         */
        public Builder clearMinX() {
          bitField0_ = (bitField0_ & ~0x00000004);
          minX_ = 0D;
          onChanged();
          return this;
        }

        // optional double maxX = 4;
        private double maxX_ ;
        /**
         * <code>optional double maxX = 4;</code>
         */
        public boolean hasMaxX() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional double maxX = 4;</code>
         */
        public double getMaxX() {
          return maxX_;
        }
        /**
         * <code>optional double maxX = 4;</code>
         */
        public Builder setMaxX(double value) {
          bitField0_ |= 0x00000008;
          maxX_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double maxX = 4;</code>
         */
        public Builder clearMaxX() {
          bitField0_ = (bitField0_ & ~0x00000008);
          maxX_ = 0D;
          onChanged();
          return this;
        }

        // optional double minY = 5;
        private double minY_ ;
        /**
         * <code>optional double minY = 5;</code>
         */
        public boolean hasMinY() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional double minY = 5;</code>
         */
        public double getMinY() {
          return minY_;
        }
        /**
         * <code>optional double minY = 5;</code>
         */
        public Builder setMinY(double value) {
          bitField0_ |= 0x00000010;
          minY_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double minY = 5;</code>
         */
        public Builder clearMinY() {
          bitField0_ = (bitField0_ & ~0x00000010);
          minY_ = 0D;
          onChanged();
          return this;
        }

        // optional double maxY = 6;
        private double maxY_ ;
        /**
         * <code>optional double maxY = 6;</code>
         */
        public boolean hasMaxY() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional double maxY = 6;</code>
         */
        public double getMaxY() {
          return maxY_;
        }
        /**
         * <code>optional double maxY = 6;</code>
         */
        public Builder setMaxY(double value) {
          bitField0_ |= 0x00000020;
          maxY_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional double maxY = 6;</code>
         */
        public Builder clearMaxY() {
          bitField0_ = (bitField0_ & ~0x00000020);
          maxY_ = 0D;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.F2D)
      }

      static {
        defaultInstance = new F2D(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.F2D)
    }

    public interface FNDOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required string definition = 2;
      /**
       * <code>required string definition = 2;</code>
       */
      boolean hasDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      java.lang.String getDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      com.google.protobuf.ByteString
          getDefinitionBytes();

      // required string vars = 3;
      /**
       * <code>required string vars = 3;</code>
       */
      boolean hasVars();
      /**
       * <code>required string vars = 3;</code>
       */
      java.lang.String getVars();
      /**
       * <code>required string vars = 3;</code>
       */
      com.google.protobuf.ByteString
          getVarsBytes();
    }
    /**
     * Protobuf type {@code promc.Record.FND}
     *
     * <pre>
     *  N-D function
     * </pre>
     */
    public static final class FND extends
        com.google.protobuf.GeneratedMessage
        implements FNDOrBuilder {
      // Use FND.newBuilder() to construct.
      private FND(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FND(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FND defaultInstance;
      public static FND getDefaultInstance() {
        return defaultInstance;
      }

      public FND getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FND(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                definition_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                vars_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_FND_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_FND_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.FND.class, promc.io.PBufFile.Record.FND.Builder.class);
      }

      public static com.google.protobuf.Parser<FND> PARSER =
          new com.google.protobuf.AbstractParser<FND>() {
        public FND parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FND(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FND> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string definition = 2;
      public static final int DEFINITION_FIELD_NUMBER = 2;
      private java.lang.Object definition_;
      /**
       * <code>required string definition = 2;</code>
       */
      public boolean hasDefinition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public java.lang.String getDefinition() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            definition_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDefinitionBytes() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          definition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string vars = 3;
      public static final int VARS_FIELD_NUMBER = 3;
      private java.lang.Object vars_;
      /**
       * <code>required string vars = 3;</code>
       */
      public boolean hasVars() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string vars = 3;</code>
       */
      public java.lang.String getVars() {
        java.lang.Object ref = vars_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            vars_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string vars = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVarsBytes() {
        java.lang.Object ref = vars_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          vars_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        name_ = "none";
        definition_ = "";
        vars_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDefinition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasVars()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getVarsBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getVarsBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.FND parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.FND parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FND parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.FND parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FND parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.FND parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FND parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.FND parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FND parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.FND parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.FND prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.FND}
       *
       * <pre>
       *  N-D function
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.FNDOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_FND_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_FND_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.FND.class, promc.io.PBufFile.Record.FND.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.FND.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          definition_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          vars_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_FND_descriptor;
        }

        public promc.io.PBufFile.Record.FND getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.FND.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.FND build() {
          promc.io.PBufFile.Record.FND result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.FND buildPartial() {
          promc.io.PBufFile.Record.FND result = new promc.io.PBufFile.Record.FND(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.definition_ = definition_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.vars_ = vars_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.FND) {
            return mergeFrom((promc.io.PBufFile.Record.FND)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.FND other) {
          if (other == promc.io.PBufFile.Record.FND.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDefinition()) {
            bitField0_ |= 0x00000002;
            definition_ = other.definition_;
            onChanged();
          }
          if (other.hasVars()) {
            bitField0_ |= 0x00000004;
            vars_ = other.vars_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasDefinition()) {
            
            return false;
          }
          if (!hasVars()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.FND parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.FND) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // required string definition = 2;
        private java.lang.Object definition_ = "";
        /**
         * <code>required string definition = 2;</code>
         */
        public boolean hasDefinition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public java.lang.String getDefinition() {
          java.lang.Object ref = definition_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            definition_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDefinitionBytes() {
          java.lang.Object ref = definition_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            definition_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinition(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder clearDefinition() {
          bitField0_ = (bitField0_ & ~0x00000002);
          definition_ = getDefaultInstance().getDefinition();
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinitionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }

        // required string vars = 3;
        private java.lang.Object vars_ = "";
        /**
         * <code>required string vars = 3;</code>
         */
        public boolean hasVars() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required string vars = 3;</code>
         */
        public java.lang.String getVars() {
          java.lang.Object ref = vars_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            vars_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string vars = 3;</code>
         */
        public com.google.protobuf.ByteString
            getVarsBytes() {
          java.lang.Object ref = vars_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            vars_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string vars = 3;</code>
         */
        public Builder setVars(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          vars_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string vars = 3;</code>
         */
        public Builder clearVars() {
          bitField0_ = (bitField0_ & ~0x00000004);
          vars_ = getDefaultInstance().getVars();
          onChanged();
          return this;
        }
        /**
         * <code>required string vars = 3;</code>
         */
        public Builder setVarsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          vars_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.FND)
      }

      static {
        defaultInstance = new FND(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.FND)
    }

    public interface FPROrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // required string definition = 2;
      /**
       * <code>required string definition = 2;</code>
       */
      boolean hasDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      java.lang.String getDefinition();
      /**
       * <code>required string definition = 2;</code>
       */
      com.google.protobuf.ByteString
          getDefinitionBytes();

      // required int32 divU = 3;
      /**
       * <code>required int32 divU = 3;</code>
       */
      boolean hasDivU();
      /**
       * <code>required int32 divU = 3;</code>
       */
      int getDivU();

      // required int32 divV = 4;
      /**
       * <code>required int32 divV = 4;</code>
       */
      boolean hasDivV();
      /**
       * <code>required int32 divV = 4;</code>
       */
      int getDivV();
    }
    /**
     * Protobuf type {@code promc.Record.FPR}
     *
     * <pre>
     *  parametric function
     * </pre>
     */
    public static final class FPR extends
        com.google.protobuf.GeneratedMessage
        implements FPROrBuilder {
      // Use FPR.newBuilder() to construct.
      private FPR(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private FPR(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final FPR defaultInstance;
      public static FPR getDefaultInstance() {
        return defaultInstance;
      }

      public FPR getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private FPR(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                definition_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                divU_ = input.readInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                divV_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_FPR_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_FPR_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.FPR.class, promc.io.PBufFile.Record.FPR.Builder.class);
      }

      public static com.google.protobuf.Parser<FPR> PARSER =
          new com.google.protobuf.AbstractParser<FPR>() {
        public FPR parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FPR(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<FPR> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required string definition = 2;
      public static final int DEFINITION_FIELD_NUMBER = 2;
      private java.lang.Object definition_;
      /**
       * <code>required string definition = 2;</code>
       */
      public boolean hasDefinition() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public java.lang.String getDefinition() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            definition_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string definition = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDefinitionBytes() {
        java.lang.Object ref = definition_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          definition_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required int32 divU = 3;
      public static final int DIVU_FIELD_NUMBER = 3;
      private int divU_;
      /**
       * <code>required int32 divU = 3;</code>
       */
      public boolean hasDivU() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 divU = 3;</code>
       */
      public int getDivU() {
        return divU_;
      }

      // required int32 divV = 4;
      public static final int DIVV_FIELD_NUMBER = 4;
      private int divV_;
      /**
       * <code>required int32 divV = 4;</code>
       */
      public boolean hasDivV() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 divV = 4;</code>
       */
      public int getDivV() {
        return divV_;
      }

      private void initFields() {
        name_ = "none";
        definition_ = "";
        divU_ = 0;
        divV_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDefinition()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDivU()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDivV()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt32(3, divU_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt32(4, divV_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getDefinitionBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, divU_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, divV_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.FPR parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.FPR parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FPR parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.FPR parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FPR parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.FPR parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FPR parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.FPR parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.FPR parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.FPR parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.FPR prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.FPR}
       *
       * <pre>
       *  parametric function
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.FPROrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_FPR_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_FPR_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.FPR.class, promc.io.PBufFile.Record.FPR.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.FPR.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          definition_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          divU_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          divV_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_FPR_descriptor;
        }

        public promc.io.PBufFile.Record.FPR getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.FPR.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.FPR build() {
          promc.io.PBufFile.Record.FPR result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.FPR buildPartial() {
          promc.io.PBufFile.Record.FPR result = new promc.io.PBufFile.Record.FPR(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.definition_ = definition_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.divU_ = divU_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.divV_ = divV_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.FPR) {
            return mergeFrom((promc.io.PBufFile.Record.FPR)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.FPR other) {
          if (other == promc.io.PBufFile.Record.FPR.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (other.hasDefinition()) {
            bitField0_ |= 0x00000002;
            definition_ = other.definition_;
            onChanged();
          }
          if (other.hasDivU()) {
            setDivU(other.getDivU());
          }
          if (other.hasDivV()) {
            setDivV(other.getDivV());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasDefinition()) {
            
            return false;
          }
          if (!hasDivU()) {
            
            return false;
          }
          if (!hasDivV()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.FPR parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.FPR) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // required string definition = 2;
        private java.lang.Object definition_ = "";
        /**
         * <code>required string definition = 2;</code>
         */
        public boolean hasDefinition() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public java.lang.String getDefinition() {
          java.lang.Object ref = definition_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            definition_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDefinitionBytes() {
          java.lang.Object ref = definition_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            definition_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinition(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder clearDefinition() {
          bitField0_ = (bitField0_ & ~0x00000002);
          definition_ = getDefaultInstance().getDefinition();
          onChanged();
          return this;
        }
        /**
         * <code>required string definition = 2;</code>
         */
        public Builder setDefinitionBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          definition_ = value;
          onChanged();
          return this;
        }

        // required int32 divU = 3;
        private int divU_ ;
        /**
         * <code>required int32 divU = 3;</code>
         */
        public boolean hasDivU() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 divU = 3;</code>
         */
        public int getDivU() {
          return divU_;
        }
        /**
         * <code>required int32 divU = 3;</code>
         */
        public Builder setDivU(int value) {
          bitField0_ |= 0x00000004;
          divU_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 divU = 3;</code>
         */
        public Builder clearDivU() {
          bitField0_ = (bitField0_ & ~0x00000004);
          divU_ = 0;
          onChanged();
          return this;
        }

        // required int32 divV = 4;
        private int divV_ ;
        /**
         * <code>required int32 divV = 4;</code>
         */
        public boolean hasDivV() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required int32 divV = 4;</code>
         */
        public int getDivV() {
          return divV_;
        }
        /**
         * <code>required int32 divV = 4;</code>
         */
        public Builder setDivV(int value) {
          bitField0_ |= 0x00000008;
          divV_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 divV = 4;</code>
         */
        public Builder clearDivV() {
          bitField0_ = (bitField0_ & ~0x00000008);
          divV_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.FPR)
      }

      static {
        defaultInstance = new FPR(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.FPR)
    }

    public interface PNDOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated double value = 2 [packed = true];
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Double> getValueList();
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      int getValueCount();
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      double getValue(int index);

      // required int32 dimension = 3;
      /**
       * <code>required int32 dimension = 3;</code>
       */
      boolean hasDimension();
      /**
       * <code>required int32 dimension = 3;</code>
       */
      int getDimension();
    }
    /**
     * Protobuf type {@code promc.Record.PND}
     *
     * <pre>
     *  NxM matrix (double) 
     * </pre>
     */
    public static final class PND extends
        com.google.protobuf.GeneratedMessage
        implements PNDOrBuilder {
      // Use PND.newBuilder() to construct.
      private PND(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PND(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PND defaultInstance;
      public static PND getDefaultInstance() {
        return defaultInstance;
      }

      public PND getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PND(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  value_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                value_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  value_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  value_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                dimension_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_PND_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_PND_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.PND.class, promc.io.PBufFile.Record.PND.Builder.class);
      }

      public static com.google.protobuf.Parser<PND> PARSER =
          new com.google.protobuf.AbstractParser<PND>() {
        public PND parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PND(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PND> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated double value = 2 [packed = true];
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> value_;
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Double>
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated double value = 2 [packed = true];</code>
       */
      public double getValue(int index) {
        return value_.get(index);
      }
      private int valueMemoizedSerializedSize = -1;

      // required int32 dimension = 3;
      public static final int DIMENSION_FIELD_NUMBER = 3;
      private int dimension_;
      /**
       * <code>required int32 dimension = 3;</code>
       */
      public boolean hasDimension() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 dimension = 3;</code>
       */
      public int getDimension() {
        return dimension_;
      }

      private void initFields() {
        name_ = "none";
        value_ = java.util.Collections.emptyList();
        dimension_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDimension()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getValueList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(valueMemoizedSerializedSize);
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeDoubleNoTag(value_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(3, dimension_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          dataSize = 8 * getValueList().size();
          size += dataSize;
          if (!getValueList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          valueMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, dimension_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.PND parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PND parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PND parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PND parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PND parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PND parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PND parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.PND parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PND parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PND parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.PND prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.PND}
       *
       * <pre>
       *  NxM matrix (double) 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.PNDOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_PND_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_PND_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.PND.class, promc.io.PBufFile.Record.PND.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.PND.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          dimension_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_PND_descriptor;
        }

        public promc.io.PBufFile.Record.PND getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.PND.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.PND build() {
          promc.io.PBufFile.Record.PND result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.PND buildPartial() {
          promc.io.PBufFile.Record.PND result = new promc.io.PBufFile.Record.PND(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.dimension_ = dimension_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.PND) {
            return mergeFrom((promc.io.PBufFile.Record.PND)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.PND other) {
          if (other == promc.io.PBufFile.Record.PND.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          if (other.hasDimension()) {
            setDimension(other.getDimension());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasDimension()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.PND parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.PND) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated double value = 2 [packed = true];
        private java.util.List<java.lang.Double> value_ = java.util.Collections.emptyList();
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = new java.util.ArrayList<java.lang.Double>(value_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Double>
            getValueList() {
          return java.util.Collections.unmodifiableList(value_);
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public double getValue(int index) {
          return value_.get(index);
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder setValue(
            int index, double value) {
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder addValue(double value) {
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double value = 2 [packed = true];</code>
         */
        public Builder clearValue() {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // required int32 dimension = 3;
        private int dimension_ ;
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public boolean hasDimension() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public int getDimension() {
          return dimension_;
        }
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public Builder setDimension(int value) {
          bitField0_ |= 0x00000004;
          dimension_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public Builder clearDimension() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dimension_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.PND)
      }

      static {
        defaultInstance = new PND(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.PND)
    }

    public interface PNIOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string name = 1 [default = "none"];
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      boolean hasName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      // repeated int32 value = 2 [packed = true];
      /**
       * <code>repeated int32 value = 2 [packed = true];</code>
       */
      java.util.List<java.lang.Integer> getValueList();
      /**
       * <code>repeated int32 value = 2 [packed = true];</code>
       */
      int getValueCount();
      /**
       * <code>repeated int32 value = 2 [packed = true];</code>
       */
      int getValue(int index);

      // required int32 dimension = 3;
      /**
       * <code>required int32 dimension = 3;</code>
       */
      boolean hasDimension();
      /**
       * <code>required int32 dimension = 3;</code>
       */
      int getDimension();
    }
    /**
     * Protobuf type {@code promc.Record.PNI}
     *
     * <pre>
     *  NxM matrix (integer) 
     * </pre>
     */
    public static final class PNI extends
        com.google.protobuf.GeneratedMessage
        implements PNIOrBuilder {
      // Use PNI.newBuilder() to construct.
      private PNI(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private PNI(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final PNI defaultInstance;
      public static PNI getDefaultInstance() {
        return defaultInstance;
      }

      public PNI getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private PNI(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                name_ = input.readBytes();
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  value_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                value_.add(input.readInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  value_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  value_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                dimension_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_PNI_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_PNI_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.PNI.class, promc.io.PBufFile.Record.PNI.Builder.class);
      }

      public static com.google.protobuf.Parser<PNI> PARSER =
          new com.google.protobuf.AbstractParser<PNI>() {
        public PNI parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new PNI(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<PNI> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string name = 1 [default = "none"];
      public static final int NAME_FIELD_NUMBER = 1;
      private java.lang.Object name_;
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 1 [default = "none"];</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // repeated int32 value = 2 [packed = true];
      public static final int VALUE_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> value_;
      /**
       * <code>repeated int32 value = 2 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getValueList() {
        return value_;
      }
      /**
       * <code>repeated int32 value = 2 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int32 value = 2 [packed = true];</code>
       */
      public int getValue(int index) {
        return value_.get(index);
      }
      private int valueMemoizedSerializedSize = -1;

      // required int32 dimension = 3;
      public static final int DIMENSION_FIELD_NUMBER = 3;
      private int dimension_;
      /**
       * <code>required int32 dimension = 3;</code>
       */
      public boolean hasDimension() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 dimension = 3;</code>
       */
      public int getDimension() {
        return dimension_;
      }

      private void initFields() {
        name_ = "none";
        value_ = java.util.Collections.emptyList();
        dimension_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDimension()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getNameBytes());
        }
        if (getValueList().size() > 0) {
          output.writeRawVarint32(18);
          output.writeRawVarint32(valueMemoizedSerializedSize);
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeInt32NoTag(value_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(3, dimension_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getNameBytes());
        }
        {
          int dataSize = 0;
          for (int i = 0; i < value_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(value_.get(i));
          }
          size += dataSize;
          if (!getValueList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          valueMemoizedSerializedSize = dataSize;
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, dimension_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.PBufFile.Record.PNI parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PNI parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PNI parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.PBufFile.Record.PNI parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PNI parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PNI parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PNI parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.PBufFile.Record.PNI parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.PBufFile.Record.PNI parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.PBufFile.Record.PNI parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.PBufFile.Record.PNI prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.Record.PNI}
       *
       * <pre>
       *  NxM matrix (integer) 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.PBufFile.Record.PNIOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.PBufFile.internal_static_promc_Record_PNI_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.PBufFile.internal_static_promc_Record_PNI_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.PBufFile.Record.PNI.class, promc.io.PBufFile.Record.PNI.Builder.class);
        }

        // Construct using promc.io.PBufFile.Record.PNI.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          name_ = "none";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          dimension_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.PBufFile.internal_static_promc_Record_PNI_descriptor;
        }

        public promc.io.PBufFile.Record.PNI getDefaultInstanceForType() {
          return promc.io.PBufFile.Record.PNI.getDefaultInstance();
        }

        public promc.io.PBufFile.Record.PNI build() {
          promc.io.PBufFile.Record.PNI result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.PBufFile.Record.PNI buildPartial() {
          promc.io.PBufFile.Record.PNI result = new promc.io.PBufFile.Record.PNI(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.name_ = name_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.dimension_ = dimension_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.PBufFile.Record.PNI) {
            return mergeFrom((promc.io.PBufFile.Record.PNI)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.PBufFile.Record.PNI other) {
          if (other == promc.io.PBufFile.Record.PNI.getDefaultInstance()) return this;
          if (other.hasName()) {
            bitField0_ |= 0x00000001;
            name_ = other.name_;
            onChanged();
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          if (other.hasDimension()) {
            setDimension(other.getDimension());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasName()) {
            
            return false;
          }
          if (!hasDimension()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.PBufFile.Record.PNI parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.PBufFile.Record.PNI) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string name = 1 [default = "none"];
        private java.lang.Object name_ = "none";
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000001);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 1 [default = "none"];</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          name_ = value;
          onChanged();
          return this;
        }

        // repeated int32 value = 2 [packed = true];
        private java.util.List<java.lang.Integer> value_ = java.util.Collections.emptyList();
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = new java.util.ArrayList<java.lang.Integer>(value_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int32 value = 2 [packed = true];</code>
         */
        public java.util.List<java.lang.Integer>
            getValueList() {
          return java.util.Collections.unmodifiableList(value_);
        }
        /**
         * <code>repeated int32 value = 2 [packed = true];</code>
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <code>repeated int32 value = 2 [packed = true];</code>
         */
        public int getValue(int index) {
          return value_.get(index);
        }
        /**
         * <code>repeated int32 value = 2 [packed = true];</code>
         */
        public Builder setValue(
            int index, int value) {
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 value = 2 [packed = true];</code>
         */
        public Builder addValue(int value) {
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 value = 2 [packed = true];</code>
         */
        public Builder addAllValue(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureValueIsMutable();
          super.addAll(values, value_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 value = 2 [packed = true];</code>
         */
        public Builder clearValue() {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // required int32 dimension = 3;
        private int dimension_ ;
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public boolean hasDimension() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public int getDimension() {
          return dimension_;
        }
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public Builder setDimension(int value) {
          bitField0_ |= 0x00000004;
          dimension_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 dimension = 3;</code>
         */
        public Builder clearDimension() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dimension_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.Record.PNI)
      }

      static {
        defaultInstance = new PNI(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.Record.PNI)
    }

    private int bitField0_;
    // optional string name = 1;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional .promc.Record.P0I p0I = 2;
    public static final int P0I_FIELD_NUMBER = 2;
    private promc.io.PBufFile.Record.P0I p0I_;
    /**
     * <code>optional .promc.Record.P0I p0I = 2;</code>
     */
    public boolean hasP0I() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .promc.Record.P0I p0I = 2;</code>
     */
    public promc.io.PBufFile.Record.P0I getP0I() {
      return p0I_;
    }
    /**
     * <code>optional .promc.Record.P0I p0I = 2;</code>
     */
    public promc.io.PBufFile.Record.P0IOrBuilder getP0IOrBuilder() {
      return p0I_;
    }

    // optional .promc.Record.P0D p0D = 3;
    public static final int P0D_FIELD_NUMBER = 3;
    private promc.io.PBufFile.Record.P0D p0D_;
    /**
     * <code>optional .promc.Record.P0D p0D = 3;</code>
     */
    public boolean hasP0D() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .promc.Record.P0D p0D = 3;</code>
     */
    public promc.io.PBufFile.Record.P0D getP0D() {
      return p0D_;
    }
    /**
     * <code>optional .promc.Record.P0D p0D = 3;</code>
     */
    public promc.io.PBufFile.Record.P0DOrBuilder getP0DOrBuilder() {
      return p0D_;
    }

    // optional .promc.Record.PXY pXY = 4;
    public static final int PXY_FIELD_NUMBER = 4;
    private promc.io.PBufFile.Record.PXY pXY_;
    /**
     * <code>optional .promc.Record.PXY pXY = 4;</code>
     */
    public boolean hasPXY() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional .promc.Record.PXY pXY = 4;</code>
     */
    public promc.io.PBufFile.Record.PXY getPXY() {
      return pXY_;
    }
    /**
     * <code>optional .promc.Record.PXY pXY = 4;</code>
     */
    public promc.io.PBufFile.Record.PXYOrBuilder getPXYOrBuilder() {
      return pXY_;
    }

    // optional .promc.Record.PXYZ pXYZ = 5;
    public static final int PXYZ_FIELD_NUMBER = 5;
    private promc.io.PBufFile.Record.PXYZ pXYZ_;
    /**
     * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
     */
    public boolean hasPXYZ() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
     */
    public promc.io.PBufFile.Record.PXYZ getPXYZ() {
      return pXYZ_;
    }
    /**
     * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
     */
    public promc.io.PBufFile.Record.PXYZOrBuilder getPXYZOrBuilder() {
      return pXYZ_;
    }

    // optional .promc.Record.P1D p1D = 6;
    public static final int P1D_FIELD_NUMBER = 6;
    private promc.io.PBufFile.Record.P1D p1D_;
    /**
     * <code>optional .promc.Record.P1D p1D = 6;</code>
     */
    public boolean hasP1D() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .promc.Record.P1D p1D = 6;</code>
     */
    public promc.io.PBufFile.Record.P1D getP1D() {
      return p1D_;
    }
    /**
     * <code>optional .promc.Record.P1D p1D = 6;</code>
     */
    public promc.io.PBufFile.Record.P1DOrBuilder getP1DOrBuilder() {
      return p1D_;
    }

    // optional .promc.Record.H1D h1D = 7;
    public static final int H1D_FIELD_NUMBER = 7;
    private promc.io.PBufFile.Record.H1D h1D_;
    /**
     * <code>optional .promc.Record.H1D h1D = 7;</code>
     */
    public boolean hasH1D() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .promc.Record.H1D h1D = 7;</code>
     */
    public promc.io.PBufFile.Record.H1D getH1D() {
      return h1D_;
    }
    /**
     * <code>optional .promc.Record.H1D h1D = 7;</code>
     */
    public promc.io.PBufFile.Record.H1DOrBuilder getH1DOrBuilder() {
      return h1D_;
    }

    // optional .promc.Record.H2D h2D = 8;
    public static final int H2D_FIELD_NUMBER = 8;
    private promc.io.PBufFile.Record.H2D h2D_;
    /**
     * <code>optional .promc.Record.H2D h2D = 8;</code>
     */
    public boolean hasH2D() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .promc.Record.H2D h2D = 8;</code>
     */
    public promc.io.PBufFile.Record.H2D getH2D() {
      return h2D_;
    }
    /**
     * <code>optional .promc.Record.H2D h2D = 8;</code>
     */
    public promc.io.PBufFile.Record.H2DOrBuilder getH2DOrBuilder() {
      return h2D_;
    }

    // optional .promc.Record.F1D f1D = 9;
    public static final int F1D_FIELD_NUMBER = 9;
    private promc.io.PBufFile.Record.F1D f1D_;
    /**
     * <code>optional .promc.Record.F1D f1D = 9;</code>
     */
    public boolean hasF1D() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional .promc.Record.F1D f1D = 9;</code>
     */
    public promc.io.PBufFile.Record.F1D getF1D() {
      return f1D_;
    }
    /**
     * <code>optional .promc.Record.F1D f1D = 9;</code>
     */
    public promc.io.PBufFile.Record.F1DOrBuilder getF1DOrBuilder() {
      return f1D_;
    }

    // optional .promc.Record.F2D f2D = 10;
    public static final int F2D_FIELD_NUMBER = 10;
    private promc.io.PBufFile.Record.F2D f2D_;
    /**
     * <code>optional .promc.Record.F2D f2D = 10;</code>
     */
    public boolean hasF2D() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .promc.Record.F2D f2D = 10;</code>
     */
    public promc.io.PBufFile.Record.F2D getF2D() {
      return f2D_;
    }
    /**
     * <code>optional .promc.Record.F2D f2D = 10;</code>
     */
    public promc.io.PBufFile.Record.F2DOrBuilder getF2DOrBuilder() {
      return f2D_;
    }

    // optional .promc.Record.FND fND = 11;
    public static final int FND_FIELD_NUMBER = 11;
    private promc.io.PBufFile.Record.FND fND_;
    /**
     * <code>optional .promc.Record.FND fND = 11;</code>
     */
    public boolean hasFND() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .promc.Record.FND fND = 11;</code>
     */
    public promc.io.PBufFile.Record.FND getFND() {
      return fND_;
    }
    /**
     * <code>optional .promc.Record.FND fND = 11;</code>
     */
    public promc.io.PBufFile.Record.FNDOrBuilder getFNDOrBuilder() {
      return fND_;
    }

    // optional .promc.Record.FPR fPR = 12;
    public static final int FPR_FIELD_NUMBER = 12;
    private promc.io.PBufFile.Record.FPR fPR_;
    /**
     * <code>optional .promc.Record.FPR fPR = 12;</code>
     */
    public boolean hasFPR() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .promc.Record.FPR fPR = 12;</code>
     */
    public promc.io.PBufFile.Record.FPR getFPR() {
      return fPR_;
    }
    /**
     * <code>optional .promc.Record.FPR fPR = 12;</code>
     */
    public promc.io.PBufFile.Record.FPROrBuilder getFPROrBuilder() {
      return fPR_;
    }

    // optional .promc.Record.PND pND = 13;
    public static final int PND_FIELD_NUMBER = 13;
    private promc.io.PBufFile.Record.PND pND_;
    /**
     * <code>optional .promc.Record.PND pND = 13;</code>
     */
    public boolean hasPND() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .promc.Record.PND pND = 13;</code>
     */
    public promc.io.PBufFile.Record.PND getPND() {
      return pND_;
    }
    /**
     * <code>optional .promc.Record.PND pND = 13;</code>
     */
    public promc.io.PBufFile.Record.PNDOrBuilder getPNDOrBuilder() {
      return pND_;
    }

    // optional .promc.Record.PNI pNI = 14;
    public static final int PNI_FIELD_NUMBER = 14;
    private promc.io.PBufFile.Record.PNI pNI_;
    /**
     * <code>optional .promc.Record.PNI pNI = 14;</code>
     */
    public boolean hasPNI() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional .promc.Record.PNI pNI = 14;</code>
     */
    public promc.io.PBufFile.Record.PNI getPNI() {
      return pNI_;
    }
    /**
     * <code>optional .promc.Record.PNI pNI = 14;</code>
     */
    public promc.io.PBufFile.Record.PNIOrBuilder getPNIOrBuilder() {
      return pNI_;
    }

    private void initFields() {
      name_ = "";
      p0I_ = promc.io.PBufFile.Record.P0I.getDefaultInstance();
      p0D_ = promc.io.PBufFile.Record.P0D.getDefaultInstance();
      pXY_ = promc.io.PBufFile.Record.PXY.getDefaultInstance();
      pXYZ_ = promc.io.PBufFile.Record.PXYZ.getDefaultInstance();
      p1D_ = promc.io.PBufFile.Record.P1D.getDefaultInstance();
      h1D_ = promc.io.PBufFile.Record.H1D.getDefaultInstance();
      h2D_ = promc.io.PBufFile.Record.H2D.getDefaultInstance();
      f1D_ = promc.io.PBufFile.Record.F1D.getDefaultInstance();
      f2D_ = promc.io.PBufFile.Record.F2D.getDefaultInstance();
      fND_ = promc.io.PBufFile.Record.FND.getDefaultInstance();
      fPR_ = promc.io.PBufFile.Record.FPR.getDefaultInstance();
      pND_ = promc.io.PBufFile.Record.PND.getDefaultInstance();
      pNI_ = promc.io.PBufFile.Record.PNI.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasP0I()) {
        if (!getP0I().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasP0D()) {
        if (!getP0D().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPXY()) {
        if (!getPXY().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPXYZ()) {
        if (!getPXYZ().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasP1D()) {
        if (!getP1D().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasH1D()) {
        if (!getH1D().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasH2D()) {
        if (!getH2D().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasF1D()) {
        if (!getF1D().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasF2D()) {
        if (!getF2D().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFND()) {
        if (!getFND().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasFPR()) {
        if (!getFPR().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPND()) {
        if (!getPND().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPNI()) {
        if (!getPNI().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, p0I_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, p0D_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, pXY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, pXYZ_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(6, p1D_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, h1D_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(8, h2D_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeMessage(9, f1D_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(10, f2D_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(11, fND_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(12, fPR_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, pND_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeMessage(14, pNI_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, p0I_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, p0D_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, pXY_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, pXYZ_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, p1D_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, h1D_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, h2D_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, f1D_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, f2D_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, fND_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, fPR_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, pND_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, pNI_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static promc.io.PBufFile.Record parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static promc.io.PBufFile.Record parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static promc.io.PBufFile.Record parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static promc.io.PBufFile.Record parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static promc.io.PBufFile.Record parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static promc.io.PBufFile.Record parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static promc.io.PBufFile.Record parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static promc.io.PBufFile.Record parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static promc.io.PBufFile.Record parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static promc.io.PBufFile.Record parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(promc.io.PBufFile.Record prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code promc.Record}
     *
     * <pre>
     * orginize in repeated records
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements promc.io.PBufFile.RecordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.PBufFile.internal_static_promc_Record_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.PBufFile.internal_static_promc_Record_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.PBufFile.Record.class, promc.io.PBufFile.Record.Builder.class);
      }

      // Construct using promc.io.PBufFile.Record.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getP0IFieldBuilder();
          getP0DFieldBuilder();
          getPXYFieldBuilder();
          getPXYZFieldBuilder();
          getP1DFieldBuilder();
          getH1DFieldBuilder();
          getH2DFieldBuilder();
          getF1DFieldBuilder();
          getF2DFieldBuilder();
          getFNDFieldBuilder();
          getFPRFieldBuilder();
          getPNDFieldBuilder();
          getPNIFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (p0IBuilder_ == null) {
          p0I_ = promc.io.PBufFile.Record.P0I.getDefaultInstance();
        } else {
          p0IBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (p0DBuilder_ == null) {
          p0D_ = promc.io.PBufFile.Record.P0D.getDefaultInstance();
        } else {
          p0DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (pXYBuilder_ == null) {
          pXY_ = promc.io.PBufFile.Record.PXY.getDefaultInstance();
        } else {
          pXYBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (pXYZBuilder_ == null) {
          pXYZ_ = promc.io.PBufFile.Record.PXYZ.getDefaultInstance();
        } else {
          pXYZBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (p1DBuilder_ == null) {
          p1D_ = promc.io.PBufFile.Record.P1D.getDefaultInstance();
        } else {
          p1DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (h1DBuilder_ == null) {
          h1D_ = promc.io.PBufFile.Record.H1D.getDefaultInstance();
        } else {
          h1DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (h2DBuilder_ == null) {
          h2D_ = promc.io.PBufFile.Record.H2D.getDefaultInstance();
        } else {
          h2DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (f1DBuilder_ == null) {
          f1D_ = promc.io.PBufFile.Record.F1D.getDefaultInstance();
        } else {
          f1DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (f2DBuilder_ == null) {
          f2D_ = promc.io.PBufFile.Record.F2D.getDefaultInstance();
        } else {
          f2DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (fNDBuilder_ == null) {
          fND_ = promc.io.PBufFile.Record.FND.getDefaultInstance();
        } else {
          fNDBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (fPRBuilder_ == null) {
          fPR_ = promc.io.PBufFile.Record.FPR.getDefaultInstance();
        } else {
          fPRBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (pNDBuilder_ == null) {
          pND_ = promc.io.PBufFile.Record.PND.getDefaultInstance();
        } else {
          pNDBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (pNIBuilder_ == null) {
          pNI_ = promc.io.PBufFile.Record.PNI.getDefaultInstance();
        } else {
          pNIBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return promc.io.PBufFile.internal_static_promc_Record_descriptor;
      }

      public promc.io.PBufFile.Record getDefaultInstanceForType() {
        return promc.io.PBufFile.Record.getDefaultInstance();
      }

      public promc.io.PBufFile.Record build() {
        promc.io.PBufFile.Record result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public promc.io.PBufFile.Record buildPartial() {
        promc.io.PBufFile.Record result = new promc.io.PBufFile.Record(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (p0IBuilder_ == null) {
          result.p0I_ = p0I_;
        } else {
          result.p0I_ = p0IBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (p0DBuilder_ == null) {
          result.p0D_ = p0D_;
        } else {
          result.p0D_ = p0DBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        if (pXYBuilder_ == null) {
          result.pXY_ = pXY_;
        } else {
          result.pXY_ = pXYBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (pXYZBuilder_ == null) {
          result.pXYZ_ = pXYZ_;
        } else {
          result.pXYZ_ = pXYZBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        if (p1DBuilder_ == null) {
          result.p1D_ = p1D_;
        } else {
          result.p1D_ = p1DBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (h1DBuilder_ == null) {
          result.h1D_ = h1D_;
        } else {
          result.h1D_ = h1DBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        if (h2DBuilder_ == null) {
          result.h2D_ = h2D_;
        } else {
          result.h2D_ = h2DBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        if (f1DBuilder_ == null) {
          result.f1D_ = f1D_;
        } else {
          result.f1D_ = f1DBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (f2DBuilder_ == null) {
          result.f2D_ = f2D_;
        } else {
          result.f2D_ = f2DBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        if (fNDBuilder_ == null) {
          result.fND_ = fND_;
        } else {
          result.fND_ = fNDBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        if (fPRBuilder_ == null) {
          result.fPR_ = fPR_;
        } else {
          result.fPR_ = fPRBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (pNDBuilder_ == null) {
          result.pND_ = pND_;
        } else {
          result.pND_ = pNDBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        if (pNIBuilder_ == null) {
          result.pNI_ = pNI_;
        } else {
          result.pNI_ = pNIBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof promc.io.PBufFile.Record) {
          return mergeFrom((promc.io.PBufFile.Record)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(promc.io.PBufFile.Record other) {
        if (other == promc.io.PBufFile.Record.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasP0I()) {
          mergeP0I(other.getP0I());
        }
        if (other.hasP0D()) {
          mergeP0D(other.getP0D());
        }
        if (other.hasPXY()) {
          mergePXY(other.getPXY());
        }
        if (other.hasPXYZ()) {
          mergePXYZ(other.getPXYZ());
        }
        if (other.hasP1D()) {
          mergeP1D(other.getP1D());
        }
        if (other.hasH1D()) {
          mergeH1D(other.getH1D());
        }
        if (other.hasH2D()) {
          mergeH2D(other.getH2D());
        }
        if (other.hasF1D()) {
          mergeF1D(other.getF1D());
        }
        if (other.hasF2D()) {
          mergeF2D(other.getF2D());
        }
        if (other.hasFND()) {
          mergeFND(other.getFND());
        }
        if (other.hasFPR()) {
          mergeFPR(other.getFPR());
        }
        if (other.hasPND()) {
          mergePND(other.getPND());
        }
        if (other.hasPNI()) {
          mergePNI(other.getPNI());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasP0I()) {
          if (!getP0I().isInitialized()) {
            
            return false;
          }
        }
        if (hasP0D()) {
          if (!getP0D().isInitialized()) {
            
            return false;
          }
        }
        if (hasPXY()) {
          if (!getPXY().isInitialized()) {
            
            return false;
          }
        }
        if (hasPXYZ()) {
          if (!getPXYZ().isInitialized()) {
            
            return false;
          }
        }
        if (hasP1D()) {
          if (!getP1D().isInitialized()) {
            
            return false;
          }
        }
        if (hasH1D()) {
          if (!getH1D().isInitialized()) {
            
            return false;
          }
        }
        if (hasH2D()) {
          if (!getH2D().isInitialized()) {
            
            return false;
          }
        }
        if (hasF1D()) {
          if (!getF1D().isInitialized()) {
            
            return false;
          }
        }
        if (hasF2D()) {
          if (!getF2D().isInitialized()) {
            
            return false;
          }
        }
        if (hasFND()) {
          if (!getFND().isInitialized()) {
            
            return false;
          }
        }
        if (hasFPR()) {
          if (!getFPR().isInitialized()) {
            
            return false;
          }
        }
        if (hasPND()) {
          if (!getPND().isInitialized()) {
            
            return false;
          }
        }
        if (hasPNI()) {
          if (!getPNI().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        promc.io.PBufFile.Record parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (promc.io.PBufFile.Record) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string name = 1;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      // optional .promc.Record.P0I p0I = 2;
      private promc.io.PBufFile.Record.P0I p0I_ = promc.io.PBufFile.Record.P0I.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.P0I, promc.io.PBufFile.Record.P0I.Builder, promc.io.PBufFile.Record.P0IOrBuilder> p0IBuilder_;
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public boolean hasP0I() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public promc.io.PBufFile.Record.P0I getP0I() {
        if (p0IBuilder_ == null) {
          return p0I_;
        } else {
          return p0IBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public Builder setP0I(promc.io.PBufFile.Record.P0I value) {
        if (p0IBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p0I_ = value;
          onChanged();
        } else {
          p0IBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public Builder setP0I(
          promc.io.PBufFile.Record.P0I.Builder builderForValue) {
        if (p0IBuilder_ == null) {
          p0I_ = builderForValue.build();
          onChanged();
        } else {
          p0IBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public Builder mergeP0I(promc.io.PBufFile.Record.P0I value) {
        if (p0IBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              p0I_ != promc.io.PBufFile.Record.P0I.getDefaultInstance()) {
            p0I_ =
              promc.io.PBufFile.Record.P0I.newBuilder(p0I_).mergeFrom(value).buildPartial();
          } else {
            p0I_ = value;
          }
          onChanged();
        } else {
          p0IBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public Builder clearP0I() {
        if (p0IBuilder_ == null) {
          p0I_ = promc.io.PBufFile.Record.P0I.getDefaultInstance();
          onChanged();
        } else {
          p0IBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public promc.io.PBufFile.Record.P0I.Builder getP0IBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getP0IFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      public promc.io.PBufFile.Record.P0IOrBuilder getP0IOrBuilder() {
        if (p0IBuilder_ != null) {
          return p0IBuilder_.getMessageOrBuilder();
        } else {
          return p0I_;
        }
      }
      /**
       * <code>optional .promc.Record.P0I p0I = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.P0I, promc.io.PBufFile.Record.P0I.Builder, promc.io.PBufFile.Record.P0IOrBuilder> 
          getP0IFieldBuilder() {
        if (p0IBuilder_ == null) {
          p0IBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.P0I, promc.io.PBufFile.Record.P0I.Builder, promc.io.PBufFile.Record.P0IOrBuilder>(
                  p0I_,
                  getParentForChildren(),
                  isClean());
          p0I_ = null;
        }
        return p0IBuilder_;
      }

      // optional .promc.Record.P0D p0D = 3;
      private promc.io.PBufFile.Record.P0D p0D_ = promc.io.PBufFile.Record.P0D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.P0D, promc.io.PBufFile.Record.P0D.Builder, promc.io.PBufFile.Record.P0DOrBuilder> p0DBuilder_;
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public boolean hasP0D() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public promc.io.PBufFile.Record.P0D getP0D() {
        if (p0DBuilder_ == null) {
          return p0D_;
        } else {
          return p0DBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public Builder setP0D(promc.io.PBufFile.Record.P0D value) {
        if (p0DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p0D_ = value;
          onChanged();
        } else {
          p0DBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public Builder setP0D(
          promc.io.PBufFile.Record.P0D.Builder builderForValue) {
        if (p0DBuilder_ == null) {
          p0D_ = builderForValue.build();
          onChanged();
        } else {
          p0DBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public Builder mergeP0D(promc.io.PBufFile.Record.P0D value) {
        if (p0DBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              p0D_ != promc.io.PBufFile.Record.P0D.getDefaultInstance()) {
            p0D_ =
              promc.io.PBufFile.Record.P0D.newBuilder(p0D_).mergeFrom(value).buildPartial();
          } else {
            p0D_ = value;
          }
          onChanged();
        } else {
          p0DBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public Builder clearP0D() {
        if (p0DBuilder_ == null) {
          p0D_ = promc.io.PBufFile.Record.P0D.getDefaultInstance();
          onChanged();
        } else {
          p0DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public promc.io.PBufFile.Record.P0D.Builder getP0DBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getP0DFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      public promc.io.PBufFile.Record.P0DOrBuilder getP0DOrBuilder() {
        if (p0DBuilder_ != null) {
          return p0DBuilder_.getMessageOrBuilder();
        } else {
          return p0D_;
        }
      }
      /**
       * <code>optional .promc.Record.P0D p0D = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.P0D, promc.io.PBufFile.Record.P0D.Builder, promc.io.PBufFile.Record.P0DOrBuilder> 
          getP0DFieldBuilder() {
        if (p0DBuilder_ == null) {
          p0DBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.P0D, promc.io.PBufFile.Record.P0D.Builder, promc.io.PBufFile.Record.P0DOrBuilder>(
                  p0D_,
                  getParentForChildren(),
                  isClean());
          p0D_ = null;
        }
        return p0DBuilder_;
      }

      // optional .promc.Record.PXY pXY = 4;
      private promc.io.PBufFile.Record.PXY pXY_ = promc.io.PBufFile.Record.PXY.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PXY, promc.io.PBufFile.Record.PXY.Builder, promc.io.PBufFile.Record.PXYOrBuilder> pXYBuilder_;
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public boolean hasPXY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public promc.io.PBufFile.Record.PXY getPXY() {
        if (pXYBuilder_ == null) {
          return pXY_;
        } else {
          return pXYBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public Builder setPXY(promc.io.PBufFile.Record.PXY value) {
        if (pXYBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pXY_ = value;
          onChanged();
        } else {
          pXYBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public Builder setPXY(
          promc.io.PBufFile.Record.PXY.Builder builderForValue) {
        if (pXYBuilder_ == null) {
          pXY_ = builderForValue.build();
          onChanged();
        } else {
          pXYBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public Builder mergePXY(promc.io.PBufFile.Record.PXY value) {
        if (pXYBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008) &&
              pXY_ != promc.io.PBufFile.Record.PXY.getDefaultInstance()) {
            pXY_ =
              promc.io.PBufFile.Record.PXY.newBuilder(pXY_).mergeFrom(value).buildPartial();
          } else {
            pXY_ = value;
          }
          onChanged();
        } else {
          pXYBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        return this;
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public Builder clearPXY() {
        if (pXYBuilder_ == null) {
          pXY_ = promc.io.PBufFile.Record.PXY.getDefaultInstance();
          onChanged();
        } else {
          pXYBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public promc.io.PBufFile.Record.PXY.Builder getPXYBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPXYFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      public promc.io.PBufFile.Record.PXYOrBuilder getPXYOrBuilder() {
        if (pXYBuilder_ != null) {
          return pXYBuilder_.getMessageOrBuilder();
        } else {
          return pXY_;
        }
      }
      /**
       * <code>optional .promc.Record.PXY pXY = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PXY, promc.io.PBufFile.Record.PXY.Builder, promc.io.PBufFile.Record.PXYOrBuilder> 
          getPXYFieldBuilder() {
        if (pXYBuilder_ == null) {
          pXYBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.PXY, promc.io.PBufFile.Record.PXY.Builder, promc.io.PBufFile.Record.PXYOrBuilder>(
                  pXY_,
                  getParentForChildren(),
                  isClean());
          pXY_ = null;
        }
        return pXYBuilder_;
      }

      // optional .promc.Record.PXYZ pXYZ = 5;
      private promc.io.PBufFile.Record.PXYZ pXYZ_ = promc.io.PBufFile.Record.PXYZ.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PXYZ, promc.io.PBufFile.Record.PXYZ.Builder, promc.io.PBufFile.Record.PXYZOrBuilder> pXYZBuilder_;
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public boolean hasPXYZ() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public promc.io.PBufFile.Record.PXYZ getPXYZ() {
        if (pXYZBuilder_ == null) {
          return pXYZ_;
        } else {
          return pXYZBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public Builder setPXYZ(promc.io.PBufFile.Record.PXYZ value) {
        if (pXYZBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pXYZ_ = value;
          onChanged();
        } else {
          pXYZBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public Builder setPXYZ(
          promc.io.PBufFile.Record.PXYZ.Builder builderForValue) {
        if (pXYZBuilder_ == null) {
          pXYZ_ = builderForValue.build();
          onChanged();
        } else {
          pXYZBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public Builder mergePXYZ(promc.io.PBufFile.Record.PXYZ value) {
        if (pXYZBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              pXYZ_ != promc.io.PBufFile.Record.PXYZ.getDefaultInstance()) {
            pXYZ_ =
              promc.io.PBufFile.Record.PXYZ.newBuilder(pXYZ_).mergeFrom(value).buildPartial();
          } else {
            pXYZ_ = value;
          }
          onChanged();
        } else {
          pXYZBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public Builder clearPXYZ() {
        if (pXYZBuilder_ == null) {
          pXYZ_ = promc.io.PBufFile.Record.PXYZ.getDefaultInstance();
          onChanged();
        } else {
          pXYZBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public promc.io.PBufFile.Record.PXYZ.Builder getPXYZBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getPXYZFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      public promc.io.PBufFile.Record.PXYZOrBuilder getPXYZOrBuilder() {
        if (pXYZBuilder_ != null) {
          return pXYZBuilder_.getMessageOrBuilder();
        } else {
          return pXYZ_;
        }
      }
      /**
       * <code>optional .promc.Record.PXYZ pXYZ = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PXYZ, promc.io.PBufFile.Record.PXYZ.Builder, promc.io.PBufFile.Record.PXYZOrBuilder> 
          getPXYZFieldBuilder() {
        if (pXYZBuilder_ == null) {
          pXYZBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.PXYZ, promc.io.PBufFile.Record.PXYZ.Builder, promc.io.PBufFile.Record.PXYZOrBuilder>(
                  pXYZ_,
                  getParentForChildren(),
                  isClean());
          pXYZ_ = null;
        }
        return pXYZBuilder_;
      }

      // optional .promc.Record.P1D p1D = 6;
      private promc.io.PBufFile.Record.P1D p1D_ = promc.io.PBufFile.Record.P1D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.P1D, promc.io.PBufFile.Record.P1D.Builder, promc.io.PBufFile.Record.P1DOrBuilder> p1DBuilder_;
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public boolean hasP1D() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public promc.io.PBufFile.Record.P1D getP1D() {
        if (p1DBuilder_ == null) {
          return p1D_;
        } else {
          return p1DBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public Builder setP1D(promc.io.PBufFile.Record.P1D value) {
        if (p1DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          p1D_ = value;
          onChanged();
        } else {
          p1DBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public Builder setP1D(
          promc.io.PBufFile.Record.P1D.Builder builderForValue) {
        if (p1DBuilder_ == null) {
          p1D_ = builderForValue.build();
          onChanged();
        } else {
          p1DBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public Builder mergeP1D(promc.io.PBufFile.Record.P1D value) {
        if (p1DBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              p1D_ != promc.io.PBufFile.Record.P1D.getDefaultInstance()) {
            p1D_ =
              promc.io.PBufFile.Record.P1D.newBuilder(p1D_).mergeFrom(value).buildPartial();
          } else {
            p1D_ = value;
          }
          onChanged();
        } else {
          p1DBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public Builder clearP1D() {
        if (p1DBuilder_ == null) {
          p1D_ = promc.io.PBufFile.Record.P1D.getDefaultInstance();
          onChanged();
        } else {
          p1DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public promc.io.PBufFile.Record.P1D.Builder getP1DBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getP1DFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      public promc.io.PBufFile.Record.P1DOrBuilder getP1DOrBuilder() {
        if (p1DBuilder_ != null) {
          return p1DBuilder_.getMessageOrBuilder();
        } else {
          return p1D_;
        }
      }
      /**
       * <code>optional .promc.Record.P1D p1D = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.P1D, promc.io.PBufFile.Record.P1D.Builder, promc.io.PBufFile.Record.P1DOrBuilder> 
          getP1DFieldBuilder() {
        if (p1DBuilder_ == null) {
          p1DBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.P1D, promc.io.PBufFile.Record.P1D.Builder, promc.io.PBufFile.Record.P1DOrBuilder>(
                  p1D_,
                  getParentForChildren(),
                  isClean());
          p1D_ = null;
        }
        return p1DBuilder_;
      }

      // optional .promc.Record.H1D h1D = 7;
      private promc.io.PBufFile.Record.H1D h1D_ = promc.io.PBufFile.Record.H1D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.H1D, promc.io.PBufFile.Record.H1D.Builder, promc.io.PBufFile.Record.H1DOrBuilder> h1DBuilder_;
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public boolean hasH1D() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public promc.io.PBufFile.Record.H1D getH1D() {
        if (h1DBuilder_ == null) {
          return h1D_;
        } else {
          return h1DBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public Builder setH1D(promc.io.PBufFile.Record.H1D value) {
        if (h1DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          h1D_ = value;
          onChanged();
        } else {
          h1DBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public Builder setH1D(
          promc.io.PBufFile.Record.H1D.Builder builderForValue) {
        if (h1DBuilder_ == null) {
          h1D_ = builderForValue.build();
          onChanged();
        } else {
          h1DBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public Builder mergeH1D(promc.io.PBufFile.Record.H1D value) {
        if (h1DBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              h1D_ != promc.io.PBufFile.Record.H1D.getDefaultInstance()) {
            h1D_ =
              promc.io.PBufFile.Record.H1D.newBuilder(h1D_).mergeFrom(value).buildPartial();
          } else {
            h1D_ = value;
          }
          onChanged();
        } else {
          h1DBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public Builder clearH1D() {
        if (h1DBuilder_ == null) {
          h1D_ = promc.io.PBufFile.Record.H1D.getDefaultInstance();
          onChanged();
        } else {
          h1DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public promc.io.PBufFile.Record.H1D.Builder getH1DBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getH1DFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      public promc.io.PBufFile.Record.H1DOrBuilder getH1DOrBuilder() {
        if (h1DBuilder_ != null) {
          return h1DBuilder_.getMessageOrBuilder();
        } else {
          return h1D_;
        }
      }
      /**
       * <code>optional .promc.Record.H1D h1D = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.H1D, promc.io.PBufFile.Record.H1D.Builder, promc.io.PBufFile.Record.H1DOrBuilder> 
          getH1DFieldBuilder() {
        if (h1DBuilder_ == null) {
          h1DBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.H1D, promc.io.PBufFile.Record.H1D.Builder, promc.io.PBufFile.Record.H1DOrBuilder>(
                  h1D_,
                  getParentForChildren(),
                  isClean());
          h1D_ = null;
        }
        return h1DBuilder_;
      }

      // optional .promc.Record.H2D h2D = 8;
      private promc.io.PBufFile.Record.H2D h2D_ = promc.io.PBufFile.Record.H2D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.H2D, promc.io.PBufFile.Record.H2D.Builder, promc.io.PBufFile.Record.H2DOrBuilder> h2DBuilder_;
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public boolean hasH2D() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public promc.io.PBufFile.Record.H2D getH2D() {
        if (h2DBuilder_ == null) {
          return h2D_;
        } else {
          return h2DBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public Builder setH2D(promc.io.PBufFile.Record.H2D value) {
        if (h2DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          h2D_ = value;
          onChanged();
        } else {
          h2DBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public Builder setH2D(
          promc.io.PBufFile.Record.H2D.Builder builderForValue) {
        if (h2DBuilder_ == null) {
          h2D_ = builderForValue.build();
          onChanged();
        } else {
          h2DBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public Builder mergeH2D(promc.io.PBufFile.Record.H2D value) {
        if (h2DBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              h2D_ != promc.io.PBufFile.Record.H2D.getDefaultInstance()) {
            h2D_ =
              promc.io.PBufFile.Record.H2D.newBuilder(h2D_).mergeFrom(value).buildPartial();
          } else {
            h2D_ = value;
          }
          onChanged();
        } else {
          h2DBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public Builder clearH2D() {
        if (h2DBuilder_ == null) {
          h2D_ = promc.io.PBufFile.Record.H2D.getDefaultInstance();
          onChanged();
        } else {
          h2DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public promc.io.PBufFile.Record.H2D.Builder getH2DBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getH2DFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      public promc.io.PBufFile.Record.H2DOrBuilder getH2DOrBuilder() {
        if (h2DBuilder_ != null) {
          return h2DBuilder_.getMessageOrBuilder();
        } else {
          return h2D_;
        }
      }
      /**
       * <code>optional .promc.Record.H2D h2D = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.H2D, promc.io.PBufFile.Record.H2D.Builder, promc.io.PBufFile.Record.H2DOrBuilder> 
          getH2DFieldBuilder() {
        if (h2DBuilder_ == null) {
          h2DBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.H2D, promc.io.PBufFile.Record.H2D.Builder, promc.io.PBufFile.Record.H2DOrBuilder>(
                  h2D_,
                  getParentForChildren(),
                  isClean());
          h2D_ = null;
        }
        return h2DBuilder_;
      }

      // optional .promc.Record.F1D f1D = 9;
      private promc.io.PBufFile.Record.F1D f1D_ = promc.io.PBufFile.Record.F1D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.F1D, promc.io.PBufFile.Record.F1D.Builder, promc.io.PBufFile.Record.F1DOrBuilder> f1DBuilder_;
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public boolean hasF1D() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public promc.io.PBufFile.Record.F1D getF1D() {
        if (f1DBuilder_ == null) {
          return f1D_;
        } else {
          return f1DBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public Builder setF1D(promc.io.PBufFile.Record.F1D value) {
        if (f1DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          f1D_ = value;
          onChanged();
        } else {
          f1DBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public Builder setF1D(
          promc.io.PBufFile.Record.F1D.Builder builderForValue) {
        if (f1DBuilder_ == null) {
          f1D_ = builderForValue.build();
          onChanged();
        } else {
          f1DBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public Builder mergeF1D(promc.io.PBufFile.Record.F1D value) {
        if (f1DBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              f1D_ != promc.io.PBufFile.Record.F1D.getDefaultInstance()) {
            f1D_ =
              promc.io.PBufFile.Record.F1D.newBuilder(f1D_).mergeFrom(value).buildPartial();
          } else {
            f1D_ = value;
          }
          onChanged();
        } else {
          f1DBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public Builder clearF1D() {
        if (f1DBuilder_ == null) {
          f1D_ = promc.io.PBufFile.Record.F1D.getDefaultInstance();
          onChanged();
        } else {
          f1DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public promc.io.PBufFile.Record.F1D.Builder getF1DBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getF1DFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      public promc.io.PBufFile.Record.F1DOrBuilder getF1DOrBuilder() {
        if (f1DBuilder_ != null) {
          return f1DBuilder_.getMessageOrBuilder();
        } else {
          return f1D_;
        }
      }
      /**
       * <code>optional .promc.Record.F1D f1D = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.F1D, promc.io.PBufFile.Record.F1D.Builder, promc.io.PBufFile.Record.F1DOrBuilder> 
          getF1DFieldBuilder() {
        if (f1DBuilder_ == null) {
          f1DBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.F1D, promc.io.PBufFile.Record.F1D.Builder, promc.io.PBufFile.Record.F1DOrBuilder>(
                  f1D_,
                  getParentForChildren(),
                  isClean());
          f1D_ = null;
        }
        return f1DBuilder_;
      }

      // optional .promc.Record.F2D f2D = 10;
      private promc.io.PBufFile.Record.F2D f2D_ = promc.io.PBufFile.Record.F2D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.F2D, promc.io.PBufFile.Record.F2D.Builder, promc.io.PBufFile.Record.F2DOrBuilder> f2DBuilder_;
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public boolean hasF2D() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public promc.io.PBufFile.Record.F2D getF2D() {
        if (f2DBuilder_ == null) {
          return f2D_;
        } else {
          return f2DBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public Builder setF2D(promc.io.PBufFile.Record.F2D value) {
        if (f2DBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          f2D_ = value;
          onChanged();
        } else {
          f2DBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public Builder setF2D(
          promc.io.PBufFile.Record.F2D.Builder builderForValue) {
        if (f2DBuilder_ == null) {
          f2D_ = builderForValue.build();
          onChanged();
        } else {
          f2DBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public Builder mergeF2D(promc.io.PBufFile.Record.F2D value) {
        if (f2DBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              f2D_ != promc.io.PBufFile.Record.F2D.getDefaultInstance()) {
            f2D_ =
              promc.io.PBufFile.Record.F2D.newBuilder(f2D_).mergeFrom(value).buildPartial();
          } else {
            f2D_ = value;
          }
          onChanged();
        } else {
          f2DBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public Builder clearF2D() {
        if (f2DBuilder_ == null) {
          f2D_ = promc.io.PBufFile.Record.F2D.getDefaultInstance();
          onChanged();
        } else {
          f2DBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public promc.io.PBufFile.Record.F2D.Builder getF2DBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getF2DFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      public promc.io.PBufFile.Record.F2DOrBuilder getF2DOrBuilder() {
        if (f2DBuilder_ != null) {
          return f2DBuilder_.getMessageOrBuilder();
        } else {
          return f2D_;
        }
      }
      /**
       * <code>optional .promc.Record.F2D f2D = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.F2D, promc.io.PBufFile.Record.F2D.Builder, promc.io.PBufFile.Record.F2DOrBuilder> 
          getF2DFieldBuilder() {
        if (f2DBuilder_ == null) {
          f2DBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.F2D, promc.io.PBufFile.Record.F2D.Builder, promc.io.PBufFile.Record.F2DOrBuilder>(
                  f2D_,
                  getParentForChildren(),
                  isClean());
          f2D_ = null;
        }
        return f2DBuilder_;
      }

      // optional .promc.Record.FND fND = 11;
      private promc.io.PBufFile.Record.FND fND_ = promc.io.PBufFile.Record.FND.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.FND, promc.io.PBufFile.Record.FND.Builder, promc.io.PBufFile.Record.FNDOrBuilder> fNDBuilder_;
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public boolean hasFND() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public promc.io.PBufFile.Record.FND getFND() {
        if (fNDBuilder_ == null) {
          return fND_;
        } else {
          return fNDBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public Builder setFND(promc.io.PBufFile.Record.FND value) {
        if (fNDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fND_ = value;
          onChanged();
        } else {
          fNDBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public Builder setFND(
          promc.io.PBufFile.Record.FND.Builder builderForValue) {
        if (fNDBuilder_ == null) {
          fND_ = builderForValue.build();
          onChanged();
        } else {
          fNDBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public Builder mergeFND(promc.io.PBufFile.Record.FND value) {
        if (fNDBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400) &&
              fND_ != promc.io.PBufFile.Record.FND.getDefaultInstance()) {
            fND_ =
              promc.io.PBufFile.Record.FND.newBuilder(fND_).mergeFrom(value).buildPartial();
          } else {
            fND_ = value;
          }
          onChanged();
        } else {
          fNDBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000400;
        return this;
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public Builder clearFND() {
        if (fNDBuilder_ == null) {
          fND_ = promc.io.PBufFile.Record.FND.getDefaultInstance();
          onChanged();
        } else {
          fNDBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public promc.io.PBufFile.Record.FND.Builder getFNDBuilder() {
        bitField0_ |= 0x00000400;
        onChanged();
        return getFNDFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      public promc.io.PBufFile.Record.FNDOrBuilder getFNDOrBuilder() {
        if (fNDBuilder_ != null) {
          return fNDBuilder_.getMessageOrBuilder();
        } else {
          return fND_;
        }
      }
      /**
       * <code>optional .promc.Record.FND fND = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.FND, promc.io.PBufFile.Record.FND.Builder, promc.io.PBufFile.Record.FNDOrBuilder> 
          getFNDFieldBuilder() {
        if (fNDBuilder_ == null) {
          fNDBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.FND, promc.io.PBufFile.Record.FND.Builder, promc.io.PBufFile.Record.FNDOrBuilder>(
                  fND_,
                  getParentForChildren(),
                  isClean());
          fND_ = null;
        }
        return fNDBuilder_;
      }

      // optional .promc.Record.FPR fPR = 12;
      private promc.io.PBufFile.Record.FPR fPR_ = promc.io.PBufFile.Record.FPR.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.FPR, promc.io.PBufFile.Record.FPR.Builder, promc.io.PBufFile.Record.FPROrBuilder> fPRBuilder_;
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public boolean hasFPR() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public promc.io.PBufFile.Record.FPR getFPR() {
        if (fPRBuilder_ == null) {
          return fPR_;
        } else {
          return fPRBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public Builder setFPR(promc.io.PBufFile.Record.FPR value) {
        if (fPRBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fPR_ = value;
          onChanged();
        } else {
          fPRBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public Builder setFPR(
          promc.io.PBufFile.Record.FPR.Builder builderForValue) {
        if (fPRBuilder_ == null) {
          fPR_ = builderForValue.build();
          onChanged();
        } else {
          fPRBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public Builder mergeFPR(promc.io.PBufFile.Record.FPR value) {
        if (fPRBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              fPR_ != promc.io.PBufFile.Record.FPR.getDefaultInstance()) {
            fPR_ =
              promc.io.PBufFile.Record.FPR.newBuilder(fPR_).mergeFrom(value).buildPartial();
          } else {
            fPR_ = value;
          }
          onChanged();
        } else {
          fPRBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public Builder clearFPR() {
        if (fPRBuilder_ == null) {
          fPR_ = promc.io.PBufFile.Record.FPR.getDefaultInstance();
          onChanged();
        } else {
          fPRBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public promc.io.PBufFile.Record.FPR.Builder getFPRBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getFPRFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      public promc.io.PBufFile.Record.FPROrBuilder getFPROrBuilder() {
        if (fPRBuilder_ != null) {
          return fPRBuilder_.getMessageOrBuilder();
        } else {
          return fPR_;
        }
      }
      /**
       * <code>optional .promc.Record.FPR fPR = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.FPR, promc.io.PBufFile.Record.FPR.Builder, promc.io.PBufFile.Record.FPROrBuilder> 
          getFPRFieldBuilder() {
        if (fPRBuilder_ == null) {
          fPRBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.FPR, promc.io.PBufFile.Record.FPR.Builder, promc.io.PBufFile.Record.FPROrBuilder>(
                  fPR_,
                  getParentForChildren(),
                  isClean());
          fPR_ = null;
        }
        return fPRBuilder_;
      }

      // optional .promc.Record.PND pND = 13;
      private promc.io.PBufFile.Record.PND pND_ = promc.io.PBufFile.Record.PND.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PND, promc.io.PBufFile.Record.PND.Builder, promc.io.PBufFile.Record.PNDOrBuilder> pNDBuilder_;
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public boolean hasPND() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public promc.io.PBufFile.Record.PND getPND() {
        if (pNDBuilder_ == null) {
          return pND_;
        } else {
          return pNDBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public Builder setPND(promc.io.PBufFile.Record.PND value) {
        if (pNDBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pND_ = value;
          onChanged();
        } else {
          pNDBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public Builder setPND(
          promc.io.PBufFile.Record.PND.Builder builderForValue) {
        if (pNDBuilder_ == null) {
          pND_ = builderForValue.build();
          onChanged();
        } else {
          pNDBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public Builder mergePND(promc.io.PBufFile.Record.PND value) {
        if (pNDBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              pND_ != promc.io.PBufFile.Record.PND.getDefaultInstance()) {
            pND_ =
              promc.io.PBufFile.Record.PND.newBuilder(pND_).mergeFrom(value).buildPartial();
          } else {
            pND_ = value;
          }
          onChanged();
        } else {
          pNDBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public Builder clearPND() {
        if (pNDBuilder_ == null) {
          pND_ = promc.io.PBufFile.Record.PND.getDefaultInstance();
          onChanged();
        } else {
          pNDBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public promc.io.PBufFile.Record.PND.Builder getPNDBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getPNDFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      public promc.io.PBufFile.Record.PNDOrBuilder getPNDOrBuilder() {
        if (pNDBuilder_ != null) {
          return pNDBuilder_.getMessageOrBuilder();
        } else {
          return pND_;
        }
      }
      /**
       * <code>optional .promc.Record.PND pND = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PND, promc.io.PBufFile.Record.PND.Builder, promc.io.PBufFile.Record.PNDOrBuilder> 
          getPNDFieldBuilder() {
        if (pNDBuilder_ == null) {
          pNDBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.PND, promc.io.PBufFile.Record.PND.Builder, promc.io.PBufFile.Record.PNDOrBuilder>(
                  pND_,
                  getParentForChildren(),
                  isClean());
          pND_ = null;
        }
        return pNDBuilder_;
      }

      // optional .promc.Record.PNI pNI = 14;
      private promc.io.PBufFile.Record.PNI pNI_ = promc.io.PBufFile.Record.PNI.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PNI, promc.io.PBufFile.Record.PNI.Builder, promc.io.PBufFile.Record.PNIOrBuilder> pNIBuilder_;
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public boolean hasPNI() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public promc.io.PBufFile.Record.PNI getPNI() {
        if (pNIBuilder_ == null) {
          return pNI_;
        } else {
          return pNIBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public Builder setPNI(promc.io.PBufFile.Record.PNI value) {
        if (pNIBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pNI_ = value;
          onChanged();
        } else {
          pNIBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public Builder setPNI(
          promc.io.PBufFile.Record.PNI.Builder builderForValue) {
        if (pNIBuilder_ == null) {
          pNI_ = builderForValue.build();
          onChanged();
        } else {
          pNIBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public Builder mergePNI(promc.io.PBufFile.Record.PNI value) {
        if (pNIBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              pNI_ != promc.io.PBufFile.Record.PNI.getDefaultInstance()) {
            pNI_ =
              promc.io.PBufFile.Record.PNI.newBuilder(pNI_).mergeFrom(value).buildPartial();
          } else {
            pNI_ = value;
          }
          onChanged();
        } else {
          pNIBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public Builder clearPNI() {
        if (pNIBuilder_ == null) {
          pNI_ = promc.io.PBufFile.Record.PNI.getDefaultInstance();
          onChanged();
        } else {
          pNIBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public promc.io.PBufFile.Record.PNI.Builder getPNIBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getPNIFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      public promc.io.PBufFile.Record.PNIOrBuilder getPNIOrBuilder() {
        if (pNIBuilder_ != null) {
          return pNIBuilder_.getMessageOrBuilder();
        } else {
          return pNI_;
        }
      }
      /**
       * <code>optional .promc.Record.PNI pNI = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          promc.io.PBufFile.Record.PNI, promc.io.PBufFile.Record.PNI.Builder, promc.io.PBufFile.Record.PNIOrBuilder> 
          getPNIFieldBuilder() {
        if (pNIBuilder_ == null) {
          pNIBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              promc.io.PBufFile.Record.PNI, promc.io.PBufFile.Record.PNI.Builder, promc.io.PBufFile.Record.PNIOrBuilder>(
                  pNI_,
                  getParentForChildren(),
                  isClean());
          pNI_ = null;
        }
        return pNIBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:promc.Record)
    }

    static {
      defaultInstance = new Record(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:promc.Record)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_P0I_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_P0I_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_P0D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_P0D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_PXY_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_PXY_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_PXYZ_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_PXYZ_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_P1D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_P1D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_H1D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_H1D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_H2D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_H2D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_F1D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_F1D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_F2D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_F2D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_FND_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_FND_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_FPR_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_FPR_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_PND_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_PND_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_Record_PNI_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_Record_PNI_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rHRecord.proto\022\005promc\"\374\016\n\006Record\022\014\n\004nam" +
      "e\030\001 \001(\t\022\036\n\003p0I\030\002 \001(\0132\021.promc.Record.P0I\022" +
      "\036\n\003p0D\030\003 \001(\0132\021.promc.Record.P0D\022\036\n\003pXY\030\004" +
      " \001(\0132\021.promc.Record.PXY\022 \n\004pXYZ\030\005 \001(\0132\022." +
      "promc.Record.PXYZ\022\036\n\003p1D\030\006 \001(\0132\021.promc.R" +
      "ecord.P1D\022\036\n\003h1D\030\007 \001(\0132\021.promc.Record.H1" +
      "D\022\036\n\003h2D\030\010 \001(\0132\021.promc.Record.H2D\022\036\n\003f1D" +
      "\030\t \001(\0132\021.promc.Record.F1D\022\036\n\003f2D\030\n \001(\0132\021" +
      ".promc.Record.F2D\022\036\n\003fND\030\013 \001(\0132\021.promc.R" +
      "ecord.FND\022\036\n\003fPR\030\014 \001(\0132\021.promc.Record.FP",
      "R\022\036\n\003pND\030\r \001(\0132\021.promc.Record.PND\022\036\n\003pNI" +
      "\030\016 \001(\0132\021.promc.Record.PNI\032,\n\003P0I\022\022\n\004name" +
      "\030\001 \002(\t:\004none\022\021\n\005value\030\002 \003(\003B\002\020\001\032,\n\003P0D\022\022" +
      "\n\004name\030\001 \002(\t:\004none\022\021\n\005value\030\002 \003(\001B\002\020\001\0327\n" +
      "\003PXY\022\022\n\004name\030\001 \002(\t:\004none\022\r\n\001x\030\002 \003(\001B\002\020\001\022" +
      "\r\n\001y\030\003 \003(\001B\002\020\001\032G\n\004PXYZ\022\022\n\004name\030\001 \002(\t:\004no" +
      "ne\022\r\n\001x\030\002 \003(\001B\002\020\001\022\r\n\001y\030\003 \003(\001B\002\020\001\022\r\n\001z\030\004 " +
      "\003(\001B\002\020\001\032\341\001\n\003P1D\022\022\n\004name\030\001 \002(\t:\004none\022\r\n\001x" +
      "\030\002 \003(\001B\002\020\001\022\r\n\001y\030\003 \003(\001B\002\020\001\022\021\n\005xleft\030\004 \003(\001" +
      "B\002\020\001\022\022\n\006xright\030\005 \003(\001B\002\020\001\022\022\n\006yupper\030\006 \003(\001",
      "B\002\020\001\022\022\n\006ylower\030\007 \003(\001B\002\020\001\022\024\n\010xsysleft\030\010 \003" +
      "(\001B\002\020\001\022\025\n\txsysright\030\t \003(\001B\002\020\001\022\025\n\tysysupp" +
      "er\030\n \003(\001B\002\020\001\022\025\n\tysyslower\030\013 \003(\001B\002\020\001\032\263\002\n\003" +
      "H1D\022\022\n\004name\030\001 \002(\t:\004none\022\023\n\007heights\030\002 \003(\001" +
      "B\002\020\001\022\022\n\006errors\030\003 \003(\001B\002\020\001\022\021\n\005means\030\004 \003(\001B" +
      "\002\020\001\022\021\n\005rmses\030\005 \003(\001B\002\020\001\022\023\n\007entries\030\006 \003(\005B" +
      "\002\020\001\022\021\n\005edges\030\007 \003(\001B\002\020\001\022\014\n\004bins\030\010 \002(\005\022\013\n\003" +
      "min\030\t \002(\001\022\013\n\003max\030\n \002(\001\022\022\n\nallentries\030\013 \001" +
      "(\005\022\020\n\010nentries\030\014 \001(\005\022\021\n\tunderflow\030\r \001(\001\022" +
      "\020\n\010overflow\030\016 \001(\001\022\013\n\003rms\030\017 \001(\001\022\014\n\004mean\030\020",
      " \001(\001\022\023\n\013isFixedBins\030\021 \002(\010\032\217\002\n\003H2D\022\022\n\004nam" +
      "e\030\001 \002(\t:\004none\022\023\n\007heights\030\002 \003(\001B\002\020\001\022\022\n\006er" +
      "rors\030\003 \003(\001B\002\020\001\022\022\n\006meansX\030\004 \003(\001B\002\020\001\022\022\n\006rm" +
      "sesX\030\005 \003(\001B\002\020\001\022\023\n\007entries\030\006 \003(\005B\002\020\001\022\022\n\006m" +
      "eansY\030\007 \003(\001B\002\020\001\022\022\n\006rmsesY\030\010 \003(\001B\002\020\001\022\023\n\007s" +
      "ummary\030\t \003(\001B\002\020\001\022\026\n\noutofrange\030\n \003(\001B\002\020\001" +
      "\022\022\n\nallentries\030\013 \001(\005\022\020\n\010nentries\030\014 \001(\005\022\023" +
      "\n\013isFixedBins\030\r \002(\010\032G\n\003F1D\022\022\n\004name\030\001 \002(\t" +
      ":\004none\022\022\n\ndefinition\030\002 \002(\t\022\013\n\003min\030\003 \001(\001\022" +
      "\013\n\003max\030\004 \001(\001\032e\n\003F2D\022\022\n\004name\030\001 \002(\t:\004none\022",
      "\022\n\ndefinition\030\002 \002(\t\022\014\n\004minX\030\003 \001(\001\022\014\n\004max" +
      "X\030\004 \001(\001\022\014\n\004minY\030\005 \001(\001\022\014\n\004maxY\030\006 \001(\001\032;\n\003F" +
      "ND\022\022\n\004name\030\001 \002(\t:\004none\022\022\n\ndefinition\030\002 \002" +
      "(\t\022\014\n\004vars\030\003 \002(\t\032I\n\003FPR\022\022\n\004name\030\001 \002(\t:\004n" +
      "one\022\022\n\ndefinition\030\002 \002(\t\022\014\n\004divU\030\003 \002(\005\022\014\n" +
      "\004divV\030\004 \002(\005\032?\n\003PND\022\022\n\004name\030\001 \002(\t:\004none\022\021" +
      "\n\005value\030\002 \003(\001B\002\020\001\022\021\n\tdimension\030\003 \002(\005\032?\n\003" +
      "PNI\022\022\n\004name\030\001 \002(\t:\004none\022\021\n\005value\030\002 \003(\005B\002" +
      "\020\001\022\021\n\tdimension\030\003 \002(\005B\024\n\010promc.ioB\010PBufF" +
      "ile"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_promc_Record_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_promc_Record_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_descriptor,
              new java.lang.String[] { "Name", "P0I", "P0D", "PXY", "PXYZ", "P1D", "H1D", "H2D", "F1D", "F2D", "FND", "FPR", "PND", "PNI", });
          internal_static_promc_Record_P0I_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(0);
          internal_static_promc_Record_P0I_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_P0I_descriptor,
              new java.lang.String[] { "Name", "Value", });
          internal_static_promc_Record_P0D_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(1);
          internal_static_promc_Record_P0D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_P0D_descriptor,
              new java.lang.String[] { "Name", "Value", });
          internal_static_promc_Record_PXY_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(2);
          internal_static_promc_Record_PXY_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_PXY_descriptor,
              new java.lang.String[] { "Name", "X", "Y", });
          internal_static_promc_Record_PXYZ_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(3);
          internal_static_promc_Record_PXYZ_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_PXYZ_descriptor,
              new java.lang.String[] { "Name", "X", "Y", "Z", });
          internal_static_promc_Record_P1D_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(4);
          internal_static_promc_Record_P1D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_P1D_descriptor,
              new java.lang.String[] { "Name", "X", "Y", "Xleft", "Xright", "Yupper", "Ylower", "Xsysleft", "Xsysright", "Ysysupper", "Ysyslower", });
          internal_static_promc_Record_H1D_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(5);
          internal_static_promc_Record_H1D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_H1D_descriptor,
              new java.lang.String[] { "Name", "Heights", "Errors", "Means", "Rmses", "Entries", "Edges", "Bins", "Min", "Max", "Allentries", "Nentries", "Underflow", "Overflow", "Rms", "Mean", "IsFixedBins", });
          internal_static_promc_Record_H2D_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(6);
          internal_static_promc_Record_H2D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_H2D_descriptor,
              new java.lang.String[] { "Name", "Heights", "Errors", "MeansX", "RmsesX", "Entries", "MeansY", "RmsesY", "Summary", "Outofrange", "Allentries", "Nentries", "IsFixedBins", });
          internal_static_promc_Record_F1D_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(7);
          internal_static_promc_Record_F1D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_F1D_descriptor,
              new java.lang.String[] { "Name", "Definition", "Min", "Max", });
          internal_static_promc_Record_F2D_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(8);
          internal_static_promc_Record_F2D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_F2D_descriptor,
              new java.lang.String[] { "Name", "Definition", "MinX", "MaxX", "MinY", "MaxY", });
          internal_static_promc_Record_FND_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(9);
          internal_static_promc_Record_FND_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_FND_descriptor,
              new java.lang.String[] { "Name", "Definition", "Vars", });
          internal_static_promc_Record_FPR_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(10);
          internal_static_promc_Record_FPR_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_FPR_descriptor,
              new java.lang.String[] { "Name", "Definition", "DivU", "DivV", });
          internal_static_promc_Record_PND_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(11);
          internal_static_promc_Record_PND_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_PND_descriptor,
              new java.lang.String[] { "Name", "Value", "Dimension", });
          internal_static_promc_Record_PNI_descriptor =
            internal_static_promc_Record_descriptor.getNestedTypes().get(12);
          internal_static_promc_Record_PNI_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_Record_PNI_descriptor,
              new java.lang.String[] { "Name", "Value", "Dimension", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
