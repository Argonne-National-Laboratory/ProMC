// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProMCStat.proto

package promc.io;

public final class ProMCStatFile {
  private ProMCStatFile() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ProMCStatOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 nevents_requested = 1;
    /**
     * <code>optional int32 nevents_requested = 1;</code>
     *
     * <pre>
     * events requested 
     * </pre>
     */
    boolean hasNeventsRequested();
    /**
     * <code>optional int32 nevents_requested = 1;</code>
     *
     * <pre>
     * events requested 
     * </pre>
     */
    int getNeventsRequested();

    // optional int32 nevents_failed = 2;
    /**
     * <code>optional int32 nevents_failed = 2;</code>
     *
     * <pre>
     * events failed
     * </pre>
     */
    boolean hasNeventsFailed();
    /**
     * <code>optional int32 nevents_failed = 2;</code>
     *
     * <pre>
     * events failed
     * </pre>
     */
    int getNeventsFailed();

    // optional double cross_section_accumulated = 3;
    /**
     * <code>optional double cross_section_accumulated = 3;</code>
     *
     * <pre>
     *  cross section in pb (accumulated after all events) 
     * </pre>
     */
    boolean hasCrossSectionAccumulated();
    /**
     * <code>optional double cross_section_accumulated = 3;</code>
     *
     * <pre>
     *  cross section in pb (accumulated after all events) 
     * </pre>
     */
    double getCrossSectionAccumulated();

    // optional double cross_section_error_accumulated = 4;
    /**
     * <code>optional double cross_section_error_accumulated = 4;</code>
     *
     * <pre>
     *  error associated with this cross section in pb
     * </pre>
     */
    boolean hasCrossSectionErrorAccumulated();
    /**
     * <code>optional double cross_section_error_accumulated = 4;</code>
     *
     * <pre>
     *  error associated with this cross section in pb
     * </pre>
     */
    double getCrossSectionErrorAccumulated();

    // optional double luminosity_accumulated = 5;
    /**
     * <code>optional double luminosity_accumulated = 5;</code>
     *
     * <pre>
     *  accumulated luminosity in pb
     * </pre>
     */
    boolean hasLuminosityAccumulated();
    /**
     * <code>optional double luminosity_accumulated = 5;</code>
     *
     * <pre>
     *  accumulated luminosity in pb
     * </pre>
     */
    double getLuminosityAccumulated();

    // optional int32 nTried = 6;
    /**
     * <code>optional int32 nTried = 6;</code>
     *
     * <pre>
     * tried events
     * </pre>
     */
    boolean hasNTried();
    /**
     * <code>optional int32 nTried = 6;</code>
     *
     * <pre>
     * tried events
     * </pre>
     */
    int getNTried();

    // optional int32 nSelected = 7;
    /**
     * <code>optional int32 nSelected = 7;</code>
     *
     * <pre>
     * selected events
     * </pre>
     */
    boolean hasNSelected();
    /**
     * <code>optional int32 nSelected = 7;</code>
     *
     * <pre>
     * selected events
     * </pre>
     */
    int getNSelected();

    // optional int32 nAccepted = 8;
    /**
     * <code>optional int32 nAccepted = 8;</code>
     *
     * <pre>
     * accepted events
     * </pre>
     */
    boolean hasNAccepted();
    /**
     * <code>optional int32 nAccepted = 8;</code>
     *
     * <pre>
     * accepted events
     * </pre>
     */
    int getNAccepted();

    // repeated .promc.ProMCStat.ProcessData processData = 10;
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    java.util.List<promc.io.ProMCStatFile.ProMCStat.ProcessData> 
        getProcessDataList();
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    promc.io.ProMCStatFile.ProMCStat.ProcessData getProcessData(int index);
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    int getProcessDataCount();
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    java.util.List<? extends promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder> 
        getProcessDataOrBuilderList();
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder getProcessDataOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code promc.ProMCStat}
   */
  public static final class ProMCStat extends
      com.google.protobuf.GeneratedMessage
      implements ProMCStatOrBuilder {
    // Use ProMCStat.newBuilder() to construct.
    private ProMCStat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ProMCStat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ProMCStat defaultInstance;
    public static ProMCStat getDefaultInstance() {
      return defaultInstance;
    }

    public ProMCStat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ProMCStat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              neventsRequested_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              neventsFailed_ = input.readInt32();
              break;
            }
            case 25: {
              bitField0_ |= 0x00000004;
              crossSectionAccumulated_ = input.readDouble();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              crossSectionErrorAccumulated_ = input.readDouble();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000010;
              luminosityAccumulated_ = input.readDouble();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              nTried_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              nSelected_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              nAccepted_ = input.readInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                processData_ = new java.util.ArrayList<promc.io.ProMCStatFile.ProMCStat.ProcessData>();
                mutable_bitField0_ |= 0x00000100;
              }
              processData_.add(input.readMessage(promc.io.ProMCStatFile.ProMCStat.ProcessData.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          processData_ = java.util.Collections.unmodifiableList(processData_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              promc.io.ProMCStatFile.ProMCStat.class, promc.io.ProMCStatFile.ProMCStat.Builder.class);
    }

    public static com.google.protobuf.Parser<ProMCStat> PARSER =
        new com.google.protobuf.AbstractParser<ProMCStat>() {
      public ProMCStat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProMCStat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ProMCStat> getParserForType() {
      return PARSER;
    }

    public interface ProcessDataOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required sint32 id = 1;
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * process ID 
       * </pre>
       */
      boolean hasId();
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * process ID 
       * </pre>
       */
      int getId();

      // required double cross_section = 2;
      /**
       * <code>required double cross_section = 2;</code>
       *
       * <pre>
       * process cross section (in pb) 
       * </pre>
       */
      boolean hasCrossSection();
      /**
       * <code>required double cross_section = 2;</code>
       *
       * <pre>
       * process cross section (in pb) 
       * </pre>
       */
      double getCrossSection();

      // required double cross_section_error = 3;
      /**
       * <code>required double cross_section_error = 3;</code>
       *
       * <pre>
       * error on cross section 
       * </pre>
       */
      boolean hasCrossSectionError();
      /**
       * <code>required double cross_section_error = 3;</code>
       *
       * <pre>
       * error on cross section 
       * </pre>
       */
      double getCrossSectionError();

      // required string name = 4;
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * name of the process  
       * </pre>
       */
      boolean hasName();
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * name of the process  
       * </pre>
       */
      java.lang.String getName();
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * name of the process  
       * </pre>
       */
      com.google.protobuf.ByteString
          getNameBytes();
    }
    /**
     * Protobuf type {@code promc.ProMCStat.ProcessData}
     *
     * <pre>
     * store generated processes 
     * </pre>
     */
    public static final class ProcessData extends
        com.google.protobuf.GeneratedMessage
        implements ProcessDataOrBuilder {
      // Use ProcessData.newBuilder() to construct.
      private ProcessData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private ProcessData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final ProcessData defaultInstance;
      public static ProcessData getDefaultInstance() {
        return defaultInstance;
      }

      public ProcessData getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private ProcessData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readSInt32();
                break;
              }
              case 17: {
                bitField0_ |= 0x00000002;
                crossSection_ = input.readDouble();
                break;
              }
              case 25: {
                bitField0_ |= 0x00000004;
                crossSectionError_ = input.readDouble();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                name_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_ProcessData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_ProcessData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.ProMCStatFile.ProMCStat.ProcessData.class, promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder.class);
      }

      public static com.google.protobuf.Parser<ProcessData> PARSER =
          new com.google.protobuf.AbstractParser<ProcessData>() {
        public ProcessData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ProcessData(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<ProcessData> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required sint32 id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * process ID 
       * </pre>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 id = 1;</code>
       *
       * <pre>
       * process ID 
       * </pre>
       */
      public int getId() {
        return id_;
      }

      // required double cross_section = 2;
      public static final int CROSS_SECTION_FIELD_NUMBER = 2;
      private double crossSection_;
      /**
       * <code>required double cross_section = 2;</code>
       *
       * <pre>
       * process cross section (in pb) 
       * </pre>
       */
      public boolean hasCrossSection() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required double cross_section = 2;</code>
       *
       * <pre>
       * process cross section (in pb) 
       * </pre>
       */
      public double getCrossSection() {
        return crossSection_;
      }

      // required double cross_section_error = 3;
      public static final int CROSS_SECTION_ERROR_FIELD_NUMBER = 3;
      private double crossSectionError_;
      /**
       * <code>required double cross_section_error = 3;</code>
       *
       * <pre>
       * error on cross section 
       * </pre>
       */
      public boolean hasCrossSectionError() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required double cross_section_error = 3;</code>
       *
       * <pre>
       * error on cross section 
       * </pre>
       */
      public double getCrossSectionError() {
        return crossSectionError_;
      }

      // required string name = 4;
      public static final int NAME_FIELD_NUMBER = 4;
      private java.lang.Object name_;
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * name of the process  
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * name of the process  
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string name = 4;</code>
       *
       * <pre>
       * name of the process  
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private void initFields() {
        id_ = 0;
        crossSection_ = 0D;
        crossSectionError_ = 0D;
        name_ = "";
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCrossSection()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCrossSectionError()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasName()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeSInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeDouble(2, crossSection_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeDouble(3, crossSectionError_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getNameBytes());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(2, crossSection_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, crossSectionError_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getNameBytes());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static promc.io.ProMCStatFile.ProMCStat.ProcessData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(promc.io.ProMCStatFile.ProMCStat.ProcessData prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code promc.ProMCStat.ProcessData}
       *
       * <pre>
       * store generated processes 
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_ProcessData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_ProcessData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  promc.io.ProMCStatFile.ProMCStat.ProcessData.class, promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder.class);
        }

        // Construct using promc.io.ProMCStatFile.ProMCStat.ProcessData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          crossSection_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000002);
          crossSectionError_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000004);
          name_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_ProcessData_descriptor;
        }

        public promc.io.ProMCStatFile.ProMCStat.ProcessData getDefaultInstanceForType() {
          return promc.io.ProMCStatFile.ProMCStat.ProcessData.getDefaultInstance();
        }

        public promc.io.ProMCStatFile.ProMCStat.ProcessData build() {
          promc.io.ProMCStatFile.ProMCStat.ProcessData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public promc.io.ProMCStatFile.ProMCStat.ProcessData buildPartial() {
          promc.io.ProMCStatFile.ProMCStat.ProcessData result = new promc.io.ProMCStatFile.ProMCStat.ProcessData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.crossSection_ = crossSection_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.crossSectionError_ = crossSectionError_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.name_ = name_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof promc.io.ProMCStatFile.ProMCStat.ProcessData) {
            return mergeFrom((promc.io.ProMCStatFile.ProMCStat.ProcessData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(promc.io.ProMCStatFile.ProMCStat.ProcessData other) {
          if (other == promc.io.ProMCStatFile.ProMCStat.ProcessData.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasCrossSection()) {
            setCrossSection(other.getCrossSection());
          }
          if (other.hasCrossSectionError()) {
            setCrossSectionError(other.getCrossSectionError());
          }
          if (other.hasName()) {
            bitField0_ |= 0x00000008;
            name_ = other.name_;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasCrossSection()) {
            
            return false;
          }
          if (!hasCrossSectionError()) {
            
            return false;
          }
          if (!hasName()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          promc.io.ProMCStatFile.ProMCStat.ProcessData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (promc.io.ProMCStatFile.ProMCStat.ProcessData) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required sint32 id = 1;
        private int id_ ;
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * process ID 
         * </pre>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * process ID 
         * </pre>
         */
        public int getId() {
          return id_;
        }
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * process ID 
         * </pre>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required sint32 id = 1;</code>
         *
         * <pre>
         * process ID 
         * </pre>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        // required double cross_section = 2;
        private double crossSection_ ;
        /**
         * <code>required double cross_section = 2;</code>
         *
         * <pre>
         * process cross section (in pb) 
         * </pre>
         */
        public boolean hasCrossSection() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required double cross_section = 2;</code>
         *
         * <pre>
         * process cross section (in pb) 
         * </pre>
         */
        public double getCrossSection() {
          return crossSection_;
        }
        /**
         * <code>required double cross_section = 2;</code>
         *
         * <pre>
         * process cross section (in pb) 
         * </pre>
         */
        public Builder setCrossSection(double value) {
          bitField0_ |= 0x00000002;
          crossSection_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double cross_section = 2;</code>
         *
         * <pre>
         * process cross section (in pb) 
         * </pre>
         */
        public Builder clearCrossSection() {
          bitField0_ = (bitField0_ & ~0x00000002);
          crossSection_ = 0D;
          onChanged();
          return this;
        }

        // required double cross_section_error = 3;
        private double crossSectionError_ ;
        /**
         * <code>required double cross_section_error = 3;</code>
         *
         * <pre>
         * error on cross section 
         * </pre>
         */
        public boolean hasCrossSectionError() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required double cross_section_error = 3;</code>
         *
         * <pre>
         * error on cross section 
         * </pre>
         */
        public double getCrossSectionError() {
          return crossSectionError_;
        }
        /**
         * <code>required double cross_section_error = 3;</code>
         *
         * <pre>
         * error on cross section 
         * </pre>
         */
        public Builder setCrossSectionError(double value) {
          bitField0_ |= 0x00000004;
          crossSectionError_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required double cross_section_error = 3;</code>
         *
         * <pre>
         * error on cross section 
         * </pre>
         */
        public Builder clearCrossSectionError() {
          bitField0_ = (bitField0_ & ~0x00000004);
          crossSectionError_ = 0D;
          onChanged();
          return this;
        }

        // required string name = 4;
        private java.lang.Object name_ = "";
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         * name of the process  
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         * name of the process  
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         * name of the process  
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         * name of the process  
         * </pre>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         * name of the process  
         * </pre>
         */
        public Builder clearName() {
          bitField0_ = (bitField0_ & ~0x00000008);
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <code>required string name = 4;</code>
         *
         * <pre>
         * name of the process  
         * </pre>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          name_ = value;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:promc.ProMCStat.ProcessData)
      }

      static {
        defaultInstance = new ProcessData(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:promc.ProMCStat.ProcessData)
    }

    private int bitField0_;
    // optional int32 nevents_requested = 1;
    public static final int NEVENTS_REQUESTED_FIELD_NUMBER = 1;
    private int neventsRequested_;
    /**
     * <code>optional int32 nevents_requested = 1;</code>
     *
     * <pre>
     * events requested 
     * </pre>
     */
    public boolean hasNeventsRequested() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 nevents_requested = 1;</code>
     *
     * <pre>
     * events requested 
     * </pre>
     */
    public int getNeventsRequested() {
      return neventsRequested_;
    }

    // optional int32 nevents_failed = 2;
    public static final int NEVENTS_FAILED_FIELD_NUMBER = 2;
    private int neventsFailed_;
    /**
     * <code>optional int32 nevents_failed = 2;</code>
     *
     * <pre>
     * events failed
     * </pre>
     */
    public boolean hasNeventsFailed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 nevents_failed = 2;</code>
     *
     * <pre>
     * events failed
     * </pre>
     */
    public int getNeventsFailed() {
      return neventsFailed_;
    }

    // optional double cross_section_accumulated = 3;
    public static final int CROSS_SECTION_ACCUMULATED_FIELD_NUMBER = 3;
    private double crossSectionAccumulated_;
    /**
     * <code>optional double cross_section_accumulated = 3;</code>
     *
     * <pre>
     *  cross section in pb (accumulated after all events) 
     * </pre>
     */
    public boolean hasCrossSectionAccumulated() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double cross_section_accumulated = 3;</code>
     *
     * <pre>
     *  cross section in pb (accumulated after all events) 
     * </pre>
     */
    public double getCrossSectionAccumulated() {
      return crossSectionAccumulated_;
    }

    // optional double cross_section_error_accumulated = 4;
    public static final int CROSS_SECTION_ERROR_ACCUMULATED_FIELD_NUMBER = 4;
    private double crossSectionErrorAccumulated_;
    /**
     * <code>optional double cross_section_error_accumulated = 4;</code>
     *
     * <pre>
     *  error associated with this cross section in pb
     * </pre>
     */
    public boolean hasCrossSectionErrorAccumulated() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double cross_section_error_accumulated = 4;</code>
     *
     * <pre>
     *  error associated with this cross section in pb
     * </pre>
     */
    public double getCrossSectionErrorAccumulated() {
      return crossSectionErrorAccumulated_;
    }

    // optional double luminosity_accumulated = 5;
    public static final int LUMINOSITY_ACCUMULATED_FIELD_NUMBER = 5;
    private double luminosityAccumulated_;
    /**
     * <code>optional double luminosity_accumulated = 5;</code>
     *
     * <pre>
     *  accumulated luminosity in pb
     * </pre>
     */
    public boolean hasLuminosityAccumulated() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional double luminosity_accumulated = 5;</code>
     *
     * <pre>
     *  accumulated luminosity in pb
     * </pre>
     */
    public double getLuminosityAccumulated() {
      return luminosityAccumulated_;
    }

    // optional int32 nTried = 6;
    public static final int NTRIED_FIELD_NUMBER = 6;
    private int nTried_;
    /**
     * <code>optional int32 nTried = 6;</code>
     *
     * <pre>
     * tried events
     * </pre>
     */
    public boolean hasNTried() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 nTried = 6;</code>
     *
     * <pre>
     * tried events
     * </pre>
     */
    public int getNTried() {
      return nTried_;
    }

    // optional int32 nSelected = 7;
    public static final int NSELECTED_FIELD_NUMBER = 7;
    private int nSelected_;
    /**
     * <code>optional int32 nSelected = 7;</code>
     *
     * <pre>
     * selected events
     * </pre>
     */
    public boolean hasNSelected() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 nSelected = 7;</code>
     *
     * <pre>
     * selected events
     * </pre>
     */
    public int getNSelected() {
      return nSelected_;
    }

    // optional int32 nAccepted = 8;
    public static final int NACCEPTED_FIELD_NUMBER = 8;
    private int nAccepted_;
    /**
     * <code>optional int32 nAccepted = 8;</code>
     *
     * <pre>
     * accepted events
     * </pre>
     */
    public boolean hasNAccepted() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 nAccepted = 8;</code>
     *
     * <pre>
     * accepted events
     * </pre>
     */
    public int getNAccepted() {
      return nAccepted_;
    }

    // repeated .promc.ProMCStat.ProcessData processData = 10;
    public static final int PROCESSDATA_FIELD_NUMBER = 10;
    private java.util.List<promc.io.ProMCStatFile.ProMCStat.ProcessData> processData_;
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    public java.util.List<promc.io.ProMCStatFile.ProMCStat.ProcessData> getProcessDataList() {
      return processData_;
    }
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    public java.util.List<? extends promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder> 
        getProcessDataOrBuilderList() {
      return processData_;
    }
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    public int getProcessDataCount() {
      return processData_.size();
    }
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    public promc.io.ProMCStatFile.ProMCStat.ProcessData getProcessData(int index) {
      return processData_.get(index);
    }
    /**
     * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
     */
    public promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder getProcessDataOrBuilder(
        int index) {
      return processData_.get(index);
    }

    private void initFields() {
      neventsRequested_ = 0;
      neventsFailed_ = 0;
      crossSectionAccumulated_ = 0D;
      crossSectionErrorAccumulated_ = 0D;
      luminosityAccumulated_ = 0D;
      nTried_ = 0;
      nSelected_ = 0;
      nAccepted_ = 0;
      processData_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getProcessDataCount(); i++) {
        if (!getProcessData(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, neventsRequested_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, neventsFailed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(3, crossSectionAccumulated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, crossSectionErrorAccumulated_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeDouble(5, luminosityAccumulated_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, nTried_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, nSelected_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, nAccepted_);
      }
      for (int i = 0; i < processData_.size(); i++) {
        output.writeMessage(10, processData_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, neventsRequested_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, neventsFailed_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, crossSectionAccumulated_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, crossSectionErrorAccumulated_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, luminosityAccumulated_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, nTried_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, nSelected_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, nAccepted_);
      }
      for (int i = 0; i < processData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, processData_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static promc.io.ProMCStatFile.ProMCStat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static promc.io.ProMCStatFile.ProMCStat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(promc.io.ProMCStatFile.ProMCStat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code promc.ProMCStat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements promc.io.ProMCStatFile.ProMCStatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                promc.io.ProMCStatFile.ProMCStat.class, promc.io.ProMCStatFile.ProMCStat.Builder.class);
      }

      // Construct using promc.io.ProMCStatFile.ProMCStat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getProcessDataFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        neventsRequested_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        neventsFailed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        crossSectionAccumulated_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000004);
        crossSectionErrorAccumulated_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        luminosityAccumulated_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        nTried_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        nSelected_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        nAccepted_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        if (processDataBuilder_ == null) {
          processData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          processDataBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return promc.io.ProMCStatFile.internal_static_promc_ProMCStat_descriptor;
      }

      public promc.io.ProMCStatFile.ProMCStat getDefaultInstanceForType() {
        return promc.io.ProMCStatFile.ProMCStat.getDefaultInstance();
      }

      public promc.io.ProMCStatFile.ProMCStat build() {
        promc.io.ProMCStatFile.ProMCStat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public promc.io.ProMCStatFile.ProMCStat buildPartial() {
        promc.io.ProMCStatFile.ProMCStat result = new promc.io.ProMCStatFile.ProMCStat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.neventsRequested_ = neventsRequested_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.neventsFailed_ = neventsFailed_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.crossSectionAccumulated_ = crossSectionAccumulated_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.crossSectionErrorAccumulated_ = crossSectionErrorAccumulated_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.luminosityAccumulated_ = luminosityAccumulated_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.nTried_ = nTried_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.nSelected_ = nSelected_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.nAccepted_ = nAccepted_;
        if (processDataBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            processData_ = java.util.Collections.unmodifiableList(processData_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.processData_ = processData_;
        } else {
          result.processData_ = processDataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof promc.io.ProMCStatFile.ProMCStat) {
          return mergeFrom((promc.io.ProMCStatFile.ProMCStat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(promc.io.ProMCStatFile.ProMCStat other) {
        if (other == promc.io.ProMCStatFile.ProMCStat.getDefaultInstance()) return this;
        if (other.hasNeventsRequested()) {
          setNeventsRequested(other.getNeventsRequested());
        }
        if (other.hasNeventsFailed()) {
          setNeventsFailed(other.getNeventsFailed());
        }
        if (other.hasCrossSectionAccumulated()) {
          setCrossSectionAccumulated(other.getCrossSectionAccumulated());
        }
        if (other.hasCrossSectionErrorAccumulated()) {
          setCrossSectionErrorAccumulated(other.getCrossSectionErrorAccumulated());
        }
        if (other.hasLuminosityAccumulated()) {
          setLuminosityAccumulated(other.getLuminosityAccumulated());
        }
        if (other.hasNTried()) {
          setNTried(other.getNTried());
        }
        if (other.hasNSelected()) {
          setNSelected(other.getNSelected());
        }
        if (other.hasNAccepted()) {
          setNAccepted(other.getNAccepted());
        }
        if (processDataBuilder_ == null) {
          if (!other.processData_.isEmpty()) {
            if (processData_.isEmpty()) {
              processData_ = other.processData_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureProcessDataIsMutable();
              processData_.addAll(other.processData_);
            }
            onChanged();
          }
        } else {
          if (!other.processData_.isEmpty()) {
            if (processDataBuilder_.isEmpty()) {
              processDataBuilder_.dispose();
              processDataBuilder_ = null;
              processData_ = other.processData_;
              bitField0_ = (bitField0_ & ~0x00000100);
              processDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getProcessDataFieldBuilder() : null;
            } else {
              processDataBuilder_.addAllMessages(other.processData_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getProcessDataCount(); i++) {
          if (!getProcessData(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        promc.io.ProMCStatFile.ProMCStat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (promc.io.ProMCStatFile.ProMCStat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 nevents_requested = 1;
      private int neventsRequested_ ;
      /**
       * <code>optional int32 nevents_requested = 1;</code>
       *
       * <pre>
       * events requested 
       * </pre>
       */
      public boolean hasNeventsRequested() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 nevents_requested = 1;</code>
       *
       * <pre>
       * events requested 
       * </pre>
       */
      public int getNeventsRequested() {
        return neventsRequested_;
      }
      /**
       * <code>optional int32 nevents_requested = 1;</code>
       *
       * <pre>
       * events requested 
       * </pre>
       */
      public Builder setNeventsRequested(int value) {
        bitField0_ |= 0x00000001;
        neventsRequested_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nevents_requested = 1;</code>
       *
       * <pre>
       * events requested 
       * </pre>
       */
      public Builder clearNeventsRequested() {
        bitField0_ = (bitField0_ & ~0x00000001);
        neventsRequested_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nevents_failed = 2;
      private int neventsFailed_ ;
      /**
       * <code>optional int32 nevents_failed = 2;</code>
       *
       * <pre>
       * events failed
       * </pre>
       */
      public boolean hasNeventsFailed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 nevents_failed = 2;</code>
       *
       * <pre>
       * events failed
       * </pre>
       */
      public int getNeventsFailed() {
        return neventsFailed_;
      }
      /**
       * <code>optional int32 nevents_failed = 2;</code>
       *
       * <pre>
       * events failed
       * </pre>
       */
      public Builder setNeventsFailed(int value) {
        bitField0_ |= 0x00000002;
        neventsFailed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nevents_failed = 2;</code>
       *
       * <pre>
       * events failed
       * </pre>
       */
      public Builder clearNeventsFailed() {
        bitField0_ = (bitField0_ & ~0x00000002);
        neventsFailed_ = 0;
        onChanged();
        return this;
      }

      // optional double cross_section_accumulated = 3;
      private double crossSectionAccumulated_ ;
      /**
       * <code>optional double cross_section_accumulated = 3;</code>
       *
       * <pre>
       *  cross section in pb (accumulated after all events) 
       * </pre>
       */
      public boolean hasCrossSectionAccumulated() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional double cross_section_accumulated = 3;</code>
       *
       * <pre>
       *  cross section in pb (accumulated after all events) 
       * </pre>
       */
      public double getCrossSectionAccumulated() {
        return crossSectionAccumulated_;
      }
      /**
       * <code>optional double cross_section_accumulated = 3;</code>
       *
       * <pre>
       *  cross section in pb (accumulated after all events) 
       * </pre>
       */
      public Builder setCrossSectionAccumulated(double value) {
        bitField0_ |= 0x00000004;
        crossSectionAccumulated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cross_section_accumulated = 3;</code>
       *
       * <pre>
       *  cross section in pb (accumulated after all events) 
       * </pre>
       */
      public Builder clearCrossSectionAccumulated() {
        bitField0_ = (bitField0_ & ~0x00000004);
        crossSectionAccumulated_ = 0D;
        onChanged();
        return this;
      }

      // optional double cross_section_error_accumulated = 4;
      private double crossSectionErrorAccumulated_ ;
      /**
       * <code>optional double cross_section_error_accumulated = 4;</code>
       *
       * <pre>
       *  error associated with this cross section in pb
       * </pre>
       */
      public boolean hasCrossSectionErrorAccumulated() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double cross_section_error_accumulated = 4;</code>
       *
       * <pre>
       *  error associated with this cross section in pb
       * </pre>
       */
      public double getCrossSectionErrorAccumulated() {
        return crossSectionErrorAccumulated_;
      }
      /**
       * <code>optional double cross_section_error_accumulated = 4;</code>
       *
       * <pre>
       *  error associated with this cross section in pb
       * </pre>
       */
      public Builder setCrossSectionErrorAccumulated(double value) {
        bitField0_ |= 0x00000008;
        crossSectionErrorAccumulated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double cross_section_error_accumulated = 4;</code>
       *
       * <pre>
       *  error associated with this cross section in pb
       * </pre>
       */
      public Builder clearCrossSectionErrorAccumulated() {
        bitField0_ = (bitField0_ & ~0x00000008);
        crossSectionErrorAccumulated_ = 0D;
        onChanged();
        return this;
      }

      // optional double luminosity_accumulated = 5;
      private double luminosityAccumulated_ ;
      /**
       * <code>optional double luminosity_accumulated = 5;</code>
       *
       * <pre>
       *  accumulated luminosity in pb
       * </pre>
       */
      public boolean hasLuminosityAccumulated() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double luminosity_accumulated = 5;</code>
       *
       * <pre>
       *  accumulated luminosity in pb
       * </pre>
       */
      public double getLuminosityAccumulated() {
        return luminosityAccumulated_;
      }
      /**
       * <code>optional double luminosity_accumulated = 5;</code>
       *
       * <pre>
       *  accumulated luminosity in pb
       * </pre>
       */
      public Builder setLuminosityAccumulated(double value) {
        bitField0_ |= 0x00000010;
        luminosityAccumulated_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double luminosity_accumulated = 5;</code>
       *
       * <pre>
       *  accumulated luminosity in pb
       * </pre>
       */
      public Builder clearLuminosityAccumulated() {
        bitField0_ = (bitField0_ & ~0x00000010);
        luminosityAccumulated_ = 0D;
        onChanged();
        return this;
      }

      // optional int32 nTried = 6;
      private int nTried_ ;
      /**
       * <code>optional int32 nTried = 6;</code>
       *
       * <pre>
       * tried events
       * </pre>
       */
      public boolean hasNTried() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 nTried = 6;</code>
       *
       * <pre>
       * tried events
       * </pre>
       */
      public int getNTried() {
        return nTried_;
      }
      /**
       * <code>optional int32 nTried = 6;</code>
       *
       * <pre>
       * tried events
       * </pre>
       */
      public Builder setNTried(int value) {
        bitField0_ |= 0x00000020;
        nTried_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nTried = 6;</code>
       *
       * <pre>
       * tried events
       * </pre>
       */
      public Builder clearNTried() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nTried_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nSelected = 7;
      private int nSelected_ ;
      /**
       * <code>optional int32 nSelected = 7;</code>
       *
       * <pre>
       * selected events
       * </pre>
       */
      public boolean hasNSelected() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 nSelected = 7;</code>
       *
       * <pre>
       * selected events
       * </pre>
       */
      public int getNSelected() {
        return nSelected_;
      }
      /**
       * <code>optional int32 nSelected = 7;</code>
       *
       * <pre>
       * selected events
       * </pre>
       */
      public Builder setNSelected(int value) {
        bitField0_ |= 0x00000040;
        nSelected_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nSelected = 7;</code>
       *
       * <pre>
       * selected events
       * </pre>
       */
      public Builder clearNSelected() {
        bitField0_ = (bitField0_ & ~0x00000040);
        nSelected_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nAccepted = 8;
      private int nAccepted_ ;
      /**
       * <code>optional int32 nAccepted = 8;</code>
       *
       * <pre>
       * accepted events
       * </pre>
       */
      public boolean hasNAccepted() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 nAccepted = 8;</code>
       *
       * <pre>
       * accepted events
       * </pre>
       */
      public int getNAccepted() {
        return nAccepted_;
      }
      /**
       * <code>optional int32 nAccepted = 8;</code>
       *
       * <pre>
       * accepted events
       * </pre>
       */
      public Builder setNAccepted(int value) {
        bitField0_ |= 0x00000080;
        nAccepted_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nAccepted = 8;</code>
       *
       * <pre>
       * accepted events
       * </pre>
       */
      public Builder clearNAccepted() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nAccepted_ = 0;
        onChanged();
        return this;
      }

      // repeated .promc.ProMCStat.ProcessData processData = 10;
      private java.util.List<promc.io.ProMCStatFile.ProMCStat.ProcessData> processData_ =
        java.util.Collections.emptyList();
      private void ensureProcessDataIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          processData_ = new java.util.ArrayList<promc.io.ProMCStatFile.ProMCStat.ProcessData>(processData_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCStatFile.ProMCStat.ProcessData, promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder, promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder> processDataBuilder_;

      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public java.util.List<promc.io.ProMCStatFile.ProMCStat.ProcessData> getProcessDataList() {
        if (processDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(processData_);
        } else {
          return processDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public int getProcessDataCount() {
        if (processDataBuilder_ == null) {
          return processData_.size();
        } else {
          return processDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public promc.io.ProMCStatFile.ProMCStat.ProcessData getProcessData(int index) {
        if (processDataBuilder_ == null) {
          return processData_.get(index);
        } else {
          return processDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder setProcessData(
          int index, promc.io.ProMCStatFile.ProMCStat.ProcessData value) {
        if (processDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessDataIsMutable();
          processData_.set(index, value);
          onChanged();
        } else {
          processDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder setProcessData(
          int index, promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder builderForValue) {
        if (processDataBuilder_ == null) {
          ensureProcessDataIsMutable();
          processData_.set(index, builderForValue.build());
          onChanged();
        } else {
          processDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder addProcessData(promc.io.ProMCStatFile.ProMCStat.ProcessData value) {
        if (processDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessDataIsMutable();
          processData_.add(value);
          onChanged();
        } else {
          processDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder addProcessData(
          int index, promc.io.ProMCStatFile.ProMCStat.ProcessData value) {
        if (processDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessDataIsMutable();
          processData_.add(index, value);
          onChanged();
        } else {
          processDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder addProcessData(
          promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder builderForValue) {
        if (processDataBuilder_ == null) {
          ensureProcessDataIsMutable();
          processData_.add(builderForValue.build());
          onChanged();
        } else {
          processDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder addProcessData(
          int index, promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder builderForValue) {
        if (processDataBuilder_ == null) {
          ensureProcessDataIsMutable();
          processData_.add(index, builderForValue.build());
          onChanged();
        } else {
          processDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder addAllProcessData(
          java.lang.Iterable<? extends promc.io.ProMCStatFile.ProMCStat.ProcessData> values) {
        if (processDataBuilder_ == null) {
          ensureProcessDataIsMutable();
          super.addAll(values, processData_);
          onChanged();
        } else {
          processDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder clearProcessData() {
        if (processDataBuilder_ == null) {
          processData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          processDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public Builder removeProcessData(int index) {
        if (processDataBuilder_ == null) {
          ensureProcessDataIsMutable();
          processData_.remove(index);
          onChanged();
        } else {
          processDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder getProcessDataBuilder(
          int index) {
        return getProcessDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder getProcessDataOrBuilder(
          int index) {
        if (processDataBuilder_ == null) {
          return processData_.get(index);  } else {
          return processDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public java.util.List<? extends promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder> 
           getProcessDataOrBuilderList() {
        if (processDataBuilder_ != null) {
          return processDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(processData_);
        }
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder addProcessDataBuilder() {
        return getProcessDataFieldBuilder().addBuilder(
            promc.io.ProMCStatFile.ProMCStat.ProcessData.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder addProcessDataBuilder(
          int index) {
        return getProcessDataFieldBuilder().addBuilder(
            index, promc.io.ProMCStatFile.ProMCStat.ProcessData.getDefaultInstance());
      }
      /**
       * <code>repeated .promc.ProMCStat.ProcessData processData = 10;</code>
       */
      public java.util.List<promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder> 
           getProcessDataBuilderList() {
        return getProcessDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          promc.io.ProMCStatFile.ProMCStat.ProcessData, promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder, promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder> 
          getProcessDataFieldBuilder() {
        if (processDataBuilder_ == null) {
          processDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              promc.io.ProMCStatFile.ProMCStat.ProcessData, promc.io.ProMCStatFile.ProMCStat.ProcessData.Builder, promc.io.ProMCStatFile.ProMCStat.ProcessDataOrBuilder>(
                  processData_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          processData_ = null;
        }
        return processDataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:promc.ProMCStat)
    }

    static {
      defaultInstance = new ProMCStat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:promc.ProMCStat)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_ProMCStat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_ProMCStat_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_promc_ProMCStat_ProcessData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_promc_ProMCStat_ProcessData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\017ProMCStat.proto\022\005promc\"\360\002\n\tProMCStat\022\031" +
      "\n\021nevents_requested\030\001 \001(\005\022\026\n\016nevents_fai" +
      "led\030\002 \001(\005\022!\n\031cross_section_accumulated\030\003" +
      " \001(\001\022\'\n\037cross_section_error_accumulated\030" +
      "\004 \001(\001\022\036\n\026luminosity_accumulated\030\005 \001(\001\022\016\n" +
      "\006nTried\030\006 \001(\005\022\021\n\tnSelected\030\007 \001(\005\022\021\n\tnAcc" +
      "epted\030\010 \001(\005\0221\n\013processData\030\n \003(\0132\034.promc" +
      ".ProMCStat.ProcessData\032[\n\013ProcessData\022\n\n" +
      "\002id\030\001 \002(\021\022\025\n\rcross_section\030\002 \002(\001\022\033\n\023cros" +
      "s_section_error\030\003 \002(\001\022\014\n\004name\030\004 \002(\tB\031\n\010p",
      "romc.ioB\rProMCStatFile"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_promc_ProMCStat_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_promc_ProMCStat_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_ProMCStat_descriptor,
              new java.lang.String[] { "NeventsRequested", "NeventsFailed", "CrossSectionAccumulated", "CrossSectionErrorAccumulated", "LuminosityAccumulated", "NTried", "NSelected", "NAccepted", "ProcessData", });
          internal_static_promc_ProMCStat_ProcessData_descriptor =
            internal_static_promc_ProMCStat_descriptor.getNestedTypes().get(0);
          internal_static_promc_ProMCStat_ProcessData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_promc_ProMCStat_ProcessData_descriptor,
              new java.lang.String[] { "Id", "CrossSection", "CrossSectionError", "Name", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
